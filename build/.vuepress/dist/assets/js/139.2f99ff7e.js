(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{523:function(n,s,a){"use strict";a.r(s);var t=a(13),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"二叉查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉查找"}},[n._v("#")]),n._v(" 二叉查找")]),n._v(" "),a("p",[n._v("原文地址：https://blog.csdn.net/maoyuanming0806/article/details/78176957")]),n._v(" "),a("p",[n._v("思想：将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\t/**\n\t * 不使用递归的二分查找\n\t *title:commonBinarySearch\n\t *@param arr\n\t *@param key\n\t *@return 关键字位置\n\t */\n\tpublic static int commonBinarySearch(int[] arr,int key){\n\t\tint low = 0;\n\t\tint high = arr.length - 1;\n\t\tint middle = 0;\t\t\t//定义middle\n\t\t\n\t\tif(key < arr[low] || key > arr[high] || low > high){\n\t\t\treturn -1;\t\t\t\t\n\t\t}\n\t\t\n\t\t//一般不用递归的时候就用一个循环\n\t\twhile(low <= high){\n\t\t\tmiddle = (low + high) / 2;\n\t\t\tif(arr[middle] > key){\n\t\t\t\t//比关键字大则关键字在左区域\n\t\t\t\thigh = middle - 1;\n\t\t\t}else if(arr[middle] < key){\n\t\t\t\t//比关键字小则关键字在右区域\n\t\t\t\tlow = middle + 1;\n\t\t\t}else{\n\t\t\t\treturn middle;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\t\t//最后仍然没有找到，则返回-1\n\t}\n\n    /**\n\t * 使用递归的二分查找\n\t *title:recursionBinarySearch\n\t *@param arr 有序数组\n\t *@param key 待查找关键字\n\t *@return 找到的位置\n\t */\n\tpublic static int recursionBinarySearch(int[] arr,int key,int low,int high){\n\t\t\n\t\tif(key < arr[low] || key > arr[high] || low > high){\n\t\t\treturn -1;\t\t\t\t\n\t\t}\n\t\t\n\t\tint middle = (low + high) / 2;\t\t\t//初始中间位置\n\t\tif(arr[middle] > key){\n\t\t\t//比关键字大则关键字在左区域\n\t\t\treturn recursionBinarySearch(arr, key, low, middle - 1);\n\t\t}else if(arr[middle] < key){\n\t\t\t//比关键字小则关键字在右区域\n\t\t\treturn recursionBinarySearch(arr, key, middle + 1, high);\n\t\t}else {\n\t\t\treturn middle;\n\t\t}\t\n\t\t\n\t}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br")])]),a("h3",{attrs:{id:"字符串全排列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串全排列"}},[n._v("#")]),n._v(" 字符串全排列")]),n._v(" "),a("p",[n._v("输入一个字符串，打印出该字符串的所有排列。例如，输入字符串”abc”，则输出有字符’a’,’b’,’c’所能排列出来的所有字符串”abc”,”acb”,”bac”,”bca”,”cab”,”cba”。")]),n._v(" "),a("p",[n._v("原文地址：")]),n._v(" "),a("p",[n._v("https://www.cnblogs.com/liuzhen1995/p/6395361.html")]),n._v(" "),a("p",[n._v("https://www.jianshu.com/p/543299b4d302")]),n._v(" "),a("p",[n._v("https://segmentfault.com/a/1190000002710424")]),n._v(" "),a("p",[n._v("首先我要打印abc的全排列，就是第一步把a和bc交换（得到bac,cab），这需要一个for循环，循环里面有一个swap，交换之后就相当于不管第一步了，进入下一步递归，所以跟一个递归函数， 完成递归之后把交换的换回来，变成原来的字串递归方法1（July 方法）：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("abc 为例子：\n1. 固定a, 求后面bc的全排列： abc, acb。 求完后，a 和 b交换； 得到bac,开始第二轮\n2. 固定b, 求后面ac的全排列： bac, bca。 求完后，b 和 c交换； 得到cab,开始第三轮\n3. 固定c, 求后面ba的全排列： cab, cba\n 即递归树： \n　　　　　str:　　 a    　　　　 b 　　　　　　  c\n　　　　　　 　　ab ac     　　ba bc  　　　     ca cb\n　   　result:     abc acb    　 bac bca　     　   cab cba\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://txxs.github.io/pic/tofutureinterview/1-11.png",alt:"1"}})]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('package com.liuzhen.string_1;\n\npublic class StringArrange {//方法1：递归实现\n    /*\n     * 参数arrayA:给定字符串的字符数组\n     * 参数start:开始遍历字符与其后面各个字符将要进行交换的位置\n     * 参数end:字符串数组的最后一位\n     * 函数功能：输出字符串数字的各个字符全排列\n     */\n    public void recursionArrange(char[] arrayA,int start,int end){\n        if(end <= 1)   \n             return;\n        //满足最后条件则可以输出，而且输出的是本数组，因为经过了交换，没有辅助数组，所以一个一个输出就可以达到目的\n        if(start == end){\n            for(int i = 0;i < arrayA.length;i++)\n                System.out.print(arrayA[i]);\n            System.out.println();\n        }\n        else{\n            // for循环依次选取当前数组start至en\n            for(int i = start;i <= end;i++){\n                /**\n                 * 把索引到的数据元素与第一个元素的位置交换，表示选取了此数据做排列第一个\n                 * 交换的目的就是为了后面更好的递归，不会出现交叉情况，而且不增加额外的\n                 * 核心思想就是：第一个和后边的交换\n                 **/\n                swap(arrayA,i,start);\n                //重复此操作依次选择第2,3,...,n位的数据\n                recursionArrange(arrayA,start+1,end);\n                //每交换依次，弄完了记得把数据交换回来，防止后面\n                swap(arrayA,i,start);\n            }\n        }\n        \n    }\n    //交换数组m位置和n位置上的值\n    public void swap(char[] arrayA,int m,int n){\n        char temp = arrayA[m];\n        arrayA[m] = arrayA[n];\n        arrayA[n] = temp;\n    }\n    \n    public static void main(String[] args){\n        StringArrange test = new StringArrange();\n        String A = "abc";\n        char[] arrayA = A.toCharArray();\n        test.recursionArrange(arrayA,0,arrayA.length-1);\n    }\n}\n\n\n输出顺序：\n\nabc（出始第一次，各个交换位置都没有变）\nacb\nbac\nbca\ncba\ncab\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br")])]),a("h3",{attrs:{id:"快速排序-注意和二叉排序的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速排序-注意和二叉排序的区别"}},[n._v("#")]),n._v(" 快速排序（注意和二叉排序的区别）")]),n._v(" "),a("p",[n._v("基本思想：\n1．先从数列中取出一个数作为基准数。\n2．分区过程，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边。\n3．再对左右区间重复第二步，直到各区间只有一个数。根据以上步骤，很容易得出答案C")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("public class QuickSort {\n\tpublic static void main(String[] args) {\n\t\tint[] x = { 9, 2, 4, 7, 3, 7, 10 };\n\t\tSystem.out.println(Arrays.toString(x));\n \n\t\tint low = 0;\n\t\tint high = x.length - 1;\n \n\t\tquickSort(x, low, high);\n\t\tSystem.out.println(Arrays.toString(x));\n\t}\n \n\tpublic static void quickSort(int[] arr, int low, int high) {\n\t\tif (arr == null || arr.length == 0)\n\t\t\treturn;\n \n\t\tif (low >= high)\n\t\t\treturn;\n \n\t\t// 选择基准点\n\t\tint middle = low + (high - low) / 2;\n\t\tint pivot = arr[middle];\n \n\t\t// 使得 left < pivot 和 right > pivot\n\t\tint i = low, j = high;\n\t\twhile (i <= j) {\n\t\t\t//如果小的话就继续下一个\n\t\t\twhile (arr[i] < pivot) {\n\t\t\t\ti++;\n\t\t\t}\n \t\t\t//大的话也是继续下一个\n\t\t\twhile (arr[j] > pivot) {\n\t\t\t\tj--;\n\t\t\t}\n \n\t\t\t//如果这两种情况都不是就交换\n\t\t\tif (i <= j) {\n\t\t\t\tint temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n \n\t\t// 递归调用两个子部分\n\t\tif (low < j)\n\t\t\tquickSort(arr, low, j);\n \n\t\tif (high > i)\n\t\t\tquickSort(arr, i, high);\n\t}\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br")])]),a("h3",{attrs:{id:"两个线程实现交替运行-以交替打印奇偶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个线程实现交替运行-以交替打印奇偶"}},[n._v("#")]),n._v(" 两个线程实现交替运行-以交替打印奇偶")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public class Work2 {\n    static final Object object = new Object();\n\n    public static void main(String[] args) {\n\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                synchronized (object) {\n                    for (int i = 1; i < 10; i += 2) {\n                        System.out.println(Thread.currentThread().getName() + "    " + i);\n                        object.notify();\n                        try {\n                            object.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                }\n            }\n        }, "t1");\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                synchronized (object) {\n                    for (int i = 2; i < 10; i += 2) {\n                        System.out.println(Thread.currentThread().getName() + "     " + i);\n                        object.notify();\n                        try {\n                            object.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                }\n            }\n        }, "t2");\n        t1.start();\n        t2.start();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br")])]),a("h3",{attrs:{id:"生产者消费者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者消费者"}},[n._v("#")]),n._v(" 生产者消费者")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('https://juejin.im/entry/596343686fb9a06bbd6f888c\n\n/**\n * 生产者和消费者，wait()和notify()的实现\n * @author ZGJ\n * @date 2017年6月22日\n */\npublic class Test1 {\n    private static Integer count = 0;\n    private static final Integer FULL = 10;\n    private static String LOCK = "lock";\n    \n    public static void main(String[] args) {\n        Test1 test1 = new Test1();\n        new Thread(test1.new Producer()).start();\n        new Thread(test1.new Consumer()).start();\n        new Thread(test1.new Producer()).start();\n        new Thread(test1.new Consumer()).start();\n        new Thread(test1.new Producer()).start();\n        new Thread(test1.new Consumer()).start();\n        new Thread(test1.new Producer()).start();\n        new Thread(test1.new Consumer()).start();\n    }\n    class Producer implements Runnable {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    Thread.sleep(3000);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                synchronized (LOCK) {\n                    while (count == FULL) {\n                        try {\n                            LOCK.wait();\n                        } catch (Exception e) {\n                            e.printStackTrace();\n                        }\n                    }\n                    count++;\n                    System.out.println(Thread.currentThread().getName() + "生产者生产，目前总共有" + count);\n                    LOCK.notifyAll();\n                }\n            }\n        }\n    }\n    class Consumer implements Runnable {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    Thread.sleep(3000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                synchronized (LOCK) {\n                    while (count == 0) {\n                        try {\n                            LOCK.wait();\n                        } catch (Exception e) {\n                        }\n                    }\n                    count--;\n                    System.out.println(Thread.currentThread().getName() + "消费者消费，目前总共有" + count);\n                    LOCK.notifyAll();\n                }\n            }\n        }\n    }\n}\n\n\n另外一个方式\n\nimport java.util.concurrent.locks.Condition;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n/**\n * 生产者和消费者，ReentrantLock的实现\n * \n * @author ZGJ\n * @date 2017年6月22日\n */\npublic class Test2 {\n    private static Integer count = 0;\n    private static final Integer FULL = 10;\n    //创建一个锁对象\n    private Lock lock = new ReentrantLock();\n    //创建两个条件变量，一个为缓冲区非满，一个为缓冲区非空\n    private final Condition producerlock = lock.newCondition();\n    private final Condition consumerlock = lock.newCondition();\n    public static void main(String[] args) {\n        Test2 test2 = new Test2();\n        new Thread(test2.new Producer()).start();\n        new Thread(test2.new Consumer()).start();\n        new Thread(test2.new Producer()).start();\n        new Thread(test2.new Consumer()).start();\n        new Thread(test2.new Producer()).start();\n        new Thread(test2.new Consumer()).start();\n        new Thread(test2.new Producer()).start();\n        new Thread(test2.new Consumer()).start();\n    }\n    class Producer implements Runnable {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    Thread.sleep(3000);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                //获取锁\n                lock.lock();\n                try {\n                    while (count == FULL) {\n                        try {\n                            producerlock.await();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                    count++;\n                    System.out.println(Thread.currentThread().getName()\n                            + "生产者生产，目前总共有" + count);\n                    //唤醒消费者\n                    consumerlock.signal();\n                } finally {\n                    //释放锁\n                    lock.unlock();\n                }\n            }\n        }\n    }\n    class Consumer implements Runnable {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    Thread.sleep(3000);\n                } catch (InterruptedException e1) {\n                    e1.printStackTrace();\n                }\n                lock.lock();\n                try {\n                    while (count == 0) {\n                        try {\n                            consumerlock.await();\n                        } catch (Exception e) {\n                            e.printStackTrace();\n                        }\n                    }\n                    count--;\n                    System.out.println(Thread.currentThread().getName()\n                            + "消费者消费，目前总共有" + count);\n                    producerlock.signal();\n                } finally {\n                    lock.unlock();\n                }\n            }\n        }\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br"),a("span",{staticClass:"line-number"},[n._v("132")]),a("br"),a("span",{staticClass:"line-number"},[n._v("133")]),a("br"),a("span",{staticClass:"line-number"},[n._v("134")]),a("br"),a("span",{staticClass:"line-number"},[n._v("135")]),a("br"),a("span",{staticClass:"line-number"},[n._v("136")]),a("br"),a("span",{staticClass:"line-number"},[n._v("137")]),a("br"),a("span",{staticClass:"line-number"},[n._v("138")]),a("br"),a("span",{staticClass:"line-number"},[n._v("139")]),a("br"),a("span",{staticClass:"line-number"},[n._v("140")]),a("br"),a("span",{staticClass:"line-number"},[n._v("141")]),a("br"),a("span",{staticClass:"line-number"},[n._v("142")]),a("br"),a("span",{staticClass:"line-number"},[n._v("143")]),a("br"),a("span",{staticClass:"line-number"},[n._v("144")]),a("br"),a("span",{staticClass:"line-number"},[n._v("145")]),a("br"),a("span",{staticClass:"line-number"},[n._v("146")]),a("br"),a("span",{staticClass:"line-number"},[n._v("147")]),a("br"),a("span",{staticClass:"line-number"},[n._v("148")]),a("br"),a("span",{staticClass:"line-number"},[n._v("149")]),a("br"),a("span",{staticClass:"line-number"},[n._v("150")]),a("br"),a("span",{staticClass:"line-number"},[n._v("151")]),a("br"),a("span",{staticClass:"line-number"},[n._v("152")]),a("br"),a("span",{staticClass:"line-number"},[n._v("153")]),a("br"),a("span",{staticClass:"line-number"},[n._v("154")]),a("br"),a("span",{staticClass:"line-number"},[n._v("155")]),a("br"),a("span",{staticClass:"line-number"},[n._v("156")]),a("br"),a("span",{staticClass:"line-number"},[n._v("157")]),a("br"),a("span",{staticClass:"line-number"},[n._v("158")]),a("br"),a("span",{staticClass:"line-number"},[n._v("159")]),a("br"),a("span",{staticClass:"line-number"},[n._v("160")]),a("br"),a("span",{staticClass:"line-number"},[n._v("161")]),a("br"),a("span",{staticClass:"line-number"},[n._v("162")]),a("br"),a("span",{staticClass:"line-number"},[n._v("163")]),a("br"),a("span",{staticClass:"line-number"},[n._v("164")]),a("br")])]),a("h3",{attrs:{id:"手写线程池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写线程池"}},[n._v("#")]),n._v(" 手写线程池")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('https://blog.csdn.net/cheidou123/article/details/78700302\npackage doThreadPool;\n \nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n \nimport antlr.collections.List;\n \npublic class ThreadExcutor {\n   private volatile boolean RUNNING=true;\n   //阻塞队列\n   private static BlockingQueue<Runnable> queue=null;\n   //对于一个final变量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。\n   private final HashSet<Worker> workers = new HashSet<Worker>();\n   \n   private final ArrayList<Thread> threadList = new ArrayList<Thread>();\n   \n   \n   int poolSize = 0;\n   \n   int coreSize = 0;\n \n   boolean shutdown = false;\n   \n   //构造函数,\n   public ThreadExcutor(int poolSize){\n       this.poolSize = poolSize;\n       queue = new LinkedBlockingQueue<Runnable>(poolSize);\n   }\n   \n   public void exec(Runnable runnable) {\n       if (runnable == null) throw new NullPointerException();\n       if(coreSize < poolSize){         \n           addThread(runnable);                \n       }else{\n           //System.out.println("offer" +  runnable.toString() + "   " + queue.size());\n           try {\n               queue.put(runnable);                //coreSize>poolSzie 加入阻塞队列中去\n           } catch (InterruptedException e) {\n               e.printStackTrace();\n           }\n       }\n   }\n   \n   public void addThread(Runnable runnable){\n       coreSize ++;                                 //正在工作的线程+1\n       Worker worker = new Worker(runnable);        //\n       workers.add(worker);                         \n       Thread t = new Thread(worker);              \n       threadList.add(t);                          \n       try {\n           t.start();\n       }catch (Exception e){\n           e.printStackTrace();\n       }\n \n   }\n \n   public void shutdown() {\n       RUNNING = false;\n       if(!workers.isEmpty()){\n           for (Worker worker : workers){\n               worker.interruptIfIdle();\n           }\n       }\n       shutdown = true;\n       Thread.currentThread().interrupt();\n   }\n\t\n   class  Worker implements Runnable{\n \n       public Worker(Runnable runnable){\n           queue.offer(runnable);                  //将这个runable将入到队列中去\n       }\n \n       @Override\n       public void run() {\n           while (true && RUNNING){\n               if(shutdown == true){\n                   Thread.interrupted();\n               }\n               Runnable task = null;\n               try {\n                   task = getTask();\n                   task.run();\n               } catch (InterruptedException e) {\n                   e.printStackTrace();\n               }\n           }\n       }\n \n       public Runnable getTask() throws InterruptedException {\n           return queue.take();                   \n       }\n \n       public void interruptIfIdle() {\n           for (Thread thread :threadList) {\n               System.out.println(thread.getName() + " interrupt");\n               thread.interrupt();\n           }\n       }\n\t\n}}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br")])]),a("h3",{attrs:{id:"三个线程按照顺序输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个线程按照顺序输出"}},[n._v("#")]),n._v(" 三个线程按照顺序输出")]),n._v(" "),a("p",[n._v("有A,B,C三个线程, A线程输出A, B线程输出B, C线程输出C，要求, 同时启动三个线程, 按顺序输出ABC, 循环10次，这是一个多线程协同的问题, 本身多线程是没有执行顺序的, 顺序不一定, Java在concurrent里面提供了多线程同步的支持，使用ReentrantLock来解决, 还有个state整数用来判断轮到谁执行了")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class ABC {\n    private static Lock lock = new ReentrantLock();//通过JDK5中的锁来保证线程的访问的互斥\n    private static int state = 0;\n    \n    static class ThreadA extends Thread {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10;) {\n                lock.lock();\n                if (state % 3 == 0) {\n                    System.out.print("A");\n                    state++;\n                    i++;\n                }\n                lock.unlock();\n            }\n        }\n    }\n    \n    static class ThreadB extends Thread {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10;) {\n                lock.lock();\n                if (state % 3 == 1) {\n                    System.out.print("B");\n                    state++;\n                    i++;\n                }\n                lock.unlock();\n            }\n        }\n    }\n    \n    static class ThreadC extends Thread {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10;) {\n                lock.lock();\n                if (state % 3 == 2) {\n                    System.out.print("C");\n                    state++;\n                    i++;\n                }\n                lock.unlock();\n            }\n        }\n    }\n    \n    public static void main(String[] args) {\n        new ThreadA().start();\n        new ThreadB().start();\n        new ThreadC().start();\n    }\n    \n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br")])]),a("h3",{attrs:{id:"一组数中只有一个是奇数个-怎么找到这个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一组数中只有一个是奇数个-怎么找到这个数"}},[n._v("#")]),n._v(" 一组数中只有一个是奇数个，怎么找到这个数")]),n._v(" "),a("p",[n._v("题目：给定一个含有n个元素的整型数组array，其中只有一个元素出现奇数次，找出这个元素。\n分析：因为对于任意一个数 k，k^k = 0，k^0 = k，所以将array中所有元素进行异或，那么个数为偶数的元素异或后都变成了0，只留下了个数为奇数的那个元素。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("int FindData(int arr[], int len){\n    int num = arr[0];\n    for (int i = 1; i < len; i++){\n        num ^= arr[i];\n    }\n    return num;\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("p",[n._v("原文地址：")]),n._v(" "),a("p",[n._v("https://www.jianshu.com/p/25ddeb1d9adf")]),n._v(" "),a("p",[n._v("https://blog.csdn.net/zmazon/article/details/8262185")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n含义\t运算符\t例子\n左移\t<<\t0011 => 0110\n\n右移\t>>\t0110 => 0011\n\n按位或\t︳\t0011\n------- => 1011\n1011\n\n按位与\t&\t0011\n------- => 0011\n1011\n\n按位取反\t~\t0011 => 1100\n\n按位异或 (相同为零不同为一)\t^\t0011\n------- => 1000\n1011\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br")])]),a("h3",{attrs:{id:"不用临时变量交换两个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不用临时变量交换两个数"}},[n._v("#")]),n._v(" 不用临时变量交换两个数")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("a ^= b;\nb ^= a;\na ^= b;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("h3",{attrs:{id:"单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[n._v("#")]),n._v(" 单例模式")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("public class SingletonDemo7 {\n    private volatile static SingletonDemo7 singletonDemo7;\n    private SingletonDemo7(){}\n    public static SingletonDemo7 getSingletonDemo7(){\n    if (singletonDemo7 == null) {\n        synchronized (SingletonDemo7.class) {\n            if (singletonDemo7 == null) {\n                singletonDemo7 = new SingletonDemo7();\n            }\n        }\n    }\n    return singletonDemo7;\n }\n}\n\n\n###  Implement Stack using Queues \n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("class MyStack {\nLinkedList"),a("Integer",[n._v(" queue1 = new LinkedList"),a("Integer",[n._v("();\nLinkedList"),a("Integer",[n._v(" queue2 = new LinkedList"),a("Integer",[n._v("();")])],1)],1)],1)],1),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("// Push element x onto stack.\npublic void push(int x) {\n    if(empty()){\n        queue1.offer(x);\n    }else{\n        if(queue1.size()>0){\n            queue2.offer(x);\n            int size = queue1.size();\n            while(size>0){\n                queue2.offer(queue1.poll());\n                size--;\n            }\n        }else if(queue2.size()>0){\n            queue1.offer(x);\n            int size = queue2.size();\n            while(size>0){\n                queue1.offer(queue2.poll());\n                size--;\n            }\n        }\n    }\n}\n\n// Removes the element on top of the stack.\npublic void pop() {\n    if(queue1.size()>0){\n        queue1.poll();\n    }else if(queue2.size()>0){\n        queue2.poll();\n    }\n}\n\n// Get the top element.\npublic int top() {\n   if(queue1.size()>0){\n        return queue1.peek();\n    }else if(queue2.size()>0){\n        return queue2.peek();\n    }\n    return 0;\n}\n\n// Return whether the stack is empty.\npublic boolean empty() {\n    return queue1.isEmpty() & queue2.isEmpty();\n}\n")])])]),a("p",[n._v("}")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n### Implement Queue using Stacks (Java)\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("class MyQueue {")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("Stack<Integer> temp = new Stack<Integer>();\nStack<Integer> value = new Stack<Integer>();\n\n// Push element x to the back of queue.\npublic void push(int x) {\n    if(value.isEmpty()){\n        value.push(x);\n    }else{\n        while(!value.isEmpty()){\n            temp.push(value.pop());\n        }\n\n        value.push(x);\n\n        while(!temp.isEmpty()){\n            value.push(temp.pop());\n        }    \n    }\n}\n\n// Removes the element from in front of queue.\npublic void pop() {\n    value.pop();\n}\n\n// Get the front element.\npublic int peek() {\n    return value.peek();\n}\n\n// Return whether the queue is empty.\npublic boolean empty() {\n    return value.isEmpty();\n}\n")])])]),a("p",[n._v("}")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n### 给一个数组，给一个函数实现第m位到第n位的和，请求量很大是怎么办\n\n- 事先计算好sum[i], 表示从0到i的和，要求m到n的和，直接return sum[n] - sum[m];\n- 应该是请求多的时候，每次都遍历求比较费时\n\n### 一个数组，有正有负，把正的移到右边，负的移到左边\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[n._v("/**")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("一个数组，有正有负，把正的移到右边，负的移到左边")])]),n._v(" "),a("li",[a("p",[n._v("@author pangjianfei\n"),a("em",[n._v("/\npublic class PartTest {\n/")]),n._v("*")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("方法1：负数在左，正数在右")])]),n._v(" "),a("li",[a("p",[n._v("@param a\n*/\npublic void setParted(int [] a) {\nint temp = 0;\nint posi = -1;")]),n._v(" "),a("p",[n._v("for(int i=0;i<a.length;i++) {\nif(a[i] < 0) {\ntemp = a[i];\na[i] = a[posi+1];\na[posi+1] = temp;\nposi++;\n}\n}")]),n._v(" "),a("p",[n._v("for(int i=0;i<a.length;i++) {\nSystem.out.println(a[i]);\n}\n}")])])]),n._v(" "),a("p",[n._v("/**")]),n._v(" "),a("ul",[a("li",[n._v("方法2")]),n._v(" "),a("li",[n._v("@param a")]),n._v(" "),a("li",[n._v("@param left")]),n._v(" "),a("li",[n._v("@param right\n*/\npublic void setParted2(int [] a,int left,int right) {\nif(left>=right||left==a.length||right==0){\nfor(int i=0;i<a.length;i++){\nSystem.out.println(a[i]);\n}\nreturn ;\n}\nwhile(a[left]<0){\nleft++;\n}\nwhile(a[right]>=0){\nright--;\n}\nif(left>=right||left==a.length||right==0){\nfor(int i=0;i<a.length;i++){\nSystem.out.println(a[i]);\n}\nreturn;\n}\nswap(a,left,right);\nleft++;\nright--;\nsetParted2(a,left,right);\n}\nprivate void swap(int a[],int left,int right){\nint temp=0;\ntemp=a[left];\na[left]=a[right];\na[right]=temp;\n}")])]),n._v(" "),a("p",[n._v("public static void main(String[] args) {\nint a[] = {2,-3,1,7,-5,4,-2};\nnew PartTest().setParted2(a,0,a.length-1);\n}\n}")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n### 青蛙跳台阶的递归和非递归解法\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("int Fib(int n)  {"),a("br"),n._v("\nif (1 == n || 2 == n)"),a("br"),n._v("\nreturn n;\nelse\nreturn Fib(n - 1) + Fib(n - 2);"),a("br"),n._v("\n}"),a("br"),n._v("\n}")]),n._v(" "),a("p",[n._v("public static int calc3(int n) {"),a("br"),n._v("\nif (1 == n || 2 == n)"),a("br"),n._v("\nreturn n;")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("int s1 = 1, s2 = 2, s3 = 1;  \nfor (int i = 3; i <= n; i++) {  \n    s3 = s1 + s2;  \n    s1 = s2;  \n    s2 = s3;  \n}  \nreturn s3;  \n")])])]),a("p",[n._v("}")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n### 旋转数组\n\nFor example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. \n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("public void rotate(int[] nums, int k) {\nif(k > nums.length)\nk=k%nums.length;")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("int[] result = new int[nums.length];\n\nfor(int i=0; i < k; i++){\n    result[i] = nums[nums.length-k+i];\n}\n\nint j=0;\nfor(int i=k; i<nums.length; i++){\n    result[i] = nums[j];\n    j++;\n}\n\nSystem.arraycopy( result, 0, nums, 0, nums.length );\n")])])]),a("p",[n._v("}")]),n._v(" "),a("p",[n._v("public int[] rotate(int[] nums, int k) {")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("k =  k % nums.length;\nint[] result = new int[nums.length];\nfor (int i = 0; i < nums.length; i++) {\n    result[(i + k) % nums.length] = nums[i];\n}\nreturn result;\n")])])]),a("p",[n._v("}")]),n._v(" "),a("p",[n._v("public int[] rotate1(int[] nums, int k) {\nreverse(nums, 0, nums.length - 1 - k);\nreverse(nums, nums.length - k, nums.length - 1);\nreverse(nums, 0, nums.length - 1);\nreturn nums;\n}")]),n._v(" "),a("p",[n._v("private void reverse(int[] nums, int start, int end) {\nwhile (start < end) {\nint tmp = nums[start];\nnums[start++] = nums[end];\nnums[end--] = tmp;\n}\n}")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
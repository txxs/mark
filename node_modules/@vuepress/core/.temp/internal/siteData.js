/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "Mark",
  "description": "本博客主要是用来记录系统化的知识，内容部分来自github上的其他开源仓库，如有问题联系sdlyjhm01@sina.com",
  "base": "/mark/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/mark/mlogo.svg"
      }
    ],
    [
      "link",
      {
        "rel": "manifest",
        "href": "/mark/manifest.json"
      }
    ]
  ],
  "pages": [
    {
      "frontmatter": {},
      "regularPath": "/algo/",
      "relativePath": "algo/README.md",
      "key": "v-4aece31d",
      "path": "/algo/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/algo/LRU%E7%BC%93%E5%AD%98.html",
      "relativePath": "algo/LRU缓存.md",
      "key": "v-31a9402e",
      "path": "/algo/LRU%E7%BC%93%E5%AD%98.html",
      "headers": [
        {
          "level": 3,
          "title": "整体思路",
          "slug": "整体思路"
        },
        {
          "level": 3,
          "title": "节点内容",
          "slug": "节点内容"
        },
        {
          "level": 3,
          "title": "具体算法",
          "slug": "具体算法"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "mlogo.svg",
        "actionText": "项目介绍 →",
        "actionLink": "/introduce/",
        "features": [
          {
            "title": "持续学习",
            "details": "每天至少一小时学习，才是真的靠谱"
          },
          {
            "title": "边学边记",
            "details": "学习过程中记录笔记，防止忘记。"
          },
          {
            "title": "知识库",
            "details": "积少成多，串联知识，方便翻阅"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2022 maoyeqiu"
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-59fa204d",
      "path": "/",
      "lastUpdated": "2022-01-06 11:11:12"
    },
    {
      "title": "动态规划",
      "frontmatter": {},
      "regularPath": "/algo/%E5%B8%B8%E8%A7%81%E7%9A%84.html",
      "relativePath": "algo/常见的.md",
      "key": "v-ca62ad5c",
      "path": "/algo/%E5%B8%B8%E8%A7%81%E7%9A%84.html",
      "headers": [
        {
          "level": 2,
          "title": "动态规划",
          "slug": "动态规划"
        },
        {
          "level": 3,
          "title": "1、连续子数组的最大和",
          "slug": "_1、连续子数组的最大和"
        },
        {
          "level": 2,
          "title": "字符串",
          "slug": "字符串"
        },
        {
          "level": 3,
          "title": "2、回文数",
          "slug": "_2、回文数"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/algo/%E6%89%8B%E5%86%99%E7%BA%BF%E7%A8%8B%E6%B1%A0.html",
      "relativePath": "algo/手写线程池.md",
      "key": "v-f6e9e388",
      "path": "/algo/%E6%89%8B%E5%86%99%E7%BA%BF%E7%A8%8B%E6%B1%A0.html",
      "headers": [
        {
          "level": 3,
          "title": "思路",
          "slug": "思路"
        },
        {
          "level": 3,
          "title": "具体实现",
          "slug": "具体实现"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "稳定性",
      "frontmatter": {},
      "regularPath": "/algo/%E6%8E%92%E5%BA%8F.html",
      "relativePath": "algo/排序.md",
      "key": "v-2d5794e9",
      "path": "/algo/%E6%8E%92%E5%BA%8F.html",
      "headers": [
        {
          "level": 3,
          "title": "稳定性",
          "slug": "稳定性"
        },
        {
          "level": 3,
          "title": "冒泡排序",
          "slug": "冒泡排序"
        },
        {
          "level": 3,
          "title": "选择排序",
          "slug": "选择排序"
        },
        {
          "level": 3,
          "title": "直接插入排序",
          "slug": "直接插入排序"
        },
        {
          "level": 3,
          "title": "快速排序",
          "slug": "快速排序"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "删除",
      "frontmatter": {},
      "regularPath": "/algo/%E6%8C%87%E9%92%88.html",
      "relativePath": "algo/指针.md",
      "key": "v-24b8dcd9",
      "path": "/algo/%E6%8C%87%E9%92%88.html",
      "headers": [
        {
          "level": 3,
          "title": "删除",
          "slug": "删除"
        },
        {
          "level": 3,
          "title": "快慢指针",
          "slug": "快慢指针"
        },
        {
          "level": 3,
          "title": "元素交叉跳跃",
          "slug": "元素交叉跳跃"
        },
        {
          "level": 3,
          "title": "串逆转",
          "slug": "串逆转"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "1、单例模式",
      "frontmatter": {},
      "regularPath": "/algo/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "relativePath": "algo/设计模式.md",
      "key": "v-00140eff",
      "path": "/algo/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "headers": [
        {
          "level": 3,
          "title": "1、单例模式",
          "slug": "_1、单例模式"
        },
        {
          "level": 3,
          "title": "观察者模式和发布订阅者模式(eventbus kafka service)",
          "slug": "观察者模式和发布订阅者模式-eventbus-kafka-service"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/buss/",
      "relativePath": "buss/README.md",
      "key": "v-31c6d1c6",
      "path": "/buss/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "title": "1、悲观锁或者乐观锁版本号控制超发",
      "frontmatter": {},
      "regularPath": "/buss/%E6%8A%BD%E5%A5%96.html",
      "relativePath": "buss/抽奖.md",
      "key": "v-fa176a10",
      "path": "/buss/%E6%8A%BD%E5%A5%96.html",
      "headers": [
        {
          "level": 3,
          "title": "1、悲观锁或者乐观锁版本号控制超发",
          "slug": "_1、悲观锁或者乐观锁版本号控制超发"
        },
        {
          "level": 3,
          "title": "2、数据库读写分离减轻主库压力",
          "slug": "_2、数据库读写分离减轻主库压力"
        },
        {
          "level": 3,
          "title": "3、一场抽奖以来单点redis，redis单点故障怎么办，数据如何恢复",
          "slug": "_3、一场抽奖以来单点redis-redis单点故障怎么办-数据如何恢复"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/es/",
      "relativePath": "db/es/README.md",
      "key": "v-7cfd072d",
      "path": "/db/es/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/es/ES%E9%80%89%E4%B8%BE-%E7%B1%BBBully%E7%AE%97%E6%B3%95.html",
      "relativePath": "db/es/ES选举-类Bully算法.md",
      "key": "v-d1ffa09a",
      "path": "/db/es/ES%E9%80%89%E4%B8%BE-%E7%B1%BBBully%E7%AE%97%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "另外一种解释",
          "slug": "另外一种解释"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "1、两个线程实现交替运行-以交替打印奇偶",
      "frontmatter": {},
      "regularPath": "/algo/%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3.html",
      "relativePath": "algo/线程相关.md",
      "key": "v-e1df63bc",
      "path": "/algo/%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3.html",
      "headers": [
        {
          "level": 3,
          "title": "1、两个线程实现交替运行-以交替打印奇偶",
          "slug": "_1、两个线程实现交替运行-以交替打印奇偶"
        },
        {
          "level": 3,
          "title": "2、生产者消费者",
          "slug": "_2、生产者消费者"
        },
        {
          "level": 3,
          "title": "3、手写线程池",
          "slug": "_3、手写线程池"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/db/es/es%E5%86%99%E5%85%A5%E5%92%8C%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%E5%95%8A.html",
      "relativePath": "db/es/es写入和查询的工作原理是什么啊.md",
      "key": "v-28db044e",
      "path": "/db/es/es%E5%86%99%E5%85%A5%E5%92%8C%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%E5%95%8A.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "es 写数据过程",
          "slug": "es-写数据过程"
        },
        {
          "level": 3,
          "title": "es 读数据过程",
          "slug": "es-读数据过程"
        },
        {
          "level": 3,
          "title": "es 搜索数据过程",
          "slug": "es-搜索数据过程"
        },
        {
          "level": 3,
          "title": "写数据底层原理",
          "slug": "写数据底层原理"
        },
        {
          "level": 3,
          "title": "删除/更新数据底层原理",
          "slug": "删除-更新数据底层原理"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/es/ES%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E8%A6%81%E7%82%B9.html",
      "relativePath": "db/es/ES面试基础知识要点.md",
      "key": "v-67a970b9",
      "path": "/db/es/ES%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E8%A6%81%E7%82%B9.html",
      "headers": [
        {
          "level": 3,
          "title": "二、Elasticsearch是如何实现Master选举的",
          "slug": "二、elasticsearch是如何实现master选举的"
        },
        {
          "level": 3,
          "title": "三、客户端在和集群连接时，如何选择特定的节点执行请求的？",
          "slug": "三、客户端在和集群连接时-如何选择特定的节点执行请求的"
        },
        {
          "level": 3,
          "title": "四、Elasticsearch 文档索引过程描述",
          "slug": "四、elasticsearch-文档索引过程描述"
        },
        {
          "level": 3,
          "title": "五、Elasticsearch 文档更新和删除过程描述",
          "slug": "五、elasticsearch-文档更新和删除过程描述"
        },
        {
          "level": 3,
          "title": "六、Elasticsearch搜索的过程描述",
          "slug": "六、elasticsearch搜索的过程描述"
        },
        {
          "level": 3,
          "title": "七、在并发情况下，Elasticsearch如果保证读写一致？",
          "slug": "七、在并发情况下-elasticsearch如果保证读写一致"
        },
        {
          "level": 3,
          "title": "八、Elasticsearch在部署时，对Linux的设置有哪些优化方法？",
          "slug": "八、elasticsearch在部署时-对linux的设置有哪些优化方法"
        },
        {
          "level": 3,
          "title": "九、对于GC方面，在使用Elasticsearch时要注意什么？",
          "slug": "九、对于gc方面-在使用elasticsearch时要注意什么"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "行锁",
      "frontmatter": {},
      "regularPath": "/db/mysql/InnoDB%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E8%A1%8C%E9%94%81%E5%92%8C%E8%A1%A8%E9%94%81.html",
      "relativePath": "db/mysql/InnoDB什么时候用行锁和表锁.md",
      "key": "v-46262637",
      "path": "/db/mysql/InnoDB%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E8%A1%8C%E9%94%81%E5%92%8C%E8%A1%A8%E9%94%81.html",
      "headers": [
        {
          "level": 3,
          "title": "行锁",
          "slug": "行锁"
        },
        {
          "level": 3,
          "title": "表锁",
          "slug": "表锁"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "基本原理",
      "frontmatter": {},
      "regularPath": "/db/mysql/MYSQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.html",
      "relativePath": "db/mysql/MYSQL主从复制.md",
      "key": "v-fece1d90",
      "path": "/db/mysql/MYSQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "基本原理",
          "slug": "基本原理"
        },
        {
          "level": 3,
          "title": "实现整个复制操作主要由三个进程完成的，其中两个进程在Slave（Sql进程和IO进程），另外一个进程在 Master（IO进程）上。",
          "slug": "实现整个复制操作主要由三个进程完成的-其中两个进程在slave-sql进程和io进程-另外一个进程在-master-io进程-上。"
        },
        {
          "level": 3,
          "title": "复制的详细过程：",
          "slug": "复制的详细过程"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/db/es/es%E5%9C%A8%E6%95%B0%E6%8D%AE%E9%87%8F%E5%BE%88%E5%A4%A7%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E6%95%B0%E5%8D%81%E4%BA%BF%E7%BA%A7%E5%88%AB%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87%E5%95%8A.html",
      "relativePath": "db/es/es在数据量很大的情况下数十亿级别如何提高查询效率啊.md",
      "key": "v-ff564b58",
      "path": "/db/es/es%E5%9C%A8%E6%95%B0%E6%8D%AE%E9%87%8F%E5%BE%88%E5%A4%A7%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E6%95%B0%E5%8D%81%E4%BA%BF%E7%BA%A7%E5%88%AB%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87%E5%95%8A.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "性能优化的杀手锏——filesystem cache",
          "slug": "性能优化的杀手锏-filesystem-cache"
        },
        {
          "level": 3,
          "title": "数据预热",
          "slug": "数据预热"
        },
        {
          "level": 3,
          "title": "冷热分离",
          "slug": "冷热分离"
        },
        {
          "level": 3,
          "title": "document 模型设计",
          "slug": "document-模型设计"
        },
        {
          "level": 3,
          "title": "分页性能优化",
          "slug": "分页性能优化"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "底层 lucene",
      "frontmatter": {},
      "regularPath": "/db/es/%E5%BA%95%E5%B1%82lucene%E5%92%8C%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html",
      "relativePath": "db/es/底层lucene和倒排索引.md",
      "key": "v-2f6d16fe",
      "path": "/db/es/%E5%BA%95%E5%B1%82lucene%E5%92%8C%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html",
      "headers": [
        {
          "level": 3,
          "title": "底层 lucene",
          "slug": "底层-lucene"
        },
        {
          "level": 3,
          "title": "倒排索引",
          "slug": "倒排索引"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/MyISAM%E5%92%8CInnoDB%E5%8C%BA%E5%88%AB.html",
      "relativePath": "db/mysql/MyISAM和InnoDB区别.md",
      "key": "v-1a3db521",
      "path": "/db/mysql/MyISAM%E5%92%8CInnoDB%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/db/es/es%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86%E8%83%BD%E8%AF%B4%E4%B8%80%E4%B8%8B%E4%B9%88.html",
      "relativePath": "db/es/es的分布式架构原理能说一下么.md",
      "key": "v-c58e80a6",
      "path": "/db/es/es%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86%E8%83%BD%E8%AF%B4%E4%B8%80%E4%B8%8B%E4%B9%88.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/es/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E6%9B%B4%E5%85%B7%E4%BD%93%E7%9A%84%E8%A7%A3%E9%87%8A.html",
      "relativePath": "db/es/倒排索引更具体的解释.md",
      "key": "v-99dd056c",
      "path": "/db/es/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E6%9B%B4%E5%85%B7%E4%BD%93%E7%9A%84%E8%A7%A3%E9%87%8A.html",
      "headers": [
        {
          "level": 3,
          "title": "倒排文件",
          "slug": "倒排文件"
        },
        {
          "level": 3,
          "title": "Lucene倒排索引原理",
          "slug": "lucene倒排索引原理"
        },
        {
          "level": 3,
          "title": "实现",
          "slug": "实现"
        },
        {
          "level": 3,
          "title": "压缩算法",
          "slug": "压缩算法"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "知识-20200818",
      "frontmatter": {},
      "regularPath": "/db/mysql/Mysql%E6%96%B0%E7%9F%A5%E8%AF%8620200818.html",
      "relativePath": "db/mysql/Mysql新知识20200818.md",
      "key": "v-7f4d3d45",
      "path": "/db/mysql/Mysql%E6%96%B0%E7%9F%A5%E8%AF%8620200818.html",
      "headers": [
        {
          "level": 3,
          "title": "知识-20200818",
          "slug": "知识-20200818"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/",
      "relativePath": "db/mysql/README.md",
      "key": "v-8a9c4646",
      "path": "/db/mysql/",
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "title": "MySQL中的重做日志（redo log），回滚日志（undo log），以及二进制日志（binlog）的简单总结",
      "frontmatter": {},
      "regularPath": "/db/mysql/MySQL%E4%B8%AD%E7%9A%84%E9%87%8D%E5%81%9A%E6%97%A5redolog%E5%92%8Cundolog%E4%BB%A5%E5%8F%8Abinlog.html",
      "relativePath": "db/mysql/MySQL中的重做日redolog和undolog以及binlog.md",
      "key": "v-7e1b6197",
      "path": "/db/mysql/MySQL%E4%B8%AD%E7%9A%84%E9%87%8D%E5%81%9A%E6%97%A5redolog%E5%92%8Cundolog%E4%BB%A5%E5%8F%8Abinlog.html",
      "headers": [
        {
          "level": 3,
          "title": "MySQL中的重做日志（redo log），回滚日志（undo log），以及二进制日志（binlog）的简单总结",
          "slug": "mysql中的重做日志-redo-log-回滚日志-undo-log-以及二进制日志-binlog-的简单总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/innodb%E8%A1%8C%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",
      "relativePath": "db/mysql/innodb行锁实现方式.md",
      "key": "v-f34ee5cc",
      "path": "/db/mysql/innodb%E8%A1%8C%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "一、异步复制（Asynchronous replication）",
      "frontmatter": {},
      "regularPath": "/db/mysql/mysql%E5%90%8C%E6%AD%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html",
      "relativePath": "db/mysql/mysql同步的三种方式.md",
      "key": "v-ba793134",
      "path": "/db/mysql/mysql%E5%90%8C%E6%AD%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html",
      "headers": [
        {
          "level": 3,
          "title": "一、异步复制（Asynchronous replication）",
          "slug": "一、异步复制-asynchronous-replication"
        },
        {
          "level": 3,
          "title": "二、全同步复制（Fully synchronous replication）",
          "slug": "二、全同步复制-fully-synchronous-replication"
        },
        {
          "level": 3,
          "title": "三、半同步复制（Semisynchronous replication）",
          "slug": "三、半同步复制-semisynchronous-replication"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "MYSQL事务和隔离级别",
      "frontmatter": {},
      "regularPath": "/db/mysql/MYSQL%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",
      "relativePath": "db/mysql/MYSQL事务和隔离级别.md",
      "key": "v-d5048b32",
      "path": "/db/mysql/MYSQL%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",
      "headers": [
        {
          "level": 2,
          "title": "一、事务",
          "slug": "一、事务"
        },
        {
          "level": 2,
          "title": "二、并发一致性问题",
          "slug": "二、并发一致性问题"
        },
        {
          "level": 3,
          "title": "1、更新丢失(Lost Update)",
          "slug": "_1、更新丢失-lost-update"
        },
        {
          "level": 3,
          "title": "2、脏读",
          "slug": "_2、脏读"
        },
        {
          "level": 3,
          "title": "3、不可重复读(Non-Repeatable Reads)",
          "slug": "_3、不可重复读-non-repeatable-reads"
        },
        {
          "level": 3,
          "title": "4、幻读",
          "slug": "_4、幻读"
        },
        {
          "level": 2,
          "title": "三、事务隔离级别",
          "slug": "三、事务隔离级别"
        },
        {
          "level": 3,
          "title": "1、读未提交 (Read Uncommitted)(藏)",
          "slug": "_1、读未提交-read-uncommitted-藏"
        },
        {
          "level": 3,
          "title": "2、读已提交 (Read Committed)",
          "slug": "_2、读已提交-read-committed"
        },
        {
          "level": 3,
          "title": "3、可重复读(Repeatable Read)",
          "slug": "_3、可重复读-repeatable-read"
        },
        {
          "level": 3,
          "title": "4、串行化(Serializable)",
          "slug": "_4、串行化-serializable"
        },
        {
          "level": 3,
          "title": "5、总结",
          "slug": "_5、总结"
        },
        {
          "level": 3,
          "title": "其他解释",
          "slug": "其他解释"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/MySQL%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E5%BB%B6%E6%97%B6%E9%97%AE%E9%A2%98.html",
      "relativePath": "db/mysql/MySQL主从同步延时问题.md",
      "key": "v-f6303da0",
      "path": "/db/mysql/MySQL%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E5%BB%B6%E6%97%B6%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "如何实现 MySQL 的读写分离？",
          "slug": "如何实现-mysql-的读写分离"
        },
        {
          "level": 3,
          "title": "MySQL 主从复制原理的是啥？",
          "slug": "mysql-主从复制原理的是啥"
        },
        {
          "level": 3,
          "title": "MySQL 主从同步延时问题（精华）",
          "slug": "mysql-主从同步延时问题-精华"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "一条SQL语句执行得很慢的原因有哪些",
      "frontmatter": {},
      "regularPath": "/db/mysql/%E4%B8%80%E6%9D%A1SQL%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C%E5%BE%97%E5%BE%88%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%93%AA%E4%BA%9B.html",
      "relativePath": "db/mysql/一条SQL语句执行得很慢的原因有哪些.md",
      "key": "v-04d2ff0e",
      "path": "/db/mysql/%E4%B8%80%E6%9D%A1SQL%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C%E5%BE%97%E5%BE%88%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%93%AA%E4%BA%9B.html",
      "headers": [
        {
          "level": 3,
          "title": "一条SQL语句执行得很慢的原因有哪些",
          "slug": "一条sql语句执行得很慢的原因有哪些"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/explain.html",
      "relativePath": "db/mysql/explain.md",
      "key": "v-5687f9b0",
      "path": "/db/mysql/explain.html",
      "headers": [
        {
          "level": 3,
          "title": "总体含义",
          "slug": "总体含义"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "relativePath": "db/mysql/为什么要分库分表.md",
      "key": "v-71fbcab6",
      "path": "/db/mysql/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "为什么要分库分表？（设计高并发系统的时候，数据库层面该如何设计？）",
          "slug": "为什么要分库分表-设计高并发系统的时候-数据库层面该如何设计"
        },
        {
          "level": 3,
          "title": "用过哪些分库分表中间件？不同的分库分表中间件都有什么优点和缺点？",
          "slug": "用过哪些分库分表中间件-不同的分库分表中间件都有什么优点和缺点"
        },
        {
          "level": 3,
          "title": "你们具体是如何对数据库如何进行垂直拆分或水平拆分的？",
          "slug": "你们具体是如何对数据库如何进行垂直拆分或水平拆分的"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "乐观锁",
      "frontmatter": {},
      "regularPath": "/db/mysql/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81.html",
      "relativePath": "db/mysql/乐观锁和悲观锁.md",
      "key": "v-5cbe2bb3",
      "path": "/db/mysql/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81.html",
      "headers": [
        {
          "level": 3,
          "title": "乐观锁",
          "slug": "乐观锁"
        },
        {
          "level": 3,
          "title": "悲观锁",
          "slug": "悲观锁"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E4%BB%80%E4%B9%88%E6%98%AFMVCC.html",
      "relativePath": "db/mysql/什么是MVCC.md",
      "key": "v-3c3159b2",
      "path": "/db/mysql/%E4%BB%80%E4%B9%88%E6%98%AFMVCC.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是MVCC",
          "slug": "什么是mvcc"
        },
        {
          "level": 3,
          "title": "具体原理",
          "slug": "具体原理"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2.html",
      "relativePath": "db/mysql/分库分表的分页查询.md",
      "key": "v-203bcf83",
      "path": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B9%8B%E5%90%8Eid%E4%B8%BB%E9%94%AE%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86.html",
      "relativePath": "db/mysql/分库分表之后id主键如何处理.md",
      "key": "v-2d2d3c23",
      "path": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B9%8B%E5%90%8Eid%E4%B8%BB%E9%94%AE%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86.html",
      "headers": [
        {
          "level": 3,
          "title": "自己是怎么用的",
          "slug": "自己是怎么用的"
        },
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "基于数据库的实现方案",
          "slug": "基于数据库的实现方案"
        },
        {
          "level": 3,
          "title": "UUID",
          "slug": "uuid"
        },
        {
          "level": 3,
          "title": "获取系统当前时间",
          "slug": "获取系统当前时间"
        },
        {
          "level": 3,
          "title": "snowflake 算法",
          "slug": "snowflake-算法"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%BB%A5%E5%8F%8A%E5%8D%95%E4%B8%AA%E4%BA%8B%E5%8A%A1%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.html",
      "relativePath": "db/mysql/分布式事务以及单个事务执行过程.md",
      "key": "v-3aaac840",
      "path": "/db/mysql/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%BB%A5%E5%8F%8A%E5%8D%95%E4%B8%AA%E4%BA%8B%E5%8A%A1%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.html",
      "headers": [
        {
          "level": 3,
          "title": "事务的执行过程(redo事务执行记录，binlog事务执行之后记录数据主要用来主从复制)",
          "slug": "事务的执行过程-redo事务执行记录-binlog事务执行之后记录数据主要用来主从复制"
        },
        {
          "level": 3,
          "title": "2PC",
          "slug": "_2pc"
        },
        {
          "level": 3,
          "title": "3PC",
          "slug": "_3pc"
        },
        {
          "level": 3,
          "title": "TCC",
          "slug": "tcc"
        },
        {
          "level": 3,
          "title": "MQ等保证最终一致性",
          "slug": "mq等保证最终一致性"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%A4%A7%E8%A1%A8%E4%BC%98%E5%8C%96.html",
      "relativePath": "db/mysql/大表优化.md",
      "key": "v-3ff4931e",
      "path": "/db/mysql/%E5%A4%A7%E8%A1%A8%E4%BC%98%E5%8C%96.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%AF%B9%E6%AF%94%E5%92%8C%E5%8E%9F%E7%90%86.html",
      "relativePath": "db/mysql/分库分表中间件对比和原理.md",
      "key": "v-fd8d29e4",
      "path": "/db/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%AF%B9%E6%AF%94%E5%92%8C%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "应用层依赖类中间件",
          "slug": "应用层依赖类中间件"
        },
        {
          "level": 3,
          "title": "ShardingSphere",
          "slug": "shardingsphere"
        },
        {
          "level": 3,
          "title": "Sharding-JDBC",
          "slug": "sharding-jdbc"
        },
        {
          "level": 3,
          "title": "Sharding-Proxy",
          "slug": "sharding-proxy"
        },
        {
          "level": 3,
          "title": "Sharding-Sidecar（TBD）",
          "slug": "sharding-sidecar-tbd"
        },
        {
          "level": 2,
          "title": "中间层代理类中间件",
          "slug": "中间层代理类中间件"
        },
        {
          "level": 3,
          "title": "MyCat",
          "slug": "mycat"
        },
        {
          "level": 3,
          "title": "Cobar",
          "slug": "cobar"
        },
        {
          "level": 3,
          "title": "TDDL",
          "slug": "tddl"
        },
        {
          "level": 3,
          "title": "Atlas",
          "slug": "atlas"
        },
        {
          "level": 3,
          "title": "sharding-JDBC",
          "slug": "sharding-jdbc-2"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%BC%95%E6%93%8E%E5%8C%BA%E5%88%AB.html",
      "relativePath": "db/mysql/引擎区别.md",
      "key": "v-47090ad2",
      "path": "/db/mysql/%E5%BC%95%E6%93%8E%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E%E6%83%85%E5%86%B5.html",
      "relativePath": "db/mysql/数据库引擎情况.md",
      "key": "v-03ccfce3",
      "path": "/db/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E%E6%83%85%E5%86%B5.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "1、海量数据查询",
      "frontmatter": {},
      "regularPath": "/db/mysql/%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AElimit%E6%85%A2.html",
      "relativePath": "db/mysql/海量数据limit慢.md",
      "key": "v-e5469574",
      "path": "/db/mysql/%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AElimit%E6%85%A2.html",
      "headers": [
        {
          "level": 3,
          "title": "1、海量数据查询",
          "slug": "_1、海量数据查询"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%8F%AF%E4%BB%A5%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E7%BC%A9%E5%AE%B9%E7%9A%84%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%96%B9%E6%A1%88.html",
      "relativePath": "db/mysql/如何设计可以动态扩容缩容的分库分表方案.md",
      "key": "v-8b8ec3d6",
      "path": "/db/mysql/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%8F%AF%E4%BB%A5%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E7%BC%A9%E5%AE%B9%E7%9A%84%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "停机扩容（不推荐）",
          "slug": "停机扩容-不推荐"
        },
        {
          "level": 3,
          "title": "优化后的方案",
          "slug": "优化后的方案"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "为什么用索引",
      "frontmatter": {},
      "regularPath": "/db/mysql/%E7%B4%A2%E5%BC%95.html",
      "relativePath": "db/mysql/索引.md",
      "key": "v-36d09972",
      "path": "/db/mysql/%E7%B4%A2%E5%BC%95.html",
      "headers": [
        {
          "level": 3,
          "title": "为什么用索引",
          "slug": "为什么用索引"
        },
        {
          "level": 3,
          "title": "索引的优势：",
          "slug": "索引的优势"
        },
        {
          "level": 3,
          "title": "索引的劣势：",
          "slug": "索引的劣势"
        },
        {
          "level": 3,
          "title": "适合创建索引的条件：",
          "slug": "适合创建索引的条件"
        },
        {
          "level": 3,
          "title": "索引优化：",
          "slug": "索引优化"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E8%87%AA%E5%B7%B1%E6%88%96%E5%85%AC%E5%8F%B8%E5%AE%9E%E7%8E%B0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%AD%E9%97%B4%E4%BB%B6.html",
      "relativePath": "db/mysql/自己或公司实现分库分表中间件.md",
      "key": "v-32e26bae",
      "path": "/db/mysql/%E8%87%AA%E5%B7%B1%E6%88%96%E5%85%AC%E5%8F%B8%E5%AE%9E%E7%8E%B0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%AD%E9%97%B4%E4%BB%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "如何实现客户端分片（应该就是这种）",
          "slug": "如何实现客户端分片-应该就是这种"
        },
        {
          "level": 3,
          "title": "SQL解析",
          "slug": "sql解析"
        },
        {
          "level": 3,
          "title": "分片路由算法",
          "slug": "分片路由算法"
        },
        {
          "level": 3,
          "title": "结果合并",
          "slug": "结果合并"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/Mysql%E7%B4%A2%E5%BC%95%E5%92%8Credis%E8%B7%B3%E8%A1%A8.html",
      "relativePath": "db/redis/Mysql索引和redis跳表.md",
      "key": "v-6f7ff0a0",
      "path": "/db/redis/Mysql%E7%B4%A2%E5%BC%95%E5%92%8Credis%E8%B7%B3%E8%A1%A8.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E5%85%B6%E5%AE%9E%E6%AF%94MVCC%E7%AE%80%E5%8D%95.html",
      "relativePath": "db/mysql/最终一致性其实比MVCC简单.md",
      "key": "v-506f649b",
      "path": "/db/mysql/%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E5%85%B6%E5%AE%9E%E6%AF%94MVCC%E7%AE%80%E5%8D%95.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/",
      "relativePath": "db/redis/README.md",
      "key": "v-7204917d",
      "path": "/db/redis/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/mysql/%E9%94%81%E6%9C%BA%E5%88%B6%E4%B8%8EInnoDB%E9%94%81%E7%AE%97%E6%B3%95.html",
      "relativePath": "db/mysql/锁机制与InnoDB锁算法.md",
      "key": "v-6b4d3042",
      "path": "/db/mysql/%E9%94%81%E6%9C%BA%E5%88%B6%E4%B8%8EInnoDB%E9%94%81%E7%AE%97%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "表级锁和行级锁对比：",
          "slug": "表级锁和行级锁对比"
        },
        {
          "level": 3,
          "title": "InnoDB存储引擎的锁的算法有三种：",
          "slug": "innodb存储引擎的锁的算法有三种"
        },
        {
          "level": 3,
          "title": "相关知识点：",
          "slug": "相关知识点"
        },
        {
          "level": 3,
          "title": "优化建议",
          "slug": "优化建议"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/Redis%E5%91%BD%E4%BB%A4%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.html",
      "relativePath": "db/redis/Redis命令时间复杂度.md",
      "key": "v-b3498522",
      "path": "/db/redis/Redis%E5%91%BD%E4%BB%A4%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/rediscluster%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F.html",
      "relativePath": "db/redis/rediscluster集群部署方式.md",
      "key": "v-19c38cf1",
      "path": "/db/redis/rediscluster%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F.html",
      "headers": [
        {
          "level": 3,
          "title": "gossip",
          "slug": "gossip"
        },
        {
          "level": 3,
          "title": "redis为什么用gossip",
          "slug": "redis为什么用gossip"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/rediscluster%E5%8E%9F%E7%90%86%E5%92%8C%E5%93%A8%E5%85%B5%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9.html",
      "relativePath": "db/redis/rediscluster原理和哨兵方式的优缺点.md",
      "key": "v-35b8db10",
      "path": "/db/redis/rediscluster%E5%8E%9F%E7%90%86%E5%92%8C%E5%93%A8%E5%85%B5%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9.html",
      "headers": [
        {
          "level": 3,
          "title": "优点：",
          "slug": "优点"
        },
        {
          "level": 3,
          "title": "缺点：",
          "slug": "缺点"
        },
        {
          "level": 3,
          "title": "基本原理",
          "slug": "基本原理"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "20200820 为什么double会丢失精度",
      "frontmatter": {},
      "regularPath": "/db/mysql/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86.html",
      "relativePath": "db/mysql/数据的基本知识.md",
      "key": "v-4841e05e",
      "path": "/db/mysql/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86.html",
      "headers": [
        {
          "level": 3,
          "title": "20200820 为什么double会丢失精度",
          "slug": "_20200820-为什么double会丢失精度"
        },
        {
          "level": 3,
          "title": "20200824 包箱和拆箱",
          "slug": "_20200824-包箱和拆箱"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6.html",
      "relativePath": "db/redis/redis内存淘汰机制.md",
      "key": "v-5f09ab52",
      "path": "/db/redis/redis%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 3,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/20%E4%B8%87%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%AA%E7%83%AD%E7%82%B9%E7%BC%93%E5%AD%98%E7%9A%84%E9%97%AE%E9%A2%98.html",
      "relativePath": "db/redis/20万用户同时访问一个热点缓存的问题.md",
      "key": "v-122dcf5c",
      "path": "/db/redis/20%E4%B8%87%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%AA%E7%83%AD%E7%82%B9%E7%BC%93%E5%AD%98%E7%9A%84%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 3,
          "title": "一、20 万用户同时访问一个热点缓存的问题",
          "slug": "一、20-万用户同时访问一个热点缓存的问题"
        },
        {
          "level": 3,
          "title": "二、基于流式计算技术的缓存热点自动发现",
          "slug": "二、基于流式计算技术的缓存热点自动发现"
        },
        {
          "level": 3,
          "title": "三、热点缓存自动加载为 JVM 本地缓存",
          "slug": "三、热点缓存自动加载为-jvm-本地缓存"
        },
        {
          "level": 3,
          "title": "四、限流熔断保护",
          "slug": "四、限流熔断保护"
        },
        {
          "level": 3,
          "title": "五、总结",
          "slug": "五、总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E5%AE%9E%E7%8E%B0%E4%BA%92%E6%96%A5%E9%94%81.html",
      "relativePath": "db/redis/redis实现互斥锁.md",
      "key": "v-5f8a6726",
      "path": "/db/redis/redis%E5%AE%9E%E7%8E%B0%E4%BA%92%E6%96%A5%E9%94%81.html",
      "headers": [
        {
          "level": 3,
          "title": "思路一：通过get 和set 命令实现",
          "slug": "思路一-通过get-和set-命令实现"
        },
        {
          "level": 3,
          "title": "思路二：通过setnx 和 expire命令实现",
          "slug": "思路二-通过setnx-和-expire命令实现"
        },
        {
          "level": 3,
          "title": "思路三：通过watch和Redis的事务命令实现",
          "slug": "思路三-通过watch和redis的事务命令实现"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/Redis%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84.html",
      "relativePath": "db/redis/Redis主从架构.md",
      "key": "v-672200e2",
      "path": "/db/redis/Redis%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84.html",
      "headers": [
        {
          "level": 2,
          "title": "redis replication 的核心机制",
          "slug": "redis-replication-的核心机制"
        },
        {
          "level": 2,
          "title": "redis 主从复制的核心原理",
          "slug": "redis-主从复制的核心原理"
        },
        {
          "level": 3,
          "title": "主从复制的断点续传",
          "slug": "主从复制的断点续传"
        },
        {
          "level": 3,
          "title": "无磁盘化复制",
          "slug": "无磁盘化复制"
        },
        {
          "level": 3,
          "title": "过期 key 处理",
          "slug": "过期-key-处理"
        },
        {
          "level": 2,
          "title": "复制的完整流程",
          "slug": "复制的完整流程"
        },
        {
          "level": 3,
          "title": "全量复制",
          "slug": "全量复制"
        },
        {
          "level": 3,
          "title": "增量复制",
          "slug": "增量复制"
        },
        {
          "level": 3,
          "title": "heartbeat",
          "slug": "heartbeat"
        },
        {
          "level": 3,
          "title": "异步复制",
          "slug": "异步复制"
        },
        {
          "level": 2,
          "title": "redis 如何才能做到高可用",
          "slug": "redis-如何才能做到高可用"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E5%8F%96%E6%A8%A1%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8Cslot%E7%AE%97%E6%B3%95%E6%BC%94%E8%BF%9B.html",
      "relativePath": "db/redis/redis取模一致性哈希slot算法演进.md",
      "key": "v-742f1c5f",
      "path": "/db/redis/redis%E5%8F%96%E6%A8%A1%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8Cslot%E7%AE%97%E6%B3%95%E6%BC%94%E8%BF%9B.html",
      "headers": [
        {
          "level": 3,
          "title": "简单的Hash算法",
          "slug": "简单的hash算法"
        },
        {
          "level": 3,
          "title": "一致性哈希算法",
          "slug": "一致性哈希算法"
        },
        {
          "level": 3,
          "title": "Hash slot（虚拟桶）",
          "slug": "hash-slot-虚拟桶"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E5%87%A0%E7%A7%8D%E9%80%92%E8%BF%9B%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88.html",
      "relativePath": "db/redis/redis几种递进的高可用方案.md",
      "key": "v-278ef6c8",
      "path": "/db/redis/redis%E5%87%A0%E7%A7%8D%E9%80%92%E8%BF%9B%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 3,
          "title": "一、常见使用方式",
          "slug": "一、常见使用方式"
        },
        {
          "level": 3,
          "title": "二、各种使用方式的优缺点",
          "slug": "二、各种使用方式的优缺点"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95.html",
      "relativePath": "db/redis/redis一致性哈希算法.md",
      "key": "v-f7994af6",
      "path": "/db/redis/redis%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "一、Redis集群的使用",
          "slug": "一、redis集群的使用"
        },
        {
          "level": 3,
          "title": "二、为Redis集群使用Hash",
          "slug": "二、为redis集群使用hash"
        },
        {
          "level": 3,
          "title": "三、使用Hash的问题",
          "slug": "三、使用hash的问题"
        },
        {
          "level": 3,
          "title": "四、一致性Hash算法的神秘面纱",
          "slug": "四、一致性hash算法的神秘面纱"
        },
        {
          "level": 3,
          "title": "五、一致性Hash算法的容错性和可扩展性",
          "slug": "五、一致性hash算法的容错性和可扩展性"
        },
        {
          "level": 3,
          "title": "六、Hash环的数据倾斜问题",
          "slug": "六、hash环的数据倾斜问题"
        },
        {
          "level": 3,
          "title": "七、总结",
          "slug": "七、总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E5%93%A8%E5%85%B5%E5%8D%8F%E8%AE%AE%E5%85%B7%E4%BD%93%E4%BB%8B%E7%BB%8D.html",
      "relativePath": "db/redis/redis哨兵协议具体介绍.md",
      "key": "v-6d0ff766",
      "path": "/db/redis/redis%E5%93%A8%E5%85%B5%E5%8D%8F%E8%AE%AE%E5%85%B7%E4%BD%93%E4%BB%8B%E7%BB%8D.html",
      "headers": [
        {
          "level": 3,
          "title": "gossip（节点通信，主观和客观宕机）+raft（master宕机之后选主使用）这有点像consul",
          "slug": "gossip-节点通信-主观和客观宕机-raft-master宕机之后选主使用-这有点像consul"
        },
        {
          "level": 3,
          "title": "Sentinel主要功能",
          "slug": "sentinel主要功能"
        },
        {
          "level": 3,
          "title": "关于redis sentinel的主观下线和客观下线",
          "slug": "关于redis-sentinel的主观下线和客观下线"
        },
        {
          "level": 3,
          "title": "Sentinel定时执行的操作",
          "slug": "sentinel定时执行的操作"
        },
        {
          "level": 2,
          "title": "恢复的流程，这个很重要",
          "slug": "恢复的流程-这个很重要"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E7%9A%84%E5%86%85%E5%AD%98%E7%A2%8E%E7%89%87%E5%8C%96%E9%97%AE%E9%A2%98%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3.html",
      "relativePath": "db/redis/redis的内存碎片化问题怎么解决.md",
      "key": "v-57b1bac9",
      "path": "/db/redis/redis%E7%9A%84%E5%86%85%E5%AD%98%E7%A2%8E%E7%89%87%E5%8C%96%E9%97%AE%E9%A2%98%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3.html",
      "headers": [
        {
          "level": 3,
          "title": "内存碎片率高的原因",
          "slug": "内存碎片率高的原因"
        },
        {
          "level": 3,
          "title": "解决方法",
          "slug": "解决方法"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "总体解决方案",
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E9%9B%AA%E5%B4%A9%E7%A9%BF%E9%80%8F%E5%92%8C%E5%87%BB%E7%A9%BF%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%B9%E6%A1%88.html",
      "relativePath": "db/redis/redis雪崩穿透和击穿以及对应的方案.md",
      "key": "v-1a0b27ca",
      "path": "/db/redis/redis%E9%9B%AA%E5%B4%A9%E7%A9%BF%E9%80%8F%E5%92%8C%E5%87%BB%E7%A9%BF%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 2,
          "title": "总体解决方案",
          "slug": "总体解决方案"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E7%9A%84%E8%BF%87%E6%9C%9F%E7%AD%96%E7%95%A5%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B.html",
      "relativePath": "db/redis/redis的过期策略都有哪些.md",
      "key": "v-c3177352",
      "path": "/db/redis/redis%E7%9A%84%E8%BF%87%E6%9C%9F%E7%AD%96%E7%95%A5%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B.html",
      "headers": [
        {
          "level": 2,
          "title": "这个问题应该这么答",
          "slug": "这个问题应该这么答"
        },
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "redis 过期策略",
          "slug": "redis-过期策略"
        },
        {
          "level": 3,
          "title": "内存淘汰机制",
          "slug": "内存淘汰机制"
        },
        {
          "level": 3,
          "title": "手写一个 LRU 算法",
          "slug": "手写一个-lru-算法"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F.html",
      "relativePath": "db/redis/发布订阅者模式.md",
      "key": "v-1f3433e3",
      "path": "/db/redis/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E6%8C%81%E4%B9%85%E5%8C%96.html",
      "relativePath": "db/redis/redis持久化.md",
      "key": "v-5556cb4f",
      "path": "/db/redis/redis%E6%8C%81%E4%B9%85%E5%8C%96.html",
      "headers": [
        {
          "level": 3,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "redis 持久化的两种方式",
          "slug": "redis-持久化的两种方式"
        },
        {
          "level": 3,
          "title": "RDB原理：SAVE和BGSAVE",
          "slug": "rdb原理-save和bgsave"
        },
        {
          "level": 3,
          "title": "AOF原理",
          "slug": "aof原理"
        },
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析-2"
        },
        {
          "level": 3,
          "title": "redis 持久化的两种方式",
          "slug": "redis-持久化的两种方式-2"
        },
        {
          "level": 3,
          "title": "RDB 和 AOF 到底该如何选择",
          "slug": "rdb-和-aof-到底该如何选择"
        },
        {
          "level": 3,
          "title": "AOF过程",
          "slug": "aof过程"
        },
        {
          "level": 3,
          "title": "AOF重写",
          "slug": "aof重写"
        },
        {
          "level": 3,
          "title": "RDB触发命令",
          "slug": "rdb触发命令"
        },
        {
          "level": 3,
          "title": "redis使用的协议",
          "slug": "redis使用的协议"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/db/redis/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84redis%E6%98%AF%E6%80%8E%E4%B9%88%E9%83%A8%E7%BD%B2%E7%9A%84.html",
      "relativePath": "db/redis/生产环境中的redis是怎么部署的.md",
      "key": "v-ad041082",
      "path": "/db/redis/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84redis%E6%98%AF%E6%80%8E%E4%B9%88%E9%83%A8%E7%BD%B2%E7%9A%84.html",
      "headers": [
        {
          "level": 3,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 3,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E8%AE%BF%E9%97%AERedis%E4%B8%AD%E7%9A%84%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE.html",
      "relativePath": "db/redis/如何正确访问Redis中的海量数据.md",
      "key": "v-dfc85222",
      "path": "/db/redis/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E8%AE%BF%E9%97%AERedis%E4%B8%AD%E7%9A%84%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "一、前言",
          "slug": "一、前言"
        },
        {
          "level": 3,
          "title": "二、事故产生",
          "slug": "二、事故产生"
        },
        {
          "level": 3,
          "title": "三、分析原因",
          "slug": "三、分析原因"
        },
        {
          "level": 3,
          "title": "四、解决方案",
          "slug": "四、解决方案"
        },
        {
          "level": 3,
          "title": "五、总结",
          "slug": "五、总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/redis%E7%9A%84%E9%9B%AA%E5%B4%A9%E7%A9%BF%E9%80%8F%E5%92%8C%E5%87%BB%E7%A9%BF%E4%BB%A5%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88.html",
      "relativePath": "db/redis/redis的雪崩穿透和击穿以及应对方案.md",
      "key": "v-6e64ae5c",
      "path": "/db/redis/redis%E7%9A%84%E9%9B%AA%E5%B4%A9%E7%A9%BF%E9%80%8F%E5%92%8C%E5%87%BB%E7%A9%BF%E4%BB%A5%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "缓存雪崩",
          "slug": "缓存雪崩"
        },
        {
          "level": 3,
          "title": "缓存穿透",
          "slug": "缓存穿透"
        },
        {
          "level": 3,
          "title": "缓存击穿",
          "slug": "缓存击穿"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/rpc/",
      "relativePath": "distri/rpc/README.md",
      "key": "v-5ce7c69d",
      "path": "/distri/rpc/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/rpc/%E4%BB%80%E4%B9%88%E6%98%AFRPC.html",
      "relativePath": "distri/rpc/什么是RPC.md",
      "key": "v-655db61c",
      "path": "/distri/rpc/%E4%BB%80%E4%B9%88%E6%98%AFRPC.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是RPC",
          "slug": "什么是rpc"
        },
        {
          "level": 3,
          "title": "常见的RPC框架",
          "slug": "常见的rpc框架"
        },
        {
          "level": 3,
          "title": "RPC和HTTP请求有什么区别",
          "slug": "rpc和http请求有什么区别"
        },
        {
          "level": 3,
          "title": "实现思路",
          "slug": "实现思路"
        },
        {
          "level": 3,
          "title": "实现细节",
          "slug": "实现细节"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "介绍",
      "frontmatter": {},
      "regularPath": "/distri/rpc/moa%E5%A4%A7%E8%87%B4.html",
      "relativePath": "distri/rpc/moa大致.md",
      "key": "v-0f34efb4",
      "path": "/distri/rpc/moa%E5%A4%A7%E8%87%B4.html",
      "headers": [
        {
          "level": 3,
          "title": "介绍",
          "slug": "介绍"
        },
        {
          "level": 3,
          "title": "基础架构",
          "slug": "基础架构"
        },
        {
          "level": 3,
          "title": "Java Client调用",
          "slug": "java-client调用"
        },
        {
          "level": 3,
          "title": "通信协议",
          "slug": "通信协议"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4Redis%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BB%A5%E5%8F%8ARedis%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E5%BF%AB.html",
      "relativePath": "db/redis/为什么说Redis是单线程的以及Redis为什么这么快.md",
      "key": "v-6f4b7c82",
      "path": "/db/redis/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4Redis%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BB%A5%E5%8F%8ARedis%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E5%BF%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "为什么那么快",
          "slug": "为什么那么快"
        },
        {
          "level": 3,
          "title": "总结：",
          "slug": "总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "实现思路",
      "frontmatter": {},
      "regularPath": "/distri/rpc/%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0RPC%E6%A1%86%E6%9E%B6.html",
      "relativePath": "distri/rpc/自己实现RPC框架.md",
      "key": "v-bcff95b0",
      "path": "/distri/rpc/%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0RPC%E6%A1%86%E6%9E%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "实现思路",
          "slug": "实现思路"
        },
        {
          "level": 3,
          "title": "另外一种总结",
          "slug": "另外一种总结"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/db/redis/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8F%8C%E5%86%99%E4%B8%80%E8%87%B4%E6%80%A7.html",
      "relativePath": "db/redis/如何保证缓存与数据库的双写一致性.md",
      "key": "v-1e95bc02",
      "path": "/db/redis/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8F%8C%E5%86%99%E4%B8%80%E8%87%B4%E6%80%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "总体解决思路",
          "slug": "总体解决思路"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "Cache Aside Pattern",
          "slug": "cache-aside-pattern"
        },
        {
          "level": 3,
          "title": "最初级的缓存不一致问题及解决方案",
          "slug": "最初级的缓存不一致问题及解决方案"
        },
        {
          "level": 3,
          "title": "比较复杂的数据不一致问题分析",
          "slug": "比较复杂的数据不一致问题分析"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/rpc/%E5%BA%8F%E5%88%97%E5%8C%96%E6%A1%86%E6%9E%B6%E5%AF%B9%E6%AF%94.html",
      "relativePath": "distri/rpc/序列化框架对比.md",
      "key": "v-aa612f3c",
      "path": "/distri/rpc/%E5%BA%8F%E5%88%97%E5%8C%96%E6%A1%86%E6%9E%B6%E5%AF%B9%E6%AF%94.html",
      "headers": [
        {
          "level": 3,
          "title": "为什么要序列化",
          "slug": "为什么要序列化"
        },
        {
          "level": 3,
          "title": "如何判断一个好的序列化",
          "slug": "如何判断一个好的序列化"
        },
        {
          "level": 3,
          "title": "Java原生 InputStream等",
          "slug": "java原生-inputstream等"
        },
        {
          "level": 3,
          "title": "google的Protobuf",
          "slug": "google的protobuf"
        },
        {
          "level": 3,
          "title": "faceBook的Thrift",
          "slug": "facebook的thrift"
        },
        {
          "level": 3,
          "title": "kryo",
          "slug": "kryo"
        },
        {
          "level": 3,
          "title": "fst",
          "slug": "fst"
        },
        {
          "level": 3,
          "title": "序列化成json",
          "slug": "序列化成json"
        },
        {
          "level": 3,
          "title": "开源的Jackson",
          "slug": "开源的jackson"
        },
        {
          "level": 3,
          "title": "Google的Gson",
          "slug": "google的gson"
        },
        {
          "level": 3,
          "title": "阿里巴巴的FastJson",
          "slug": "阿里巴巴的fastjson"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/",
      "relativePath": "distri/the/README.md",
      "key": "v-199fe71d",
      "path": "/distri/the/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/4%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81%E6%96%B9%E6%A1%88.html",
      "relativePath": "distri/the/4种分布式限流方案.md",
      "key": "v-e6853546",
      "path": "/distri/the/4%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 3,
          "title": "计数器",
          "slug": "计数器"
        },
        {
          "level": 3,
          "title": "漏桶算法",
          "slug": "漏桶算法"
        },
        {
          "level": 3,
          "title": "令牌桶算法",
          "slug": "令牌桶算法"
        },
        {
          "level": 3,
          "title": "Nginx",
          "slug": "nginx"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/rpc/dubbo%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "distri/rpc/dubbo原理详解.md",
      "key": "v-0dc8949d",
      "path": "/distri/rpc/dubbo%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "Dubbo 的由来及解决的问题",
          "slug": "dubbo-的由来及解决的问题"
        },
        {
          "level": 3,
          "title": "Dubbo 的工作原理",
          "slug": "dubbo-的工作原理"
        },
        {
          "level": 3,
          "title": "Dubbo 的实现原理(基本设计原则)",
          "slug": "dubbo-的实现原理-基本设计原则"
        },
        {
          "level": 3,
          "title": "Dubbo 的架构与设计",
          "slug": "dubbo-的架构与设计"
        },
        {
          "level": 3,
          "title": "协议支持",
          "slug": "协议支持"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%87%A0%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html",
      "relativePath": "distri/the/几种负载均衡.md",
      "key": "v-0c177317",
      "path": "/distri/the/%E5%87%A0%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/cap%E5%92%8Cbase.html",
      "relativePath": "distri/the/cap和base.md",
      "key": "v-11a5685a",
      "path": "/distri/the/cap%E5%92%8Cbase.html",
      "headers": [
        {
          "level": 3,
          "title": "问题的提出",
          "slug": "问题的提出"
        },
        {
          "level": 3,
          "title": "分布一致性的提出",
          "slug": "分布一致性的提出"
        },
        {
          "level": 3,
          "title": "分布式环境的各种问题",
          "slug": "分布式环境的各种问题"
        },
        {
          "level": 3,
          "title": "CAP理论",
          "slug": "cap理论"
        },
        {
          "level": 3,
          "title": "BASE理论",
          "slug": "base理论"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "1、raft 算法总结",
      "frontmatter": {},
      "regularPath": "/distri/the/%E4%B8%89%E4%B8%AA%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%B2%BE%E7%AE%80%E8%AF%B4%E6%B3%95.html",
      "relativePath": "distri/the/三个协议的精简说法.md",
      "key": "v-4beda2eb",
      "path": "/distri/the/%E4%B8%89%E4%B8%AA%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%B2%BE%E7%AE%80%E8%AF%B4%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "1、raft 算法总结",
          "slug": "_1、raft-算法总结"
        },
        {
          "level": 3,
          "title": "2、zab协议",
          "slug": "_2、zab协议"
        },
        {
          "level": 3,
          "title": "proxay",
          "slug": "proxay"
        },
        {
          "level": 3,
          "title": "三者的对比",
          "slug": "三者的对比"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%87%A0%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E7%AE%97%E6%B3%95.html",
      "relativePath": "distri/the/几种负载均衡的算法.md",
      "key": "v-7c7e6e04",
      "path": "/distri/the/%E5%87%A0%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E7%AE%97%E6%B3%95.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "使用",
      "frontmatter": {},
      "regularPath": "/distri/the/hystrix%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%B7%B1%E6%98%AF%E5%A6%82%E4%BD%95%E9%99%8D%E7%BA%A7%E7%9A%84.html",
      "relativePath": "distri/the/hystrix使用和原理以及自己是如何降级的.md",
      "key": "v-615aefae",
      "path": "/distri/the/hystrix%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%B7%B1%E6%98%AF%E5%A6%82%E4%BD%95%E9%99%8D%E7%BA%A7%E7%9A%84.html",
      "headers": [
        {
          "level": 3,
          "title": "使用",
          "slug": "使用"
        },
        {
          "level": 3,
          "title": "原理",
          "slug": "原理"
        },
        {
          "level": 3,
          "title": "自己如何实现降级的",
          "slug": "自己如何实现降级的"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E4%BF%9D%E8%AF%81%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%846%E7%A7%8D%E6%96%B9%E6%A1%88.html",
      "relativePath": "distri/the/保证分布式系统数据一致性的6种方案.md",
      "key": "v-e204f8e8",
      "path": "/distri/the/%E4%BF%9D%E8%AF%81%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%846%E7%A7%8D%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 3,
          "title": "问题的起源",
          "slug": "问题的起源"
        },
        {
          "level": 3,
          "title": "1. 规避分布式事务——业务整合（不要拆分）",
          "slug": "_1-规避分布式事务-业务整合-不要拆分"
        },
        {
          "level": 3,
          "title": "2. 经典方案 - eBay 模式（异步消息+重试）",
          "slug": "_2-经典方案-ebay-模式-异步消息-重试"
        },
        {
          "level": 3,
          "title": "3. 去哪儿网分布式事务方案（拆分为多个本地事务+异步消息+ACK）",
          "slug": "_3-去哪儿网分布式事务方案-拆分为多个本地事务-异步消息-ack"
        },
        {
          "level": 3,
          "title": "4. 蘑菇街交易创建过程中的分布式一致性方案（不可见订单和重要并行）",
          "slug": "_4-蘑菇街交易创建过程中的分布式一致性方案-不可见订单和重要并行"
        },
        {
          "level": 3,
          "title": "5. 支付宝及蚂蚁金融云的分布式服务 DTS 方案",
          "slug": "_5-支付宝及蚂蚁金融云的分布式服务-dts-方案"
        },
        {
          "level": 3,
          "title": "6. 农信网数据一致性方案",
          "slug": "_6-农信网数据一致性方案"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cap%E5%92%8Cbase%E5%92%8Cacid%E6%80%BB%E4%BD%93.html",
      "relativePath": "distri/the/分布式-cap和base和acid总体.md",
      "key": "v-2113ffb6",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cap%E5%92%8Cbase%E5%92%8Cacid%E6%80%BB%E4%BD%93.html",
      "headers": [
        {
          "level": 3,
          "title": "ACID",
          "slug": "acid"
        },
        {
          "level": 3,
          "title": "cap理论",
          "slug": "cap理论"
        },
        {
          "level": 3,
          "title": "具体协议代表",
          "slug": "具体协议代表"
        },
        {
          "level": 3,
          "title": "BASE理论",
          "slug": "base理论"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-ap-gossip%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/the/分布式-ap-gossip协议.md",
      "key": "v-4ff7c04d",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-ap-gossip%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "Gossip是什么",
          "slug": "gossip是什么"
        },
        {
          "level": 3,
          "title": "六度分隔理论",
          "slug": "六度分隔理论"
        },
        {
          "level": 3,
          "title": "原理",
          "slug": "原理"
        },
        {
          "level": 3,
          "title": "用途",
          "slug": "用途"
        },
        {
          "level": 3,
          "title": "可扩展性",
          "slug": "可扩展性"
        },
        {
          "level": 3,
          "title": "可扩展性",
          "slug": "可扩展性-2"
        },
        {
          "level": 3,
          "title": "健壮性",
          "slug": "健壮性"
        },
        {
          "level": 3,
          "title": "复杂度分析",
          "slug": "复杂度分析"
        },
        {
          "level": 3,
          "title": "Gossip 的特点（优势）",
          "slug": "gossip-的特点-优势"
        },
        {
          "level": 3,
          "title": "Gossip 的缺陷",
          "slug": "gossip-的缺陷"
        },
        {
          "level": 3,
          "title": "Gossip 中的通信模式",
          "slug": "gossip-中的通信模式"
        },
        {
          "level": 3,
          "title": "Redis cluster gossip的机制",
          "slug": "redis-cluster-gossip的机制"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-paxos%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/the/分布式-cp-paxos协议.md",
      "key": "v-cdefbb16",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-paxos%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "Paxos解决共识思路",
          "slug": "paxos解决共识思路"
        },
        {
          "level": 3,
          "title": "Paxos第一阶段：准备Perpare/诺言Promises",
          "slug": "paxos第一阶段-准备perpare-诺言promises"
        },
        {
          "level": 3,
          "title": "第二阶段：Paoxs接纳Acceptance",
          "slug": "第二阶段-paoxs接纳acceptance"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-raft%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/the/分布式-cp-raft协议.md",
      "key": "v-b8fc0ea6",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-raft%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "简单过程，没有细节",
          "slug": "简单过程-没有细节"
        },
        {
          "level": 3,
          "title": "日志复制",
          "slug": "日志复制"
        },
        {
          "level": 3,
          "title": "Raft 的选举过程",
          "slug": "raft-的选举过程"
        },
        {
          "level": 3,
          "title": "Raft 的数据一致性策略",
          "slug": "raft-的数据一致性策略"
        },
        {
          "level": 3,
          "title": "Raft 如何处理 Leader 意外的？",
          "slug": "raft-如何处理-leader-意外的"
        },
        {
          "level": 3,
          "title": "更具有细节的解释",
          "slug": "更具有细节的解释"
        },
        {
          "level": 3,
          "title": "一些名词解释",
          "slug": "一些名词解释"
        },
        {
          "level": 3,
          "title": "1.Term",
          "slug": "_1-term"
        },
        {
          "level": 3,
          "title": "2.RPC",
          "slug": "_2-rpc"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-zab%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/the/分布式-cp-zab协议.md",
      "key": "v-42705bf5",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-zab%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "服务器的状态",
          "slug": "服务器的状态"
        },
        {
          "level": 3,
          "title": "节点的持久数据状态",
          "slug": "节点的持久数据状态"
        },
        {
          "level": 3,
          "title": "四个阶段",
          "slug": "四个阶段"
        },
        {
          "level": 3,
          "title": "Zookeeper的仲裁原则",
          "slug": "zookeeper的仲裁原则"
        },
        {
          "level": 3,
          "title": "Zookeeper对ZAB协议的具体实现",
          "slug": "zookeeper对zab协议的具体实现"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E5%9B%9E%E8%B0%83.html",
      "relativePath": "distri/the/分布式回调.md",
      "key": "v-33c6a1ca",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E5%9B%9E%E8%B0%83.html",
      "headers": [
        {
          "level": 3,
          "title": "线程wait和notify",
          "slug": "线程wait和notify"
        },
        {
          "level": 3,
          "title": "发送消息通知比如kafka",
          "slug": "发送消息通知比如kafka"
        },
        {
          "level": 3,
          "title": "通过订阅发布模型",
          "slug": "通过订阅发布模型"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-zab%E5%92%8Cpaxoy%E5%92%8Craft%E5%8C%BA%E5%88%AB.html",
      "relativePath": "distri/the/分布式-cp-zab和paxoy和raft区别.md",
      "key": "v-14ad01a1",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F-cp-zab%E5%92%8Cpaxoy%E5%92%8Craft%E5%8C%BA%E5%88%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "两阶段提交协议",
          "slug": "两阶段提交协议"
        },
        {
          "level": 3,
          "title": "Paxos和Raft算法",
          "slug": "paxos和raft算法"
        },
        {
          "level": 3,
          "title": "ZAB和Paxos",
          "slug": "zab和paxos"
        },
        {
          "level": 3,
          "title": "zab和raft",
          "slug": "zab和raft"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81.html",
      "relativePath": "distri/the/分布式服务接口请求的顺序性如何保证.md",
      "key": "v-326575a0",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%86%85%E7%9A%84%E6%97%B6%E9%97%B4%E6%97%B6%E9%92%9F%E5%92%8C%E4%BA%8B%E4%BB%B6%E9%A1%BA%E5%BA%8F.html",
      "relativePath": "distri/the/分布式系统内的时间时钟和事件顺序.md",
      "key": "v-d9735ef8",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%86%85%E7%9A%84%E6%97%B6%E9%97%B4%E6%97%B6%E9%92%9F%E5%92%8C%E4%BA%8B%E4%BB%B6%E9%A1%BA%E5%BA%8F.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8FID%E7%94%9F%E6%88%90%E6%96%B9%E6%A1%88.html",
      "relativePath": "distri/the/分布式ID生成方案.md",
      "key": "v-42d01dfd",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8FID%E7%94%9F%E6%88%90%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 3,
          "title": "UUID（机器的网卡+当前时间+一个随机数）",
          "slug": "uuid-机器的网卡-当前时间-一个随机数"
        },
        {
          "level": 3,
          "title": "数据库",
          "slug": "数据库"
        },
        {
          "level": 3,
          "title": "Snowflake",
          "slug": "snowflake"
        },
        {
          "level": 3,
          "title": "实战方案选型",
          "slug": "实战方案选型"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%80ca-2pc%E5%92%8C3pc%E4%BB%A5%E5%8F%8Atcc%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/the/分布式一ca-2pc和3pc以及tcc协议.md",
      "key": "v-5450964d",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%80ca-2pc%E5%92%8C3pc%E4%BB%A5%E5%8F%8Atcc%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "2PC（阻塞、数据不一致问题、单点问题）",
          "slug": "_2pc-阻塞、数据不一致问题、单点问题"
        },
        {
          "level": 3,
          "title": "3PC（解决2PC的阻塞，但还是可能造成数据不一致）",
          "slug": "_3pc-解决2pc的阻塞-但还是可能造成数据不一致"
        },
        {
          "level": 3,
          "title": "2pc和3pc对比",
          "slug": "_2pc和3pc对比"
        },
        {
          "level": 3,
          "title": "TCC",
          "slug": "tcc"
        },
        {
          "level": 3,
          "title": "2pc和TCC区别",
          "slug": "_2pc和tcc区别"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9B%9E%E8%B0%83%E7%AD%96%E7%95%A5.html",
      "relativePath": "distri/the/分布式异步回调模型的回调策略.md",
      "key": "v-646760de",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9B%9E%E8%B0%83%E7%AD%96%E7%95%A5.html",
      "headers": [
        {
          "level": 3,
          "title": "Asynchronous Web Service Using a Single Request Queue",
          "slug": "asynchronous-web-service-using-a-single-request-queue"
        },
        {
          "level": 3,
          "title": "Asynchronous Web Service Using a Request and a Response Queue",
          "slug": "asynchronous-web-service-using-a-request-and-a-response-queue"
        },
        {
          "level": 3,
          "title": "轮询回调模型设计",
          "slug": "轮询回调模型设计"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",
      "relativePath": "distri/the/分布式锁的实现方式.md",
      "key": "v-6a5df5c1",
      "path": "/distri/the/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "redis 分布式锁",
          "slug": "redis-分布式锁"
        },
        {
          "level": 3,
          "title": "zk 分布式锁",
          "slug": "zk-分布式锁"
        },
        {
          "level": 3,
          "title": "redis 分布式锁和 zk 分布式锁的对比",
          "slug": "redis-分布式锁和-zk-分布式锁的对比"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F.html",
      "relativePath": "distri/the/如何设计分布式系统.md",
      "key": "v-418509bc",
      "path": "/distri/the/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",
      "relativePath": "distri/the/如何建立一个分布式计数器.md",
      "key": "v-4fe18224",
      "path": "/distri/the/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",
      "headers": [
        {
          "level": 3,
          "title": "更新一个值，失去并发行",
          "slug": "更新一个值-失去并发行"
        },
        {
          "level": 3,
          "title": "使用CAS，提高并发但是会造成饥饿",
          "slug": "使用cas-提高并发但是会造成饥饿"
        },
        {
          "level": 3,
          "title": "使用队列更新了，只能提高吞吐，但不是并发的",
          "slug": "使用队列更新了-只能提高吞吐-但不是并发的"
        },
        {
          "level": 3,
          "title": "每个更新自己的值，但是更新前都能看到别人的值",
          "slug": "每个更新自己的值-但是更新前都能看到别人的值"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%A6%82%E4%BD%95%E6%9E%B6%E6%9E%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F.html",
      "relativePath": "distri/the/如何架构分布式系统.md",
      "key": "v-4df33b30",
      "path": "/distri/the/%E5%A6%82%E4%BD%95%E6%9E%B6%E6%9E%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F.html",
      "headers": [
        {
          "level": 3,
          "title": "如何架构分布式系统",
          "slug": "如何架构分布式系统"
        },
        {
          "level": 3,
          "title": "分布式系统的模型抽象",
          "slug": "分布式系统的模型抽象"
        },
        {
          "level": 3,
          "title": "分布式系统的设计技巧：分区和复制",
          "slug": "分布式系统的设计技巧-分区和复制"
        },
        {
          "level": 3,
          "title": "分布式系统的设计技巧：时钟和顺序",
          "slug": "分布式系统的设计技巧-时钟和顺序"
        },
        {
          "level": 3,
          "title": "如何架构分布式系统",
          "slug": "如何架构分布式系统-2"
        },
        {
          "level": 3,
          "title": "分布式系统的模型抽象",
          "slug": "分布式系统的模型抽象-2"
        },
        {
          "level": 3,
          "title": "分布式系统的设计技巧：分区和复制",
          "slug": "分布式系统的设计技巧-分区和复制-2"
        },
        {
          "level": 3,
          "title": "分布式系统的设计技巧：时钟和顺序",
          "slug": "分布式系统的设计技巧-时钟和顺序-2"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%8F%AF%E9%9D%A0%E6%B6%88%E6%81%AF%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E6%96%B9%E6%A1%88.html",
      "relativePath": "distri/the/可靠消息最终一致性方案.md",
      "key": "v-1dc06a67",
      "path": "/distri/the/%E5%8F%AF%E9%9D%A0%E6%B6%88%E6%81%AF%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "两阶段提交方案/XA方案",
          "slug": "两阶段提交方案-xa方案"
        },
        {
          "level": 3,
          "title": "TCC 方案",
          "slug": "tcc-方案"
        },
        {
          "level": 3,
          "title": "本地消息表",
          "slug": "本地消息表"
        },
        {
          "level": 3,
          "title": "可靠消息最终一致性方案",
          "slug": "可靠消息最终一致性方案"
        },
        {
          "level": 3,
          "title": "最大努力通知方案",
          "slug": "最大努力通知方案"
        },
        {
          "level": 3,
          "title": "你们公司是如何处理分布式事务的？",
          "slug": "你们公司是如何处理分布式事务的"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/",
      "relativePath": "distri/zk/README.md",
      "key": "v-cde57eb6",
      "path": "/distri/zk/",
      "lastUpdated": "2022-01-05 10:16:49"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/the/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F.html",
      "relativePath": "distri/the/如何设计一个高并发系统.md",
      "key": "v-102bba8a",
      "path": "/distri/the/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "系统拆分",
          "slug": "系统拆分"
        },
        {
          "level": 3,
          "title": "缓存",
          "slug": "缓存"
        },
        {
          "level": 3,
          "title": "MQ",
          "slug": "mq"
        },
        {
          "level": 3,
          "title": "分库分表",
          "slug": "分库分表"
        },
        {
          "level": 3,
          "title": "读写分离",
          "slug": "读写分离"
        },
        {
          "level": 3,
          "title": "ElasticSearch",
          "slug": "elasticsearch"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "简单实现配置中心核心思想",
      "frontmatter": {},
      "regularPath": "/distri/zk/zk%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "relativePath": "distri/zk/zk实现注册中心.md",
      "key": "v-0bf10a28",
      "path": "/distri/zk/zk%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "headers": [
        {
          "level": 3,
          "title": "简单实现配置中心核心思想",
          "slug": "简单实现配置中心核心思想"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/zk%E9%97%AE%E7%AD%94.html",
      "relativePath": "distri/zk/zk问答.md",
      "key": "v-28788e8a",
      "path": "/distri/zk/zk%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "请你详细谈谈什么是zab协议？",
          "slug": "请你详细谈谈什么是zab协议"
        },
        {
          "level": 3,
          "title": "那选举新leader的算法是什么？",
          "slug": "那选举新leader的算法是什么"
        },
        {
          "level": 3,
          "title": "那重新投票选举leader怎么保证数据不会丢失？",
          "slug": "那重新投票选举leader怎么保证数据不会丢失"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/ZooKeeper%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%80%E8%A7%88.html",
      "relativePath": "distri/zk/ZooKeeper典型应用场景一览.md",
      "key": "v-e6823624",
      "path": "/distri/zk/ZooKeeper%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%80%E8%A7%88.html",
      "headers": [
        {
          "level": 3,
          "title": "数据发布与订阅（配置中心）",
          "slug": "数据发布与订阅-配置中心"
        },
        {
          "level": 3,
          "title": "负载均衡",
          "slug": "负载均衡"
        },
        {
          "level": 3,
          "title": "命名服务(Naming Service)",
          "slug": "命名服务-naming-service"
        },
        {
          "level": 3,
          "title": "分布式通知/协调",
          "slug": "分布式通知-协调"
        },
        {
          "level": 3,
          "title": "集群管理与Master选举",
          "slug": "集群管理与master选举"
        },
        {
          "level": 3,
          "title": "分布式锁",
          "slug": "分布式锁"
        },
        {
          "level": 3,
          "title": "分布式队列",
          "slug": "分布式队列"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/GET%E5%92%8CPOST%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "internet/GET和POST的区别.md",
      "key": "v-4cf61e90",
      "path": "/internet/GET%E5%92%8CPOST%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/HTTP%E5%92%8CHTTPS%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "internet/HTTP和HTTPS的区别.md",
      "key": "v-4888655c",
      "path": "/internet/HTTP%E5%92%8CHTTPS%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/zab%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "distri/zk/zab协议.md",
      "key": "v-6063e50c",
      "path": "/distri/zk/zab%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "协议状态",
          "slug": "协议状态"
        },
        {
          "level": 3,
          "title": "阶段",
          "slug": "阶段"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/HTTP%E7%8A%B6%E6%80%81.html",
      "relativePath": "internet/HTTP状态.md",
      "key": "v-17c93fe4",
      "path": "/internet/HTTP%E7%8A%B6%E6%80%81.html",
      "headers": [
        {
          "level": 3,
          "title": "（1）1XX 信息",
          "slug": "_1-1xx-信息"
        },
        {
          "level": 3,
          "title": "（2）2XX 成功",
          "slug": "_2-2xx-成功"
        },
        {
          "level": 3,
          "title": "（3）3XX 重定向",
          "slug": "_3-3xx-重定向"
        },
        {
          "level": 3,
          "title": "（4）4XX 客户端错误",
          "slug": "_4-4xx-客户端错误"
        },
        {
          "level": 3,
          "title": "（5）5XX 服务器错误",
          "slug": "_5-5xx-服务器错误"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/HTTP%E6%96%B9%E6%B3%95.html",
      "relativePath": "internet/HTTP方法.md",
      "key": "v-3e9b828e",
      "path": "/internet/HTTP%E6%96%B9%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "（1）GET",
          "slug": "_1-get"
        },
        {
          "level": 3,
          "title": "（2）HEAD",
          "slug": "_2-head"
        },
        {
          "level": 3,
          "title": "（3）POST",
          "slug": "_3-post"
        },
        {
          "level": 3,
          "title": "（4）PUT",
          "slug": "_4-put"
        },
        {
          "level": 3,
          "title": "（5）PATCH",
          "slug": "_5-patch"
        },
        {
          "level": 3,
          "title": "（6）DELETE",
          "slug": "_6-delete"
        },
        {
          "level": 3,
          "title": "（7）OPTIONS",
          "slug": "_7-options"
        },
        {
          "level": 3,
          "title": "（8）CONNECT",
          "slug": "_8-connect"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/",
      "relativePath": "internet/README.md",
      "key": "v-340b32dd",
      "path": "/internet/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/%E4%BB%8E%E8%BE%93%E5%85%A5%E7%BD%91%E5%9D%80%E5%88%B0%E8%8E%B7%E5%BE%97%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.html",
      "relativePath": "internet/从输入网址到获得页面的网络请求过程.md",
      "key": "v-bab5c5cc",
      "path": "/internet/%E4%BB%8E%E8%BE%93%E5%85%A5%E7%BD%91%E5%9D%80%E5%88%B0%E8%8E%B7%E5%BE%97%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3HTTP%E5%8D%8F%E8%AE%AE%E6%98%AF%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84.html",
      "relativePath": "internet/如何理解HTTP协议是无状态的.md",
      "key": "v-d9df6a26",
      "path": "/internet/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3HTTP%E5%8D%8F%E8%AE%AE%E6%98%AF%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/zk%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html",
      "relativePath": "distri/zk/zk实现分布式锁.md",
      "key": "v-88f96430",
      "path": "/distri/zk/zk%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html",
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.html",
      "relativePath": "internet/非对称加密.md",
      "key": "v-2a44a626",
      "path": "/internet/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/distri/zk/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%87%E7%A8%8B%E5%8D%8F%E5%90%8C%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "distri/zk/Zookeeper分布式过程协同技术详解.md",
      "key": "v-6db47582",
      "path": "/distri/zk/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%87%E7%A8%8B%E5%8D%8F%E5%90%8C%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "Zookeeper的使命",
          "slug": "zookeeper的使命"
        },
        {
          "level": 3,
          "title": "Zookeeper不适用的场景",
          "slug": "zookeeper不适用的场景"
        },
        {
          "level": 3,
          "title": "通过Zookeeper构建分布式系统",
          "slug": "通过zookeeper构建分布式系统"
        },
        {
          "level": 3,
          "title": "Zookeeper基础",
          "slug": "zookeeper基础"
        },
        {
          "level": 3,
          "title": "API概述",
          "slug": "api概述"
        },
        {
          "level": 3,
          "title": "znode的不同类型",
          "slug": "znode的不同类型"
        },
        {
          "level": 3,
          "title": "监视与通知",
          "slug": "监视与通知"
        },
        {
          "level": 3,
          "title": "版本",
          "slug": "版本"
        },
        {
          "level": 3,
          "title": "Zookeeper的仲裁",
          "slug": "zookeeper的仲裁"
        },
        {
          "level": 3,
          "title": "会话",
          "slug": "会话"
        },
        {
          "level": 3,
          "title": "监视点的羊群效应",
          "slug": "监视点的羊群效应"
        },
        {
          "level": 3,
          "title": "故障处理",
          "slug": "故障处理"
        },
        {
          "level": 3,
          "title": "可恢复的故障",
          "slug": "可恢复的故障"
        },
        {
          "level": 3,
          "title": "不可恢复的故障",
          "slug": "不可恢复的故障"
        },
        {
          "level": 3,
          "title": "Zookeeper注意事项",
          "slug": "zookeeper注意事项"
        },
        {
          "level": 3,
          "title": "Zookeeper内部原理",
          "slug": "zookeeper内部原理"
        },
        {
          "level": 3,
          "title": "Zab：状态更新的广播协议",
          "slug": "zab-状态更新的广播协议"
        },
        {
          "level": 3,
          "title": "群首服务器",
          "slug": "群首服务器"
        },
        {
          "level": 3,
          "title": "本地存储",
          "slug": "本地存储"
        }
      ],
      "lastUpdated": "2022-01-04 13:20:52"
    },
    {
      "title": "期望薪资 32-33K",
      "frontmatter": {},
      "regularPath": "/interview/HR.html",
      "relativePath": "interview/HR.md",
      "key": "v-2f3aaa2a",
      "path": "/interview/HR.html",
      "headers": [
        {
          "level": 3,
          "title": "期望薪资 32-33K",
          "slug": "期望薪资-32-33k"
        },
        {
          "level": 3,
          "title": "要能够理解HR问问题的背后逻辑",
          "slug": "要能够理解hr问问题的背后逻辑"
        },
        {
          "level": 3,
          "title": "为什么离职",
          "slug": "为什么离职"
        },
        {
          "level": 3,
          "title": "哪个项目学到的东西最多",
          "slug": "哪个项目学到的东西最多"
        },
        {
          "level": 3,
          "title": "陌陌学到什么东西",
          "slug": "陌陌学到什么东西"
        },
        {
          "level": 3,
          "title": "三个词语概括自己的性格",
          "slug": "三个词语概括自己的性格"
        },
        {
          "level": 3,
          "title": "心中的互联网公司排名",
          "slug": "心中的互联网公司排名"
        },
        {
          "level": 3,
          "title": "自己的优点和缺点",
          "slug": "自己的优点和缺点"
        },
        {
          "level": 3,
          "title": "未来的职业规划是什么",
          "slug": "未来的职业规划是什么"
        },
        {
          "level": 3,
          "title": "最近看什么书",
          "slug": "最近看什么书"
        },
        {
          "level": 3,
          "title": "你个人短期和长期目标分别是什么",
          "slug": "你个人短期和长期目标分别是什么"
        },
        {
          "level": 3,
          "title": "加班/工作压力的问题",
          "slug": "加班-工作压力的问题"
        },
        {
          "level": 3,
          "title": "给不了期望薪资",
          "slug": "给不了期望薪资"
        },
        {
          "level": 3,
          "title": "问题",
          "slug": "问题"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/internet/HTTPS%E4%B8%AD%E7%9A%84TLS.html",
      "relativePath": "internet/HTTPS中的TLS.md",
      "key": "v-6cdda1e1",
      "path": "/internet/HTTPS%E4%B8%AD%E7%9A%84TLS.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1. TLS 工作流程",
          "slug": "_3-1-tls-工作流程"
        },
        {
          "level": 2,
          "title": "3.2. 密码基础",
          "slug": "_3-2-密码基础"
        },
        {
          "level": 3,
          "title": "3.2.1. 伪随机数生成器",
          "slug": "_3-2-1-伪随机数生成器"
        },
        {
          "level": 3,
          "title": "3.2.2. 消息认证码",
          "slug": "_3-2-2-消息认证码"
        },
        {
          "level": 3,
          "title": "3.2.3. 数字签名",
          "slug": "_3-2-3-数字签名"
        },
        {
          "level": 3,
          "title": "3.2.4. 公钥密码",
          "slug": "_3-2-4-公钥密码"
        },
        {
          "level": 3,
          "title": "3.2.5. 证书",
          "slug": "_3-2-5-证书"
        },
        {
          "level": 3,
          "title": "3.2.6. 密码小结",
          "slug": "_3-2-6-密码小结"
        },
        {
          "level": 2,
          "title": "3.3. TLS 使用的密码技术",
          "slug": "_3-3-tls-使用的密码技术"
        },
        {
          "level": 2,
          "title": "3.4. TLS 总结",
          "slug": "_3-4-tls-总结"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "网络安全",
      "frontmatter": {},
      "regularPath": "/internet/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8.html",
      "relativePath": "internet/网络安全.md",
      "key": "v-1b5219e7",
      "path": "/internet/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 怎么知道连接是恶意的呢？可能是正常连接？",
          "slug": "_1-怎么知道连接是恶意的呢-可能是正常连接"
        },
        {
          "level": 2,
          "title": "2. 跨站脚本攻击XSS",
          "slug": "_2-跨站脚本攻击xss"
        },
        {
          "level": 3,
          "title": "XSS攻击是什么",
          "slug": "xss攻击是什么"
        },
        {
          "level": 3,
          "title": "XSS的危害",
          "slug": "xss的危害"
        },
        {
          "level": 3,
          "title": "攻击分类举例",
          "slug": "攻击分类举例"
        },
        {
          "level": 3,
          "title": "防范",
          "slug": "防范"
        },
        {
          "level": 3,
          "title": "困难和幸运",
          "slug": "困难和幸运"
        },
        {
          "level": 2,
          "title": "3. 跨站请求伪造CSRF",
          "slug": "_3-跨站请求伪造csrf"
        },
        {
          "level": 3,
          "title": "CSRF是什么？",
          "slug": "csrf是什么"
        },
        {
          "level": 3,
          "title": "CSRF原理",
          "slug": "csrf原理"
        },
        {
          "level": 3,
          "title": "如何预防CSRF",
          "slug": "如何预防csrf"
        },
        {
          "level": 3,
          "title": "如何用简洁生动的语言说明 XSS 和 CSRF 的区别？",
          "slug": "如何用简洁生动的语言说明-xss-和-csrf-的区别"
        },
        {
          "level": 2,
          "title": "4. SQL注入攻击",
          "slug": "_4-sql注入攻击"
        },
        {
          "level": 3,
          "title": "什么是SQL注入？",
          "slug": "什么是sql注入"
        },
        {
          "level": 3,
          "title": "如何防止SQL注入？",
          "slug": "如何防止sql注入"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "5. 拒绝服务攻击DDoS",
          "slug": "_5-拒绝服务攻击ddos"
        },
        {
          "level": 3,
          "title": "SYN Flood",
          "slug": "syn-flood"
        },
        {
          "level": 3,
          "title": "CC 攻击",
          "slug": "cc-攻击"
        },
        {
          "level": 3,
          "title": "NTP Flood",
          "slug": "ntp-flood"
        },
        {
          "level": 3,
          "title": "预防",
          "slug": "预防"
        },
        {
          "level": 3,
          "title": "DOS攻击之泪滴攻击",
          "slug": "dos攻击之泪滴攻击"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/interview/",
      "relativePath": "interview/README.md",
      "key": "v-0108e869",
      "path": "/interview/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/interview/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "relativePath": "interview/Java集合框架常见面试题.md",
      "key": "v-f190e45e",
      "path": "/interview/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "说说List,Set,Map三者的区别？",
          "slug": "说说list-set-map三者的区别"
        },
        {
          "level": 2,
          "title": "Arraylist 与 LinkedList 区别?",
          "slug": "arraylist-与-linkedlist-区别"
        },
        {
          "level": 3,
          "title": "补充内容:RandomAccess接口",
          "slug": "补充内容-randomaccess接口"
        },
        {
          "level": 3,
          "title": "补充内容:双向链表和双向循环链表",
          "slug": "补充内容-双向链表和双向循环链表"
        },
        {
          "level": 2,
          "title": "ArrayList 与 Vector 区别呢?为什么要用Arraylist取代Vector呢？",
          "slug": "arraylist-与-vector-区别呢-为什么要用arraylist取代vector呢"
        },
        {
          "level": 2,
          "title": "说一说 ArrayList 的扩容机制吧",
          "slug": "说一说-arraylist-的扩容机制吧"
        },
        {
          "level": 2,
          "title": "HashMap 和 Hashtable 的区别",
          "slug": "hashmap-和-hashtable-的区别"
        },
        {
          "level": 2,
          "title": "HashMap 和 HashSet区别",
          "slug": "hashmap-和-hashset区别"
        },
        {
          "level": 2,
          "title": "HashSet如何检查重复",
          "slug": "hashset如何检查重复"
        },
        {
          "level": 2,
          "title": "HashMap的底层实现",
          "slug": "hashmap的底层实现"
        },
        {
          "level": 3,
          "title": "JDK1.8之前",
          "slug": "jdk1-8之前"
        },
        {
          "level": 3,
          "title": "JDK1.8之后",
          "slug": "jdk1-8之后"
        },
        {
          "level": 2,
          "title": "HashMap 的长度为什么是2的幂次方",
          "slug": "hashmap-的长度为什么是2的幂次方"
        },
        {
          "level": 2,
          "title": "HashMap 多线程操作导致死循环问题",
          "slug": "hashmap-多线程操作导致死循环问题"
        },
        {
          "level": 2,
          "title": "ConcurrentHashMap 和 Hashtable 的区别",
          "slug": "concurrenthashmap-和-hashtable-的区别"
        },
        {
          "level": 2,
          "title": "ConcurrentHashMap线程安全的具体实现方式/底层具体实现",
          "slug": "concurrenthashmap线程安全的具体实现方式-底层具体实现"
        },
        {
          "level": 3,
          "title": "JDK1.7（上面有示意图）",
          "slug": "jdk1-7-上面有示意图"
        },
        {
          "level": 3,
          "title": "JDK1.8 （上面有示意图）",
          "slug": "jdk1-8-上面有示意图"
        },
        {
          "level": 2,
          "title": "comparable 和 Comparator的区别",
          "slug": "comparable-和-comparator的区别"
        },
        {
          "level": 3,
          "title": "Comparator定制排序",
          "slug": "comparator定制排序"
        },
        {
          "level": 3,
          "title": "重写compareTo方法实现按年龄来排序",
          "slug": "重写compareto方法实现按年龄来排序"
        },
        {
          "level": 2,
          "title": "集合框架底层数据结构总结",
          "slug": "集合框架底层数据结构总结"
        },
        {
          "level": 3,
          "title": "Collection",
          "slug": "collection"
        },
        {
          "level": 3,
          "title": "Map",
          "slug": "map"
        },
        {
          "level": 2,
          "title": "如何选用集合?",
          "slug": "如何选用集合"
        },
        {
          "level": 2,
          "title": "公众号",
          "slug": "公众号"
        },
        {
          "level": 3,
          "title": "HashMap在1.7和1.8之间的变化：",
          "slug": "hashmap在1-7和1-8之间的变化"
        },
        {
          "level": 3,
          "title": "hashmap冲突插入的位置",
          "slug": "hashmap冲突插入的位置"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/interview/JVM%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "relativePath": "interview/JVM面试题.md",
      "key": "v-3ecaae64",
      "path": "/interview/JVM%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "headers": [
        {
          "level": 3,
          "title": "1、JVM运行内存的分类",
          "slug": "_1、jvm运行内存的分类"
        },
        {
          "level": 3,
          "title": "2、Java内存堆和栈区别",
          "slug": "_2、java内存堆和栈区别"
        },
        {
          "level": 3,
          "title": "3、Java四引用",
          "slug": "_3、java四引用"
        },
        {
          "level": 3,
          "title": "4、GC 标记对象的死活",
          "slug": "_4、gc-标记对象的死活"
        },
        {
          "level": 3,
          "title": "5、GC回收算法",
          "slug": "_5、gc回收算法"
        },
        {
          "level": 3,
          "title": "6、MinorGC&FullGC触发条件",
          "slug": "_6、minorgc-fullgc触发条件"
        },
        {
          "level": 3,
          "title": "7、两个对象相互引用，会不会被GC?",
          "slug": "_7、两个对象相互引用-会不会被gc"
        },
        {
          "level": 3,
          "title": "8、引起类加载操作的五个行为",
          "slug": "_8、引起类加载操作的五个行为"
        },
        {
          "level": 3,
          "title": "9、Java对象创建时机",
          "slug": "_9、java对象创建时机"
        },
        {
          "level": 3,
          "title": "10、类的生命周期",
          "slug": "_10、类的生命周期"
        },
        {
          "level": 3,
          "title": "11、Java类加载器",
          "slug": "_11、java类加载器"
        },
        {
          "level": 3,
          "title": "12、双亲委派模型的工作过程",
          "slug": "_12、双亲委派模型的工作过程"
        },
        {
          "level": 3,
          "title": "13、双亲委托机制的作用",
          "slug": "_13、双亲委托机制的作用"
        },
        {
          "level": 3,
          "title": "14、如何打破双亲委派模型？",
          "slug": "_14、如何打破双亲委派模型"
        },
        {
          "level": 3,
          "title": "15、自定义ClassLoader：",
          "slug": "_15、自定义classloader"
        },
        {
          "level": 3,
          "title": "16、类加载有三种方式：",
          "slug": "_16、类加载有三种方式"
        },
        {
          "level": 3,
          "title": "17、JVM的永久代中会发生垃圾回收么",
          "slug": "_17、jvm的永久代中会发生垃圾回收么"
        },
        {
          "level": 3,
          "title": "18、Java对象结构",
          "slug": "_18、java对象结构"
        },
        {
          "level": 3,
          "title": "19、讲讲什么情况下会出现内存溢出，内存泄漏",
          "slug": "_19、讲讲什么情况下会出现内存溢出-内存泄漏"
        },
        {
          "level": 3,
          "title": "20、类的实例化顺序",
          "slug": "_20、类的实例化顺序"
        },
        {
          "level": 3,
          "title": "21、CMS的几个阶段：",
          "slug": "_21、cms的几个阶段"
        },
        {
          "level": 3,
          "title": "22、调优命令",
          "slug": "_22、调优命令"
        },
        {
          "level": 3,
          "title": "23、命令",
          "slug": "_23、命令"
        },
        {
          "level": 3,
          "title": "24、JRE、JDK、JVM 及 JIT 之间有什么不同？",
          "slug": "_24、jre、jdk、jvm-及-jit-之间有什么不同"
        },
        {
          "level": 3,
          "title": "24、JIT",
          "slug": "_24、jit"
        },
        {
          "level": 3,
          "title": "25、方法内联是什么。为什么它能够提升性能",
          "slug": "_25、方法内联是什么。为什么它能够提升性能"
        },
        {
          "level": 3,
          "title": "26、promotion failed和concurrent mode failure原因以及解决办法",
          "slug": "_26、promotion-failed和concurrent-mode-failure原因以及解决办法"
        },
        {
          "level": 3,
          "title": "27、如何⾃定义⼀个类加载器？你使⽤过哪些或者你在什么场景下需要⼀个⾃定义的类加载器吗？",
          "slug": "_27、如何自定义一个类加载器-你使用过哪些或者你在什么场景下需要一个自定义的类加载器吗"
        },
        {
          "level": 3,
          "title": "28、java对象创建过程",
          "slug": "_28、java对象创建过程"
        },
        {
          "level": 3,
          "title": "30、JVM 整体组成",
          "slug": "_30、jvm-整体组成"
        },
        {
          "level": 3,
          "title": "31、运行时数据区中哪些区域是线程共享的？哪些是独享的？",
          "slug": "_31、运行时数据区中哪些区域是线程共享的-哪些是独享的"
        },
        {
          "level": 3,
          "title": "32、堆和栈的区别是什么？",
          "slug": "_32、堆和栈的区别是什么"
        },
        {
          "level": 3,
          "title": "33、Java中的数组是存储在堆上还是栈上的？",
          "slug": "_33、java中的数组是存储在堆上还是栈上的"
        },
        {
          "level": 3,
          "title": "34、Java中的对象一定在堆上分配内存吗？",
          "slug": "_34、java中的对象一定在堆上分配内存吗"
        },
        {
          "level": 3,
          "title": "35、对象的访问定位的两种方式（句柄和直接指针两种方式）",
          "slug": "_35、对象的访问定位的两种方式-句柄和直接指针两种方式"
        },
        {
          "level": 3,
          "title": "36、如何判断一个常量是废弃常量",
          "slug": "_36、如何判断一个常量是废弃常量"
        },
        {
          "level": 3,
          "title": "37、如何判断一个类是无用的类",
          "slug": "_37、如何判断一个类是无用的类"
        },
        {
          "level": 3,
          "title": "GC分类",
          "slug": "gc分类"
        },
        {
          "level": 3,
          "title": "为什么MinorGC比较快呢？",
          "slug": "为什么minorgc比较快呢"
        },
        {
          "level": 3,
          "title": "Minor GC的时候为什么不需要扫描Old Generation",
          "slug": "minor-gc的时候为什么不需要扫描old-generation"
        },
        {
          "level": 3,
          "title": "G1 为什么比CMS能更好的预测GC的停顿时间呢？",
          "slug": "g1-为什么比cms能更好的预测gc的停顿时间呢"
        },
        {
          "level": 3,
          "title": "为什么需要STW",
          "slug": "为什么需要stw"
        },
        {
          "level": 3,
          "title": "minor GC 要stop world的吗",
          "slug": "minor-gc-要stop-world的吗"
        },
        {
          "level": 3,
          "title": "为什么 CMS两次标记时要 stop the world",
          "slug": "为什么-cms两次标记时要-stop-the-world"
        },
        {
          "level": 3,
          "title": "如何做到一个系统几乎0次Full GC",
          "slug": "如何做到一个系统几乎0次full-gc"
        },
        {
          "level": 3,
          "title": "CMS哪个阶段最耗时",
          "slug": "cms哪个阶段最耗时"
        },
        {
          "level": 3,
          "title": "CMS过程",
          "slug": "cms过程"
        },
        {
          "level": 3,
          "title": "CMS的优点、缺点",
          "slug": "cms的优点、缺点"
        },
        {
          "level": 3,
          "title": "G1为什么快",
          "slug": "g1为什么快"
        },
        {
          "level": 3,
          "title": "JVM内存结构 VS Java内存模型 VS Java对象模型",
          "slug": "jvm内存结构-vs-java内存模型-vs-java对象模型"
        },
        {
          "level": 3,
          "title": "到底什么是JMM",
          "slug": "到底什么是jmm"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "基础",
      "frontmatter": {},
      "regularPath": "/interview/MYSQL%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/MYSQL问答.md",
      "key": "v-fd473338",
      "path": "/interview/MYSQL%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 2,
          "title": "基础",
          "slug": "基础"
        },
        {
          "level": 3,
          "title": "1、mysql选择B+树的原因",
          "slug": "_1、mysql选择b-树的原因"
        },
        {
          "level": 3,
          "title": "2、explain各个字段的涵义",
          "slug": "_2、explain各个字段的涵义"
        },
        {
          "level": 3,
          "title": "3、怎么截取一部分作为索引：",
          "slug": "_3、怎么截取一部分作为索引"
        },
        {
          "level": 3,
          "title": "4、联合索引的数据结构",
          "slug": "_4、联合索引的数据结构"
        },
        {
          "level": 3,
          "title": "5、B+的特点",
          "slug": "_5、b-的特点"
        },
        {
          "level": 3,
          "title": "5、磁盘存取原理",
          "slug": "_5、磁盘存取原理"
        },
        {
          "level": 3,
          "title": "6、一张表，里面有ID自增主键，当insert了17条记录之后，删除了第15,16,17条记录，再把Mysql重启，再insert一条记录，这条记录的ID是18还是15 ？",
          "slug": "_6、一张表-里面有id自增主键-当insert了17条记录之后-删除了第15-16-17条记录-再把mysql重启-再insert一条记录-这条记录的id是18还是15"
        },
        {
          "level": 3,
          "title": "7、什么时候会用行级锁？",
          "slug": "_7、什么时候会用行级锁"
        },
        {
          "level": 3,
          "title": "8、最左前缀匹配原则",
          "slug": "_8、最左前缀匹配原则"
        },
        {
          "level": 3,
          "title": "mysql 5.7.19版本的索引长度上限是多少?以及为什么",
          "slug": "mysql-5-7-19版本的索引长度上限是多少-以及为什么"
        },
        {
          "level": 3,
          "title": "b树和B+树的区别",
          "slug": "b树和b-树的区别"
        },
        {
          "level": 3,
          "title": "索引设计原则",
          "slug": "索引设计原则"
        },
        {
          "level": 3,
          "title": "MyISAM和Innodb区别",
          "slug": "myisam和innodb区别"
        },
        {
          "level": 3,
          "title": "什么时候会全表扫描",
          "slug": "什么时候会全表扫描"
        },
        {
          "level": 3,
          "title": "B+树中所有叶子节点都是通过指针连接在一起的好处",
          "slug": "b-树中所有叶子节点都是通过指针连接在一起的好处"
        },
        {
          "level": 3,
          "title": "B+树的插入过程",
          "slug": "b-树的插入过程"
        },
        {
          "level": 3,
          "title": "索引原理",
          "slug": "索引原理"
        },
        {
          "level": 3,
          "title": "主索引和辅助索引",
          "slug": "主索引和辅助索引"
        },
        {
          "level": 3,
          "title": "页分裂",
          "slug": "页分裂"
        },
        {
          "level": 3,
          "title": "B-树和Hash索引区别",
          "slug": "b-树和hash索引区别"
        },
        {
          "level": 3,
          "title": "大于等于,走不走索引,最左前缀",
          "slug": "大于等于-走不走索引-最左前缀"
        },
        {
          "level": 3,
          "title": "SQL中索引未使用的情况",
          "slug": "sql中索引未使用的情况"
        },
        {
          "level": 3,
          "title": "意向锁的使用",
          "slug": "意向锁的使用"
        },
        {
          "level": 3,
          "title": "MYSQL怎么提高读写并发",
          "slug": "mysql怎么提高读写并发"
        },
        {
          "level": 3,
          "title": "技术上，通常如何进行并发控制",
          "slug": "技术上-通常如何进行并发控制"
        },
        {
          "level": 3,
          "title": "MySQL一个索引最多有多少个列",
          "slug": "mysql一个索引最多有多少个列"
        },
        {
          "level": 3,
          "title": "InnoDB，5项最佳实践，知其所以然",
          "slug": "innodb-5项最佳实践-知其所以然"
        },
        {
          "level": 3,
          "title": "like会用索引吗",
          "slug": "like会用索引吗"
        },
        {
          "level": 3,
          "title": "记一次MySQL主从复制延迟的坑",
          "slug": "记一次mysql主从复制延迟的坑"
        },
        {
          "level": 3,
          "title": "大规模数据库的性能和伸缩性优化",
          "slug": "大规模数据库的性能和伸缩性优化"
        },
        {
          "level": 3,
          "title": "change buffering(再了解)",
          "slug": "change-buffering-再了解"
        },
        {
          "level": 3,
          "title": "为什么要做主从复制？",
          "slug": "为什么要做主从复制"
        },
        {
          "level": 3,
          "title": "MYSQL主从复制的流程",
          "slug": "mysql主从复制的流程"
        },
        {
          "level": 3,
          "title": "MYSQL磁盘IO的基本常识",
          "slug": "mysql磁盘io的基本常识"
        },
        {
          "level": 3,
          "title": "key_len",
          "slug": "key-len"
        },
        {
          "level": 3,
          "title": "=、>=等的匹配",
          "slug": "、-等的匹配"
        },
        {
          "level": 3,
          "title": "Between 和Like 的处理",
          "slug": "between-和like-的处理"
        },
        {
          "level": 3,
          "title": "给我一个不用 Null 的理由",
          "slug": "给我一个不用-null-的理由"
        },
        {
          "level": 3,
          "title": "索引分裂",
          "slug": "索引分裂"
        },
        {
          "level": 3,
          "title": "你不知道的8条SQL技巧",
          "slug": "你不知道的8条sql技巧"
        },
        {
          "level": 3,
          "title": "建立索引其他的原则",
          "slug": "建立索引其他的原则"
        },
        {
          "level": 3,
          "title": "分布式之缓存击穿的三种解决方案",
          "slug": "分布式之缓存击穿的三种解决方案"
        },
        {
          "level": 3,
          "title": "优化再实践",
          "slug": "优化再实践"
        },
        {
          "level": 3,
          "title": "分库分表后面临的问题",
          "slug": "分库分表后面临的问题"
        },
        {
          "level": 3,
          "title": "与B-Tree相比，B+Tree有以下不同点",
          "slug": "与b-tree相比-b-tree有以下不同点"
        },
        {
          "level": 3,
          "title": "主存的存取过程如下",
          "slug": "主存的存取过程如下"
        },
        {
          "level": 3,
          "title": "InnoDB索引实现",
          "slug": "innodb索引实现"
        },
        {
          "level": 3,
          "title": "MySQL数据库开发的36条军规",
          "slug": "mysql数据库开发的36条军规"
        },
        {
          "level": 3,
          "title": "约定类军规",
          "slug": "约定类军规"
        },
        {
          "level": 3,
          "title": "什么情况要建立索引什么时候不用",
          "slug": "什么情况要建立索引什么时候不用"
        },
        {
          "level": 3,
          "title": "MVCC(实现机制)",
          "slug": "mvcc-实现机制"
        },
        {
          "level": 3,
          "title": "悲观锁和乐观锁的使用场景",
          "slug": "悲观锁和乐观锁的使用场景"
        },
        {
          "level": 3,
          "title": "主从复制的几种方式",
          "slug": "主从复制的几种方式"
        },
        {
          "level": 3,
          "title": "当master的二进制日志每产生一个事件，都需要发往slave，如果我们有N个slave,那是发N次，还是只发一次",
          "slug": "当master的二进制日志每产生一个事件-都需要发往slave-如果我们有n个slave-那是发n次-还是只发一次"
        },
        {
          "level": 3,
          "title": "主从复制中有master,slave1,slave2,...等等这么多MYSQL数据库，那比如一个JAVA WEB应用到底应该连接哪个数据库?",
          "slug": "主从复制中有master-slave1-slave2-等等这么多mysql数据库-那比如一个java-web应用到底应该连接哪个数据库"
        },
        {
          "level": 3,
          "title": "主从复制中，可以有N个slave,可是这些slave又不能进行写操作，要他们干嘛？",
          "slug": "主从复制中-可以有n个slave-可是这些slave又不能进行写操作-要他们干嘛"
        },
        {
          "level": 3,
          "title": "master的写操作，slaves被动的进行一样的操作，保持数据一致性，那么slave是否可以主动的进行写操作？",
          "slug": "master的写操作-slaves被动的进行一样的操作-保持数据一致性-那么slave是否可以主动的进行写操作"
        },
        {
          "level": 3,
          "title": "为什么使用数据索引能提高效率",
          "slug": "为什么使用数据索引能提高效率"
        },
        {
          "level": 3,
          "title": "B+树索引和哈希索引的区别",
          "slug": "b-树索引和哈希索引的区别"
        },
        {
          "level": 3,
          "title": "B树和B+树的区别",
          "slug": "b树和b-树的区别-2"
        },
        {
          "level": 3,
          "title": "为什么说B+比B树更适合实际应用中操作系统的文件索引和数据库索引？",
          "slug": "为什么说b-比b树更适合实际应用中操作系统的文件索引和数据库索引"
        },
        {
          "level": 3,
          "title": "MySQL联合索引",
          "slug": "mysql联合索引"
        },
        {
          "level": 3,
          "title": "什么情况下应不建或少建索引",
          "slug": "什么情况下应不建或少建索引"
        },
        {
          "level": 3,
          "title": "MVCC最大的好处",
          "slug": "mvcc最大的好处"
        },
        {
          "level": 3,
          "title": "MySQL优化",
          "slug": "mysql优化"
        },
        {
          "level": 3,
          "title": "Mysql 中 MyISAM 和 InnoDB 的区别有哪些？",
          "slug": "mysql-中-myisam-和-innodb-的区别有哪些"
        },
        {
          "level": 3,
          "title": "缓存与数据库不一致，咋办",
          "slug": "缓存与数据库不一致-咋办"
        },
        {
          "level": 3,
          "title": "数据库主库和从库不一致，常见有这么几种优化方案：",
          "slug": "数据库主库和从库不一致-常见有这么几种优化方案"
        },
        {
          "level": 3,
          "title": "分布式事务讲的不错",
          "slug": "分布式事务讲的不错"
        },
        {
          "level": 3,
          "title": "InnoDB共有七种类型的锁",
          "slug": "innodb共有七种类型的锁"
        },
        {
          "level": 3,
          "title": "插入InnoDB自增列，居然是表锁",
          "slug": "插入innodb自增列-居然是表锁"
        },
        {
          "level": 3,
          "title": "InnoDB并发插入，居然使用意向锁？",
          "slug": "innodb并发插入-居然使用意向锁"
        },
        {
          "level": 3,
          "title": "索引结构为什么要设计成树型",
          "slug": "索引结构为什么要设计成树型"
        },
        {
          "level": 3,
          "title": "什么是局部性原理",
          "slug": "什么是局部性原理"
        },
        {
          "level": 3,
          "title": "数据库优化的几个阶段",
          "slug": "数据库优化的几个阶段"
        },
        {
          "level": 3,
          "title": "乐观锁实现方式",
          "slug": "乐观锁实现方式"
        },
        {
          "level": 3,
          "title": "REPEATABLE READ(可重复读)实现原理",
          "slug": "repeatable-read-可重复读-实现原理"
        },
        {
          "level": 3,
          "title": "MySQL主从延时这么长，要怎么优化？",
          "slug": "mysql主从延时这么长-要怎么优化"
        },
        {
          "level": 3,
          "title": "建立索引的原则",
          "slug": "建立索引的原则"
        },
        {
          "level": 3,
          "title": "Innodb中的行锁与表锁",
          "slug": "innodb中的行锁与表锁"
        },
        {
          "level": 3,
          "title": "行级锁与死锁",
          "slug": "行级锁与死锁"
        },
        {
          "level": 3,
          "title": "一条SQL语句执行得很慢的原因有哪些",
          "slug": "一条sql语句执行得很慢的原因有哪些"
        },
        {
          "level": 3,
          "title": "MYSQL是怎么解决CPU和硬盘速度不一致问题么",
          "slug": "mysql是怎么解决cpu和硬盘速度不一致问题么"
        },
        {
          "level": 3,
          "title": "说说Innodb中LRU怎么做的",
          "slug": "说说innodb中lru怎么做的"
        },
        {
          "level": 3,
          "title": "count(1)、count(*) 与 count (列名) 的执行区别",
          "slug": "count-1-、count-与-count-列名-的执行区别"
        },
        {
          "level": 3,
          "title": "mysql复合索引的底层数据结构",
          "slug": "mysql复合索引的底层数据结构"
        },
        {
          "level": 3,
          "title": "数据库主从不一致，怎么解",
          "slug": "数据库主从不一致-怎么解"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "spring容器和springmvc容器区别",
      "frontmatter": {},
      "regularPath": "/interview/spring%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/spring问答.md",
      "key": "v-3425958e",
      "path": "/interview/spring%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "spring容器和springmvc容器区别",
          "slug": "spring容器和springmvc容器区别"
        },
        {
          "level": 3,
          "title": "拦截器和过滤器",
          "slug": "拦截器和过滤器"
        },
        {
          "level": 3,
          "title": "SpringMVC拦截器",
          "slug": "springmvc拦截器"
        },
        {
          "level": 3,
          "title": "过滤器",
          "slug": "过滤器"
        },
        {
          "level": 3,
          "title": "拦截器和过滤器的区别：",
          "slug": "拦截器和过滤器的区别"
        },
        {
          "level": 3,
          "title": "如何自己实现Spring的 IOC依赖反转的功能",
          "slug": "如何自己实现spring的-ioc依赖反转的功能"
        },
        {
          "level": 3,
          "title": "如何实现AOP（核心是动态代理，容器是反射）",
          "slug": "如何实现aop-核心是动态代理-容器是反射"
        },
        {
          "level": 3,
          "title": "注解是怎么实现的",
          "slug": "注解是怎么实现的"
        },
        {
          "level": 3,
          "title": "整个注入的过程，怎么实现管理的",
          "slug": "整个注入的过程-怎么实现管理的"
        },
        {
          "level": 3,
          "title": "spring、jdk和springmvc注解",
          "slug": "spring、jdk和springmvc注解"
        },
        {
          "level": 3,
          "title": "解释Spring支持的几种bean的作用域",
          "slug": "解释spring支持的几种bean的作用域"
        },
        {
          "level": 3,
          "title": "Spring框架中的单例Beans是线程安全的么？",
          "slug": "spring框架中的单例beans是线程安全的么"
        },
        {
          "level": 3,
          "title": "Spring 框架中用到了哪些设计模式？",
          "slug": "spring-框架中用到了哪些设计模式"
        },
        {
          "level": 3,
          "title": "@Component 和 @Bean 的区别是什么？",
          "slug": "component-和-bean-的区别是什么"
        },
        {
          "level": 3,
          "title": "Spring 管理事务的方式有几种？",
          "slug": "spring-管理事务的方式有几种"
        },
        {
          "level": 3,
          "title": "Spring有几种配置方式？",
          "slug": "spring有几种配置方式"
        },
        {
          "level": 3,
          "title": "解释不同方式的自动装配",
          "slug": "解释不同方式的自动装配"
        },
        {
          "level": 3,
          "title": "Spring主要模块",
          "slug": "spring主要模块"
        },
        {
          "level": 3,
          "title": "Spring AOP 和 AspectJ AOP 有什么区别？",
          "slug": "spring-aop-和-aspectj-aop-有什么区别"
        },
        {
          "level": 3,
          "title": "Spring 是如何管理事务的？",
          "slug": "spring-是如何管理事务的"
        },
        {
          "level": 3,
          "title": "Bean 是如何被管理的？",
          "slug": "bean-是如何被管理的"
        },
        {
          "level": 3,
          "title": "Spring中的自动装配有哪些限制？",
          "slug": "spring中的自动装配有哪些限制"
        },
        {
          "level": 3,
          "title": "你可以在Spring中注入一个null 和一个空字符串吗？",
          "slug": "你可以在spring中注入一个null-和一个空字符串吗"
        },
        {
          "level": 3,
          "title": "Spring MVC 运行流程",
          "slug": "spring-mvc-运行流程"
        },
        {
          "level": 3,
          "title": "1、@Resource和@Autowired区别",
          "slug": "_1、-resource和-autowired区别"
        },
        {
          "level": 3,
          "title": "2、@Component, @Service, @Controller, @Repository区别",
          "slug": "_2、-component-service-controller-repository区别"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1. Kafka的用途有哪些？使用场景如何？",
      "frontmatter": {},
      "regularPath": "/interview/kafka%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/kafka问答.md",
      "key": "v-83307038",
      "path": "/interview/kafka%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "1. Kafka的用途有哪些？使用场景如何？",
          "slug": "_1-kafka的用途有哪些-使用场景如何"
        },
        {
          "level": 3,
          "title": "2. Kafka中的ISR、AR又代表什么？ISR的伸缩又指什么",
          "slug": "_2-kafka中的isr、ar又代表什么-isr的伸缩又指什么"
        },
        {
          "level": 3,
          "title": "3. Kafka中的HW、LEO、LSO、LW等分别代表什么？",
          "slug": "_3-kafka中的hw、leo、lso、lw等分别代表什么"
        },
        {
          "level": 3,
          "title": "4. Kafka中是怎么体现消息顺序性的？",
          "slug": "_4-kafka中是怎么体现消息顺序性的"
        },
        {
          "level": 3,
          "title": "5. Kafka中的分区器、序列化器、拦截器是否了解？它们之间的处理顺序是什么？",
          "slug": "_5-kafka中的分区器、序列化器、拦截器是否了解-它们之间的处理顺序是什么"
        },
        {
          "level": 3,
          "title": "6. Kafka生产者客户端的整体结构是什么样子的？",
          "slug": "_6-kafka生产者客户端的整体结构是什么样子的"
        },
        {
          "level": 3,
          "title": "7. Kafka生产者客户端中使用了几个线程来处理？分别是什么？",
          "slug": "_7-kafka生产者客户端中使用了几个线程来处理-分别是什么"
        },
        {
          "level": 3,
          "title": "9. Kafka的旧版Scala的消费者客户端的设计有什么缺陷？",
          "slug": "_9-kafka的旧版scala的消费者客户端的设计有什么缺陷"
        },
        {
          "level": 3,
          "title": "10. “消费组中的消费者个数如果超过topic的分区，那么就会有消费者消费不到数据”这句话是否正确？如果不正确，那么有没有什么hack的手段？",
          "slug": "_10-消费组中的消费者个数如果超过topic的分区-那么就会有消费者消费不到数据-这句话是否正确-如果不正确-那么有没有什么hack的手段"
        },
        {
          "level": 3,
          "title": "11. 消费者提交消费位移时提交的是当前消费到的最新消息的offset还是offset+1?",
          "slug": "_11-消费者提交消费位移时提交的是当前消费到的最新消息的offset还是offset-1"
        },
        {
          "level": 3,
          "title": "12. 有哪些情形会造成重复消费？",
          "slug": "_12-有哪些情形会造成重复消费"
        },
        {
          "level": 3,
          "title": "13. 那些情景下会造成消息漏消费？",
          "slug": "_13-那些情景下会造成消息漏消费"
        },
        {
          "level": 3,
          "title": "14. KafkaConsumer是非线程安全的，那么怎么样实现多线程消费？",
          "slug": "_14-kafkaconsumer是非线程安全的-那么怎么样实现多线程消费"
        },
        {
          "level": 3,
          "title": "15. 简述消费者与消费组之间的关系",
          "slug": "_15-简述消费者与消费组之间的关系"
        },
        {
          "level": 3,
          "title": "16. 当你使用kafka-topics.sh创建（删除）了一个topic之后，Kafka背后会执行什么逻辑？",
          "slug": "_16-当你使用kafka-topics-sh创建-删除-了一个topic之后-kafka背后会执行什么逻辑"
        },
        {
          "level": 3,
          "title": "17. topic的分区数可不可以增加？如果可以怎么增加？如果不可以，那又是为什么？",
          "slug": "_17-topic的分区数可不可以增加-如果可以怎么增加-如果不可以-那又是为什么"
        },
        {
          "level": 3,
          "title": "18. topic的分区数可不可以减少？如果可以怎么减少？如果不可以，那又是为什么？",
          "slug": "_18-topic的分区数可不可以减少-如果可以怎么减少-如果不可以-那又是为什么"
        },
        {
          "level": 3,
          "title": "19. 创建topic时如何选择合适的分区数？",
          "slug": "_19-创建topic时如何选择合适的分区数"
        },
        {
          "level": 3,
          "title": "20. Kafka目前有那些内部topic，它们都有什么特征？各自的作用又是什么？",
          "slug": "_20-kafka目前有那些内部topic-它们都有什么特征-各自的作用又是什么"
        },
        {
          "level": 3,
          "title": "21. 优先副本是什么？它有什么特殊的作用？",
          "slug": "_21-优先副本是什么-它有什么特殊的作用"
        },
        {
          "level": 3,
          "title": "22. Kafka有哪几处地方有分区分配的概念？简述大致的过程及原理",
          "slug": "_22-kafka有哪几处地方有分区分配的概念-简述大致的过程及原理"
        },
        {
          "level": 3,
          "title": "23. 简述Kafka的日志目录结构",
          "slug": "_23-简述kafka的日志目录结构"
        },
        {
          "level": 3,
          "title": "24. Kafka中有那些索引文件？",
          "slug": "_24-kafka中有那些索引文件"
        },
        {
          "level": 3,
          "title": "25. 如果我指定了一个offset，Kafka怎么查找到对应的消息？",
          "slug": "_25-如果我指定了一个offset-kafka怎么查找到对应的消息"
        },
        {
          "level": 3,
          "title": "26. 如果我指定了一个timestamp，Kafka怎么查找到对应的消息？",
          "slug": "_26-如果我指定了一个timestamp-kafka怎么查找到对应的消息"
        },
        {
          "level": 3,
          "title": "27. 聊一聊你对Kafka的Log Retention的理解",
          "slug": "_27-聊一聊你对kafka的log-retention的理解"
        },
        {
          "level": 3,
          "title": "28. 聊一聊你对Kafka的Log Compaction的理解",
          "slug": "_28-聊一聊你对kafka的log-compaction的理解"
        },
        {
          "level": 3,
          "title": "29. 聊一聊你对Kafka底层存储的理解（页缓存、内核层、块层、设备层）",
          "slug": "_29-聊一聊你对kafka底层存储的理解-页缓存、内核层、块层、设备层"
        },
        {
          "level": 3,
          "title": "30. 聊一聊Kafka的延时操作的原理",
          "slug": "_30-聊一聊kafka的延时操作的原理"
        },
        {
          "level": 3,
          "title": "31. 聊一聊Kafka控制器的作用",
          "slug": "_31-聊一聊kafka控制器的作用"
        },
        {
          "level": 3,
          "title": "32. 消费再均衡的原理是什么？（提示：消费者协调器和消费组协调器）",
          "slug": "_32-消费再均衡的原理是什么-提示-消费者协调器和消费组协调器"
        },
        {
          "level": 3,
          "title": "33. Kafka中的幂等是怎么实现的",
          "slug": "_33-kafka中的幂等是怎么实现的"
        },
        {
          "level": 3,
          "title": "33. Kafka中的事务是怎么实现的（这题我去面试6家被问4次，照着答案念也要念十几分钟，面试官简直凑不要脸。实在记不住的话…只要简历上不写精通Kafka一般不会问到，我简历上写的是“熟悉Kafka，了解RabbitMQ….”）",
          "slug": "_33-kafka中的事务是怎么实现的-这题我去面试6家被问4次-照着答案念也要念十几分钟-面试官简直凑不要脸。实在记不住的话-只要简历上不写精通kafka一般不会问到-我简历上写的是-熟悉kafka-了解rabbitmq"
        },
        {
          "level": 3,
          "title": "34. Kafka中有那些地方需要选举？这些地方的选举策略又有哪些？",
          "slug": "_34-kafka中有那些地方需要选举-这些地方的选举策略又有哪些"
        },
        {
          "level": 3,
          "title": "35. 失效副本是指什么？有那些应对措施？",
          "slug": "_35-失效副本是指什么-有那些应对措施"
        },
        {
          "level": 3,
          "title": "36. 多副本下，各个副本中的HW和LEO的演变过程",
          "slug": "_36-多副本下-各个副本中的hw和leo的演变过程"
        },
        {
          "level": 3,
          "title": "37. 为什么Kafka不支持读写分离？",
          "slug": "_37-为什么kafka不支持读写分离"
        },
        {
          "level": 3,
          "title": "38. Kafka在可靠性方面做了哪些改进？（HW, LeaderEpoch）",
          "slug": "_38-kafka在可靠性方面做了哪些改进-hw-leaderepoch"
        },
        {
          "level": 3,
          "title": "39. Kafka中怎么实现死信队列和重试队列？",
          "slug": "_39-kafka中怎么实现死信队列和重试队列"
        },
        {
          "level": 3,
          "title": "40. Kafka中的延迟队列怎么实现（这题被问的比事务那题还要多！！！听说你会Kafka，那你说说延迟队列怎么实现？）",
          "slug": "_40-kafka中的延迟队列怎么实现-这题被问的比事务那题还要多-听说你会kafka-那你说说延迟队列怎么实现"
        },
        {
          "level": 3,
          "title": "41. Kafka中怎么做消息审计？",
          "slug": "_41-kafka中怎么做消息审计"
        },
        {
          "level": 3,
          "title": "42. Kafka中怎么做消息轨迹？",
          "slug": "_42-kafka中怎么做消息轨迹"
        },
        {
          "level": 3,
          "title": "43. Kafka中有那些配置参数比较有意思？聊一聊你的看法",
          "slug": "_43-kafka中有那些配置参数比较有意思-聊一聊你的看法"
        },
        {
          "level": 3,
          "title": "44. Kafka中有那些命名比较有意思？聊一聊你的看法",
          "slug": "_44-kafka中有那些命名比较有意思-聊一聊你的看法"
        },
        {
          "level": 3,
          "title": "45. Kafka有哪些指标需要着重关注？",
          "slug": "_45-kafka有哪些指标需要着重关注"
        },
        {
          "level": 3,
          "title": "46. 怎么计算Lag？(注意readuncommitted和readcommitted状态下的不同)",
          "slug": "_46-怎么计算lag-注意read-uncommitted和read-committed状态下的不同"
        },
        {
          "level": 3,
          "title": "47. Kafka的那些设计让它有如此高的性能？",
          "slug": "_47-kafka的那些设计让它有如此高的性能"
        },
        {
          "level": 3,
          "title": "48. Kafka有什么优缺点？",
          "slug": "_48-kafka有什么优缺点"
        },
        {
          "level": 3,
          "title": "49. 还用过什么同质类的其它产品，与Kafka相比有什么优缺点？",
          "slug": "_49-还用过什么同质类的其它产品-与kafka相比有什么优缺点"
        },
        {
          "level": 3,
          "title": "50. 为什么选择Kafka?",
          "slug": "_50-为什么选择kafka"
        },
        {
          "level": 3,
          "title": "51. 在使用Kafka的过程中遇到过什么困难？怎么解决的？",
          "slug": "_51-在使用kafka的过程中遇到过什么困难-怎么解决的"
        },
        {
          "level": 3,
          "title": "52. 怎么样才能确保Kafka极大程度上的可靠性？",
          "slug": "_52-怎么样才能确保kafka极大程度上的可靠性"
        },
        {
          "level": 3,
          "title": "53. 聊一聊你对Kafka生态的理解",
          "slug": "_53-聊一聊你对kafka生态的理解"
        },
        {
          "level": 3,
          "title": "54. Kafka的复制机制",
          "slug": "_54-kafka的复制机制"
        },
        {
          "level": 3,
          "title": "一个partition只能由一个consumer消费吗",
          "slug": "一个partition只能由一个consumer消费吗"
        },
        {
          "level": 3,
          "title": "kafka哈希的过程和prouducer到queue的过程",
          "slug": "kafka哈希的过程和prouducer到queue的过程"
        },
        {
          "level": 3,
          "title": "Producer幂等性发送",
          "slug": "producer幂等性发送"
        },
        {
          "level": 3,
          "title": "Consumer设计原理",
          "slug": "consumer设计原理"
        },
        {
          "level": 3,
          "title": "Broker设计原理",
          "slug": "broker设计原理"
        },
        {
          "level": 3,
          "title": "Kafka高可用",
          "slug": "kafka高可用"
        },
        {
          "level": 3,
          "title": "kafka为什么这么快",
          "slug": "kafka为什么这么快"
        },
        {
          "level": 3,
          "title": "kafka-如何保证消息的可靠性与一致性",
          "slug": "kafka-如何保证消息的可靠性与一致性"
        },
        {
          "level": 3,
          "title": "对于kafka节点活着的条件是什么？",
          "slug": "对于kafka节点活着的条件是什么"
        },
        {
          "level": 3,
          "title": "Kafka幂等性实现原理",
          "slug": "kafka幂等性实现原理"
        },
        {
          "level": 3,
          "title": "拉取系统",
          "slug": "拉取系统"
        },
        {
          "level": 3,
          "title": "kafka的高吞吐率",
          "slug": "kafka的高吞吐率"
        },
        {
          "level": 3,
          "title": "kafka 为什么采用ISR而不是半数选取的方式",
          "slug": "kafka-为什么采用isr而不是半数选取的方式"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "redis的底层数据结构",
      "frontmatter": {},
      "regularPath": "/interview/redis%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/redis问答.md",
      "key": "v-4ac40cc4",
      "path": "/interview/redis%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "redis的底层数据结构",
          "slug": "redis的底层数据结构"
        },
        {
          "level": 3,
          "title": "Set",
          "slug": "set"
        },
        {
          "level": 3,
          "title": "Redis支持的数据结构有哪些？",
          "slug": "redis支持的数据结构有哪些"
        },
        {
          "level": 3,
          "title": "redis的数据类型有哪些？",
          "slug": "redis的数据类型有哪些"
        },
        {
          "level": 3,
          "title": "redis实现延迟队列",
          "slug": "redis实现延迟队列"
        },
        {
          "level": 3,
          "title": "余额并发扣减一致性能否使用redis事务",
          "slug": "余额并发扣减一致性能否使用redis事务"
        },
        {
          "level": 3,
          "title": "redis哈希解决键冲突",
          "slug": "redis哈希解决键冲突"
        },
        {
          "level": 3,
          "title": "redis rehash与hashmap扩容的区别",
          "slug": "redis-rehash与hashmap扩容的区别"
        },
        {
          "level": 3,
          "title": "jdk hashmap",
          "slug": "jdk-hashmap"
        },
        {
          "level": 3,
          "title": "为什么使用redis",
          "slug": "为什么使用redis"
        },
        {
          "level": 3,
          "title": "使用redis有什么缺点",
          "slug": "使用redis有什么缺点"
        },
        {
          "level": 3,
          "title": "单线程的redis为什么这么快",
          "slug": "单线程的redis为什么这么快"
        },
        {
          "level": 3,
          "title": "Redis和数据库双写一致性问题",
          "slug": "redis和数据库双写一致性问题"
        },
        {
          "level": 3,
          "title": "缓存雪崩",
          "slug": "缓存雪崩"
        },
        {
          "level": 3,
          "title": "缓存穿透",
          "slug": "缓存穿透"
        },
        {
          "level": 3,
          "title": "如何解决redis的并发竞争key问题",
          "slug": "如何解决redis的并发竞争key问题"
        },
        {
          "level": 3,
          "title": "redis的数据类型，以及每种数据类型的使用场景",
          "slug": "redis的数据类型-以及每种数据类型的使用场景"
        },
        {
          "level": 3,
          "title": "Redis 内存模型（非常好一定要好好看）",
          "slug": "redis-内存模型-非常好一定要好好看"
        },
        {
          "level": 3,
          "title": "redis 内存碎片率",
          "slug": "redis-内存碎片率"
        },
        {
          "level": 3,
          "title": "redis持久化再讲（非常好）",
          "slug": "redis持久化再讲-非常好"
        },
        {
          "level": 3,
          "title": "set命令高级用法",
          "slug": "set命令高级用法"
        },
        {
          "level": 3,
          "title": "redis挂了怎么办",
          "slug": "redis挂了怎么办"
        },
        {
          "level": 3,
          "title": "Redis 常见的性能问题都有哪些？如何解决？",
          "slug": "redis-常见的性能问题都有哪些-如何解决"
        },
        {
          "level": 3,
          "title": "Memcache与Redis的区别都有哪些？",
          "slug": "memcache与redis的区别都有哪些"
        },
        {
          "level": 3,
          "title": "KV缓存都缓存了一些什么数据？",
          "slug": "kv缓存都缓存了一些什么数据"
        },
        {
          "level": 3,
          "title": "淘汰缓存中的这些数据，修改缓存中的这些数据，有什么差别？",
          "slug": "淘汰缓存中的这些数据-修改缓存中的这些数据-有什么差别"
        },
        {
          "level": 3,
          "title": "缓存中的value数据一般是怎么修改的？",
          "slug": "缓存中的value数据一般是怎么修改的"
        },
        {
          "level": 3,
          "title": "redis相比memcached有哪些优势？",
          "slug": "redis相比memcached有哪些优势"
        },
        {
          "level": 3,
          "title": "使用过Redis做异步队列么，你是怎么用的？有什么缺点？",
          "slug": "使用过redis做异步队列么-你是怎么用的-有什么缺点"
        },
        {
          "level": 3,
          "title": "能不能生产一次消费多次呢？",
          "slug": "能不能生产一次消费多次呢"
        },
        {
          "level": 3,
          "title": "Redis常见面试问题（一和二）",
          "slug": "redis常见面试问题-一和二"
        },
        {
          "level": 3,
          "title": "Redis为什么这么快",
          "slug": "redis为什么这么快"
        },
        {
          "level": 3,
          "title": "那么为什么Redis是单线程的",
          "slug": "那么为什么redis是单线程的"
        },
        {
          "level": 3,
          "title": "redis事务",
          "slug": "redis事务"
        },
        {
          "level": 3,
          "title": "管道",
          "slug": "管道"
        },
        {
          "level": 3,
          "title": "为什么 Redis 单线程却能支撑高并发？",
          "slug": "为什么-redis-单线程却能支撑高并发"
        },
        {
          "level": 3,
          "title": "redis分布式锁要考虑的问题",
          "slug": "redis分布式锁要考虑的问题"
        },
        {
          "level": 3,
          "title": "redis String和java String的区别",
          "slug": "redis-string和java-string的区别"
        },
        {
          "level": 3,
          "title": "进程缓存",
          "slug": "进程缓存"
        },
        {
          "level": 3,
          "title": "进程内缓存有什么优缺点",
          "slug": "进程内缓存有什么优缺点"
        },
        {
          "level": 3,
          "title": "如何保证进程内缓存的数据一致性？",
          "slug": "如何保证进程内缓存的数据一致性"
        },
        {
          "level": 3,
          "title": "为什么不能频繁使用进程内缓存？",
          "slug": "为什么不能频繁使用进程内缓存"
        },
        {
          "level": 3,
          "title": "什么时候可以使用进程内缓存？",
          "slug": "什么时候可以使用进程内缓存"
        },
        {
          "level": 3,
          "title": "选redis还是memcache",
          "slug": "选redis还是memcache"
        },
        {
          "level": 3,
          "title": "缓存场景，开启固化功能，有什么利弊？",
          "slug": "缓存场景-开启固化功能-有什么利弊"
        },
        {
          "level": 3,
          "title": "什么时候倾向于memcache？",
          "slug": "什么时候倾向于memcache"
        },
        {
          "level": 3,
          "title": "缓存，你真的用对了么",
          "slug": "缓存-你真的用对了么"
        },
        {
          "level": 3,
          "title": "淘汰缓存中的这些数据，修改缓存中的这些数据，有什么差别？",
          "slug": "淘汰缓存中的这些数据-修改缓存中的这些数据-有什么差别-2"
        },
        {
          "level": 3,
          "title": "缓存中的value数据一般是怎么修改的？",
          "slug": "缓存中的value数据一般是怎么修改的-2"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "二叉查找",
      "frontmatter": {},
      "regularPath": "/interview/%E7%AE%97%E6%B3%95%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/算法问答.md",
      "key": "v-1407921a",
      "path": "/interview/%E7%AE%97%E6%B3%95%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "二叉查找",
          "slug": "二叉查找"
        },
        {
          "level": 3,
          "title": "字符串全排列",
          "slug": "字符串全排列"
        },
        {
          "level": 3,
          "title": "快速排序（注意和二叉排序的区别）",
          "slug": "快速排序-注意和二叉排序的区别"
        },
        {
          "level": 3,
          "title": "两个线程实现交替运行-以交替打印奇偶",
          "slug": "两个线程实现交替运行-以交替打印奇偶"
        },
        {
          "level": 3,
          "title": "生产者消费者",
          "slug": "生产者消费者"
        },
        {
          "level": 3,
          "title": "手写线程池",
          "slug": "手写线程池"
        },
        {
          "level": 3,
          "title": "三个线程按照顺序输出",
          "slug": "三个线程按照顺序输出"
        },
        {
          "level": 3,
          "title": "一组数中只有一个是奇数个，怎么找到这个数",
          "slug": "一组数中只有一个是奇数个-怎么找到这个数"
        },
        {
          "level": 3,
          "title": "不用临时变量交换两个数",
          "slug": "不用临时变量交换两个数"
        },
        {
          "level": 3,
          "title": "单例模式",
          "slug": "单例模式"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Zookeeper的Leader选举",
      "frontmatter": {},
      "regularPath": "/interview/zk%E9%97%AE%E7%AD%94.html",
      "relativePath": "interview/zk问答.md",
      "key": "v-eaedea74",
      "path": "/interview/zk%E9%97%AE%E7%AD%94.html",
      "headers": [
        {
          "level": 3,
          "title": "Zookeeper的Leader选举",
          "slug": "zookeeper的leader选举"
        },
        {
          "level": 3,
          "title": "ZK在kafka中的作用",
          "slug": "zk在kafka中的作用"
        },
        {
          "level": 3,
          "title": "ZK分布式锁临时结点被谁删除",
          "slug": "zk分布式锁临时结点被谁删除"
        },
        {
          "level": 3,
          "title": "zk解决什么问题",
          "slug": "zk解决什么问题"
        },
        {
          "level": 3,
          "title": "ZK的应用场景",
          "slug": "zk的应用场景"
        },
        {
          "level": 3,
          "title": "ZK的节点类型",
          "slug": "zk的节点类型"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "spring boot与spring mvc的区别",
      "frontmatter": {},
      "regularPath": "/interview/%E6%A1%86%E6%9E%B6.html",
      "relativePath": "interview/框架.md",
      "key": "v-8cfba298",
      "path": "/interview/%E6%A1%86%E6%9E%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "spring boot与spring mvc的区别",
          "slug": "spring-boot与spring-mvc的区别"
        },
        {
          "level": 3,
          "title": "springboot和springcloud的区别",
          "slug": "springboot和springcloud的区别"
        },
        {
          "level": 3,
          "title": "springcloud和dubbo的对比",
          "slug": "springcloud和dubbo的对比"
        },
        {
          "level": 3,
          "title": "ZooKeeper和Eureka以及consul的区别",
          "slug": "zookeeper和eureka以及consul的区别"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "技术",
      "frontmatter": {},
      "regularPath": "/interview/%E9%9C%80%E8%A6%81%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98.html",
      "relativePath": "interview/需要问的问题.md",
      "key": "v-75088ef4",
      "path": "/interview/%E9%9C%80%E8%A6%81%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 3,
          "title": "技术",
          "slug": "技术"
        },
        {
          "level": 3,
          "title": "HR",
          "slug": "hr"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/Arrays.asList%E8%8E%B7%E5%BE%97%E7%9A%84List%E4%BD%BF%E7%94%A8%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88.html",
      "relativePath": "java/collection/Arrays.asList获得的List使用时需要注意什么.md",
      "key": "v-78f2ad81",
      "path": "/java/collection/Arrays.asList%E8%8E%B7%E5%BE%97%E7%9A%84List%E4%BD%BF%E7%94%A8%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "ArrayList集合加入1万条数据，应该怎么提高效率",
      "frontmatter": {},
      "regularPath": "/java/collection/ArrayList%E9%9B%86%E5%90%88%E5%8A%A0%E5%85%A51%E4%B8%87%E6%9D%A1%E6%95%B0%E6%8D%AE.html",
      "relativePath": "java/collection/ArrayList集合加入1万条数据.md",
      "key": "v-e1910fec",
      "path": "/java/collection/ArrayList%E9%9B%86%E5%90%88%E5%8A%A0%E5%85%A51%E4%B8%87%E6%9D%A1%E6%95%B0%E6%8D%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "ArrayList集合加入1万条数据，应该怎么提高效率",
          "slug": "arraylist集合加入1万条数据-应该怎么提高效率"
        },
        {
          "level": 3,
          "title": "Java中HashMap的key值要是为类对象则该类需要满足什么条件？",
          "slug": "java中hashmap的key值要是为类对象则该类需要满足什么条件"
        },
        {
          "level": 3,
          "title": "并发集合类是什么？",
          "slug": "并发集合类是什么"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/interview/%E7%BD%91%E7%BB%9C.html",
      "relativePath": "interview/网络.md",
      "key": "v-03ed5502",
      "path": "/interview/%E7%BD%91%E7%BB%9C.html",
      "headers": [
        {
          "level": 2,
          "title": "一 OSI与TCP/IP各层的结构与功能,都有哪些协议?",
          "slug": "一-osi与tcp-ip各层的结构与功能-都有哪些协议"
        },
        {
          "level": 3,
          "title": "1.1 应用层",
          "slug": "_1-1-应用层"
        },
        {
          "level": 3,
          "title": "1.2 运输层",
          "slug": "_1-2-运输层"
        },
        {
          "level": 3,
          "title": "1.3 网络层",
          "slug": "_1-3-网络层"
        },
        {
          "level": 3,
          "title": "1.4 数据链路层",
          "slug": "_1-4-数据链路层"
        },
        {
          "level": 3,
          "title": "1.5 物理层",
          "slug": "_1-5-物理层"
        },
        {
          "level": 3,
          "title": "1.6 总结一下",
          "slug": "_1-6-总结一下"
        },
        {
          "level": 2,
          "title": "二 TCP 三次握手和四次挥手(面试常客)",
          "slug": "二-tcp-三次握手和四次挥手-面试常客"
        },
        {
          "level": 3,
          "title": "2.1 TCP 三次握手漫画图解",
          "slug": "_2-1-tcp-三次握手漫画图解"
        },
        {
          "level": 3,
          "title": "2.2 为什么要三次握手",
          "slug": "_2-2-为什么要三次握手"
        },
        {
          "level": 3,
          "title": "2.3 为什么要传回 SYN",
          "slug": "_2-3-为什么要传回-syn"
        },
        {
          "level": 3,
          "title": "2.4 传了 SYN,为啥还要传 ACK",
          "slug": "_2-4-传了-syn-为啥还要传-ack"
        },
        {
          "level": 3,
          "title": "2.5 为什么要四次挥手",
          "slug": "_2-5-为什么要四次挥手"
        },
        {
          "level": 2,
          "title": "三 TCP,UDP 协议的区别",
          "slug": "三-tcp-udp-协议的区别"
        },
        {
          "level": 2,
          "title": "四 TCP 协议如何保证可靠传输",
          "slug": "四-tcp-协议如何保证可靠传输"
        },
        {
          "level": 3,
          "title": "4.1 ARQ协议",
          "slug": "_4-1-arq协议"
        },
        {
          "level": 3,
          "title": "4.2 滑动窗口和流量控制",
          "slug": "_4-2-滑动窗口和流量控制"
        },
        {
          "level": 3,
          "title": "4.3 拥塞控制",
          "slug": "_4-3-拥塞控制"
        },
        {
          "level": 2,
          "title": "五  在浏览器中输入url地址 ->> 显示主页的过程(面试常客)",
          "slug": "五-在浏览器中输入url地址-显示主页的过程-面试常客"
        },
        {
          "level": 2,
          "title": "六 状态码",
          "slug": "六-状态码"
        },
        {
          "level": 2,
          "title": "七 各种协议与HTTP协议之间的关系",
          "slug": "七-各种协议与http协议之间的关系"
        },
        {
          "level": 2,
          "title": "八  HTTP长连接,短连接",
          "slug": "八-http长连接-短连接"
        },
        {
          "level": 2,
          "title": "九 HTTP是不保存状态的协议,如何保存用户状态?",
          "slug": "九-http是不保存状态的协议-如何保存用户状态"
        },
        {
          "level": 2,
          "title": "十 Cookie的作用是什么?和Session有什么区别？",
          "slug": "十-cookie的作用是什么-和session有什么区别"
        },
        {
          "level": 2,
          "title": "十一 HTTP 1.0和HTTP 1.1的主要区别是什么?",
          "slug": "十一-http-1-0和http-1-1的主要区别是什么"
        },
        {
          "level": 2,
          "title": "十二 URI和URL的区别是什么?",
          "slug": "十二-uri和url的区别是什么"
        },
        {
          "level": 2,
          "title": "十三 HTTP 和 HTTPS 的区别？",
          "slug": "十三-http-和-https-的区别"
        },
        {
          "level": 2,
          "title": "建议",
          "slug": "建议"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/Comparable%E4%B8%8EComparator%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "java/collection/Comparable与Comparator的区别.md",
      "key": "v-4b6e3c96",
      "path": "/java/collection/Comparable%E4%B8%8EComparator%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "我们还是先来回顾一下COW：",
      "frontmatter": {},
      "regularPath": "/java/collection/CopyOnWriteArrayList%E5%8E%9F%E7%90%86.html",
      "relativePath": "java/collection/CopyOnWriteArrayList原理.md",
      "key": "v-4c15e1ec",
      "path": "/java/collection/CopyOnWriteArrayList%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 3,
          "title": "我们还是先来回顾一下COW：",
          "slug": "我们还是先来回顾一下cow"
        },
        {
          "level": 3,
          "title": "常见方法的实现",
          "slug": "常见方法的实现"
        },
        {
          "level": 3,
          "title": "剖析为什么遍历时不用调用者显式加锁",
          "slug": "剖析为什么遍历时不用调用者显式加锁"
        },
        {
          "level": 3,
          "title": "CopyOnWriteArrayList缺点",
          "slug": "copyonwritearraylist缺点"
        },
        {
          "level": 3,
          "title": "CopyOnWriteSet",
          "slug": "copyonwriteset"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/RestControllerVSController.html",
      "relativePath": "java/collection/RestControllerVSController.md",
      "key": "v-abeeb580",
      "path": "/java/collection/RestControllerVSController.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/Set%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%85%83%E7%B4%A0%E4%B8%8D%E9%87%8D%E5%A4%8D.html",
      "relativePath": "java/collection/Set如何保证元素不重复.md",
      "key": "v-12c7411e",
      "path": "/java/collection/Set%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%85%83%E7%B4%A0%E4%B8%8D%E9%87%8D%E5%A4%8D.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/interview/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "relativePath": "interview/美团面试题.md",
      "key": "v-a6cd39b8",
      "path": "/interview/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "1. System.out.println(3|9)输出什么?",
          "slug": "_1-system-out-println-3-9-输出什么"
        },
        {
          "level": 2,
          "title": "2. 说一下转发(Forward)和重定向(Redirect)的区别",
          "slug": "_2-说一下转发-forward-和重定向-redirect-的区别"
        },
        {
          "level": 2,
          "title": "3. 在浏览器中输入url地址到显示主页的过程,整个过程会使用哪些协议",
          "slug": "_3-在浏览器中输入url地址到显示主页的过程-整个过程会使用哪些协议"
        },
        {
          "level": 2,
          "title": "4. TCP 三次握手和四次挥手",
          "slug": "_4-tcp-三次握手和四次挥手"
        },
        {
          "level": 2,
          "title": "5. IP地址与MAC地址的区别",
          "slug": "_5-ip地址与mac地址的区别"
        },
        {
          "level": 2,
          "title": "6. HTTP请求,响应报文格式",
          "slug": "_6-http请求-响应报文格式"
        },
        {
          "level": 2,
          "title": "7. 为什么要使用索引?索引这么多优点,为什么不对表中的每一个列创建一个索引呢?索引是如何提高查询速度的?说一下使用索引的注意事项?Mysql索引主要使用的两种数据结构?什么是覆盖索引?",
          "slug": "_7-为什么要使用索引-索引这么多优点-为什么不对表中的每一个列创建一个索引呢-索引是如何提高查询速度的-说一下使用索引的注意事项-mysql索引主要使用的两种数据结构-什么是覆盖索引"
        },
        {
          "level": 2,
          "title": "8. 进程与线程的区别是什么?进程间的几种通信方式说一下?线程间的几种通信方式知道不?",
          "slug": "_8-进程与线程的区别是什么-进程间的几种通信方式说一下-线程间的几种通信方式知道不"
        },
        {
          "level": 2,
          "title": "9. 为什么要用单例模式?手写几种线程安全的单例模式?",
          "slug": "_9-为什么要用单例模式-手写几种线程安全的单例模式"
        },
        {
          "level": 2,
          "title": "10. 简单介绍一下bean;知道Spring的bean的作用域与生命周期吗?",
          "slug": "_10-简单介绍一下bean-知道spring的bean的作用域与生命周期吗"
        },
        {
          "level": 2,
          "title": "11. Spring 中的事务传播行为了解吗?TransactionDefinition 接口中哪五个表示隔离级别的常量?",
          "slug": "_11-spring-中的事务传播行为了解吗-transactiondefinition-接口中哪五个表示隔离级别的常量"
        },
        {
          "level": 2,
          "title": "12. SpringMVC 原理了解吗?",
          "slug": "_12-springmvc-原理了解吗"
        },
        {
          "level": 2,
          "title": "13. Spring AOP IOC 实现原理",
          "slug": "_13-spring-aop-ioc-实现原理"
        },
        {
          "level": 2,
          "title": "1 消息队列MQ的套路",
          "slug": "_1-消息队列mq的套路"
        },
        {
          "level": 3,
          "title": "1.1 介绍一下消息队列MQ的应用场景/使用消息队列的好处",
          "slug": "_1-1-介绍一下消息队列mq的应用场景-使用消息队列的好处"
        },
        {
          "level": 3,
          "title": "1.2 那么使用消息队列会带来什么问题?考虑过这些问题吗?",
          "slug": "_1-2-那么使用消息队列会带来什么问题-考虑过这些问题吗"
        },
        {
          "level": 3,
          "title": "1.3 介绍一下你知道哪几种消息队列,该如何选择呢?",
          "slug": "_1-3-介绍一下你知道哪几种消息队列-该如何选择呢"
        },
        {
          "level": 3,
          "title": "1.4 关于消息队列其他一些常见的问题展望",
          "slug": "_1-4-关于消息队列其他一些常见的问题展望"
        },
        {
          "level": 2,
          "title": "2 谈谈 InnoDB 和 MyIsam 两者的区别",
          "slug": "_2-谈谈-innodb-和-myisam-两者的区别"
        },
        {
          "level": 3,
          "title": "2.1 两者的对比",
          "slug": "_2-1-两者的对比"
        },
        {
          "level": 3,
          "title": "2.2 关于两者的总结",
          "slug": "_2-2-关于两者的总结"
        },
        {
          "level": 2,
          "title": "3 聊聊 Java 中的集合吧!",
          "slug": "_3-聊聊-java-中的集合吧"
        },
        {
          "level": 3,
          "title": "3.1 Arraylist 与 LinkedList 有什么不同?(注意加上从数据结构分析的内容)",
          "slug": "_3-1-arraylist-与-linkedlist-有什么不同-注意加上从数据结构分析的内容"
        },
        {
          "level": 3,
          "title": "3.2 HashMap的底层实现",
          "slug": "_3-2-hashmap的底层实现"
        },
        {
          "level": 3,
          "title": "3.3 既然谈到了红黑树,你给我手绘一个出来吧,然后简单讲一下自己对于红黑树的理解",
          "slug": "_3-3-既然谈到了红黑树-你给我手绘一个出来吧-然后简单讲一下自己对于红黑树的理解"
        },
        {
          "level": 3,
          "title": "3.4 红黑树这么优秀,为何不直接使用红黑树得了?",
          "slug": "_3-4-红黑树这么优秀-为何不直接使用红黑树得了"
        },
        {
          "level": 3,
          "title": "3.5 HashMap 和 Hashtable 的区别/HashSet 和 HashMap 区别",
          "slug": "_3-5-hashmap-和-hashtable-的区别-hashset-和-hashmap-区别"
        },
        {
          "level": 2,
          "title": "1. Object类有哪些方法?",
          "slug": "_1-object类有哪些方法"
        },
        {
          "level": 3,
          "title": "1.1 Object类的常见方法总结",
          "slug": "_1-1-object类的常见方法总结"
        },
        {
          "level": 3,
          "title": "1.2 hashCode与equals",
          "slug": "_1-2-hashcode与equals"
        },
        {
          "level": 3,
          "title": "1.3  ==与equals",
          "slug": "_1-3-与equals"
        },
        {
          "level": 2,
          "title": "2 ConcurrentHashMap 相关问题",
          "slug": "_2-concurrenthashmap-相关问题"
        },
        {
          "level": 3,
          "title": "2.1 ConcurrentHashMap 和 Hashtable 的区别",
          "slug": "_2-1-concurrenthashmap-和-hashtable-的区别"
        },
        {
          "level": 3,
          "title": "2.2 ConcurrentHashMap线程安全的具体实现方式/底层具体实现",
          "slug": "_2-2-concurrenthashmap线程安全的具体实现方式-底层具体实现"
        },
        {
          "level": 2,
          "title": "3 谈谈 synchronized 和 ReentrantLock 的区别",
          "slug": "_3-谈谈-synchronized-和-reentrantlock-的区别"
        },
        {
          "level": 2,
          "title": "4 线程池了解吗?",
          "slug": "_4-线程池了解吗"
        },
        {
          "level": 3,
          "title": "4.1 为什么要用线程池?",
          "slug": "_4-1-为什么要用线程池"
        },
        {
          "level": 3,
          "title": "4.2 Java 提供了哪几种线程池?他们各自的使用场景是什么?",
          "slug": "_4-2-java-提供了哪几种线程池-他们各自的使用场景是什么"
        },
        {
          "level": 3,
          "title": "4.3 创建的线程池的方式",
          "slug": "_4-3-创建的线程池的方式"
        },
        {
          "level": 2,
          "title": "5 Nginx",
          "slug": "_5-nginx"
        },
        {
          "level": 3,
          "title": "5.1 简单介绍一下Nginx",
          "slug": "_5-1-简单介绍一下nginx"
        },
        {
          "level": 3,
          "title": "5.2 为什么要用 Nginx?",
          "slug": "_5-2-为什么要用-nginx"
        },
        {
          "level": 3,
          "title": "5.3 Nginx 的四个主要组成部分了解吗?",
          "slug": "_5-3-nginx-的四个主要组成部分了解吗"
        },
        {
          "level": 2,
          "title": "补充",
          "slug": "补充"
        },
        {
          "level": 3,
          "title": "HashMap的put怎么实现，如何解决hash冲突。",
          "slug": "hashmap的put怎么实现-如何解决hash冲突。"
        },
        {
          "level": 3,
          "title": "红黑树是怎么样的数据结构，有什么样的性质",
          "slug": "红黑树是怎么样的数据结构-有什么样的性质"
        },
        {
          "level": 3,
          "title": "红黑树什么时候变色",
          "slug": "红黑树什么时候变色"
        },
        {
          "level": 3,
          "title": "hashmap什么时候会调整大小？",
          "slug": "hashmap什么时候会调整大小"
        },
        {
          "level": 3,
          "title": "hashmap扩容存在什么问题？",
          "slug": "hashmap扩容存在什么问题"
        },
        {
          "level": 3,
          "title": "你刚才提到concurrentHashMap，你知道怎么实现吗",
          "slug": "你刚才提到concurrenthashmap-你知道怎么实现吗"
        },
        {
          "level": 3,
          "title": "你提到Lock，知道哪些相应的锁？",
          "slug": "你提到lock-知道哪些相应的锁"
        },
        {
          "level": 3,
          "title": "AQS如何实现可重入",
          "slug": "aqs如何实现可重入"
        },
        {
          "level": 3,
          "title": "volatile什么作用",
          "slug": "volatile什么作用"
        },
        {
          "level": 3,
          "title": "内存可见性具体指什么？volatile通过什么机制防止",
          "slug": "内存可见性具体指什么-volatile通过什么机制防止"
        },
        {
          "level": 3,
          "title": "synchronized内部分为几种锁，他们的使用场景是什么",
          "slug": "synchronized内部分为几种锁-他们的使用场景是什么"
        },
        {
          "level": 3,
          "title": "操作系统调度进程有哪些算法？",
          "slug": "操作系统调度进程有哪些算法"
        },
        {
          "level": 3,
          "title": "数据库特性",
          "slug": "数据库特性"
        },
        {
          "level": 3,
          "title": "四种隔离级别和实现方式",
          "slug": "四种隔离级别和实现方式"
        },
        {
          "level": 3,
          "title": "什么时候会加锁？",
          "slug": "什么时候会加锁"
        },
        {
          "level": 3,
          "title": "一致性的三种级别",
          "slug": "一致性的三种级别"
        },
        {
          "level": 3,
          "title": "持久性的实现方式",
          "slug": "持久性的实现方式"
        },
        {
          "level": 3,
          "title": "Redis有几种持久化方式？",
          "slug": "redis有几种持久化方式"
        },
        {
          "level": 3,
          "title": "B+树和B树区别",
          "slug": "b-树和b树区别"
        },
        {
          "level": 3,
          "title": "linux进程间有几种通信方式，各种方式的优缺点",
          "slug": "linux进程间有几种通信方式-各种方式的优缺点"
        },
        {
          "level": 3,
          "title": "mysql要加上nextkey锁，语句该怎么写",
          "slug": "mysql要加上nextkey锁-语句该怎么写"
        },
        {
          "level": 3,
          "title": "怎么查看系统负载",
          "slug": "怎么查看系统负载"
        },
        {
          "level": 3,
          "title": "查找磁盘上最大的文件的命令",
          "slug": "查找磁盘上最大的文件的命令"
        },
        {
          "level": 3,
          "title": "从底层解释最左匹配原则",
          "slug": "从底层解释最左匹配原则"
        },
        {
          "level": 3,
          "title": "Spring支持五种类型的通知：",
          "slug": "spring支持五种类型的通知"
        },
        {
          "level": 3,
          "title": "spring AOP四种实现方式",
          "slug": "spring-aop四种实现方式"
        },
        {
          "level": 3,
          "title": "jvm为什么要指令重排",
          "slug": "jvm为什么要指令重排"
        },
        {
          "level": 3,
          "title": "JVM优化",
          "slug": "jvm优化"
        },
        {
          "level": 3,
          "title": "jit编译器的原理",
          "slug": "jit编译器的原理"
        },
        {
          "level": 3,
          "title": "有一个系统需要做负载均衡？请设计架构怎么去实现负载均衡，考虑易用性？（可以再拓展）",
          "slug": "有一个系统需要做负载均衡-请设计架构怎么去实现负载均衡-考虑易用性-可以再拓展"
        },
        {
          "level": 3,
          "title": "AOF如何缩减自身文件大小",
          "slug": "aof如何缩减自身文件大小"
        },
        {
          "level": 3,
          "title": "mysql如何在RR隔离级别下避免幻读问题：(Repeatable Read)",
          "slug": "mysql如何在rr隔离级别下避免幻读问题-repeatable-read"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/",
      "relativePath": "java/collection/README.md",
      "key": "v-74b3cdd6",
      "path": "/java/collection/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "title": "1. 简述线程，程序、进程的基本概念。以及他们之间关系是什么？",
      "frontmatter": {},
      "regularPath": "/interview/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3.html",
      "relativePath": "interview/进程线程相关.md",
      "key": "v-1e5b23c7",
      "path": "/interview/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 简述线程，程序、进程的基本概念。以及他们之间关系是什么？",
          "slug": "_1-简述线程-程序、进程的基本概念。以及他们之间关系是什么"
        },
        {
          "level": 2,
          "title": "2. 线程有哪些基本状态？这些状态是如何定义的?",
          "slug": "_2-线程有哪些基本状态-这些状态是如何定义的"
        },
        {
          "level": 2,
          "title": "3. 何为多线程？",
          "slug": "_3-何为多线程"
        },
        {
          "level": 2,
          "title": "4. 为什么要使用多线程?",
          "slug": "_4-为什么要使用多线程"
        },
        {
          "level": 2,
          "title": "5 使用多线程常见的三种方式",
          "slug": "_5-使用多线程常见的三种方式"
        },
        {
          "level": 3,
          "title": "①继承Thread类",
          "slug": "_1继承thread类"
        },
        {
          "level": 3,
          "title": "②实现Runnable接口",
          "slug": "_2实现runnable接口"
        },
        {
          "level": 3,
          "title": "③使用线程池",
          "slug": "_3使用线程池"
        },
        {
          "level": 2,
          "title": "6 线程的优先级",
          "slug": "_6-线程的优先级"
        },
        {
          "level": 2,
          "title": "7 Java多线程分类",
          "slug": "_7-java多线程分类"
        },
        {
          "level": 3,
          "title": "用户线程",
          "slug": "用户线程"
        },
        {
          "level": 3,
          "title": "守护线程",
          "slug": "守护线程"
        },
        {
          "level": 2,
          "title": "8 sleep()方法和wait()方法简单对比",
          "slug": "_8-sleep-方法和wait-方法简单对比"
        },
        {
          "level": 2,
          "title": "9 为什么我们调用start()方法时会执行run()方法，为什么我们不能直接调用run()方法？",
          "slug": "_9-为什么我们调用start-方法时会执行run-方法-为什么我们不能直接调用run-方法"
        },
        {
          "level": 3,
          "title": "1、说说线程的生命周期和状态?",
          "slug": "_1、说说线程的生命周期和状态"
        },
        {
          "level": 3,
          "title": "2、什么是上下文切换?",
          "slug": "_2、什么是上下文切换"
        },
        {
          "level": 3,
          "title": "3、死锁以及如何避免死锁",
          "slug": "_3、死锁以及如何避免死锁"
        },
        {
          "level": 3,
          "title": "4、 为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？",
          "slug": "_4、-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法"
        },
        {
          "level": 3,
          "title": "5、Wait、Sleep和Yield、Join方法的区别",
          "slug": "_5、wait、sleep和yield、join方法的区别"
        },
        {
          "level": 3,
          "title": "6、JAVA多线程实现的三种方式",
          "slug": "_6、java多线程实现的三种方式"
        },
        {
          "level": 3,
          "title": "7、执行execute()方法和submit()方法的区别是什么呢",
          "slug": "_7、执行execute-方法和submit-方法的区别是什么呢"
        },
        {
          "level": 3,
          "title": "8、 如何创建线程池",
          "slug": "_8、-如何创建线程池"
        },
        {
          "level": 3,
          "title": "9、优化线程池线程数量",
          "slug": "_9、优化线程池线程数量"
        },
        {
          "level": 3,
          "title": "10、线程同步以及线程调度相关的方法",
          "slug": "_10、线程同步以及线程调度相关的方法"
        },
        {
          "level": 3,
          "title": "11、synchronized 关键字理解",
          "slug": "_11、synchronized-关键字理解"
        },
        {
          "level": 3,
          "title": "12、synchronized关键字最主要的三种使用方式",
          "slug": "_12、synchronized关键字最主要的三种使用方式"
        },
        {
          "level": 3,
          "title": "13、讲一下 synchronized 关键字的底层原理",
          "slug": "_13、讲一下-synchronized-关键字的底层原理"
        },
        {
          "level": 3,
          "title": "14、说说 JDK1.6 之后的synchronized 关键字底层做了哪些优化，可以详细介绍一下这些优化吗",
          "slug": "_14、说说-jdk1-6-之后的synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗"
        },
        {
          "level": 3,
          "title": "15、谈谈 synchronized和ReentrantLock 的区别，结合原理去说明",
          "slug": "_15、谈谈-synchronized和reentrantlock-的区别-结合原理去说明"
        },
        {
          "level": 3,
          "title": "16、volatile关键字",
          "slug": "_16、volatile关键字"
        },
        {
          "level": 3,
          "title": "17、 synchronized关键字和volatile关键字比较",
          "slug": "_17、-synchronized关键字和volatile关键字比较"
        },
        {
          "level": 3,
          "title": "18、ThreadLocal简介",
          "slug": "_18、threadlocal简介"
        },
        {
          "level": 3,
          "title": "19、ThreadLocal原理",
          "slug": "_19、threadlocal原理"
        },
        {
          "level": 3,
          "title": "20、ThreadLocal 内存泄露问题",
          "slug": "_20、threadlocal-内存泄露问题"
        },
        {
          "level": 3,
          "title": "21、能不能给我简单介绍一下 AtomicInteger 类的原理",
          "slug": "_21、能不能给我简单介绍一下-atomicinteger-类的原理"
        },
        {
          "level": 3,
          "title": "22、AQS 原理分析",
          "slug": "_22、aqs-原理分析"
        },
        {
          "level": 3,
          "title": "23、AQS对资源的共享方式",
          "slug": "_23、aqs对资源的共享方式"
        },
        {
          "level": 3,
          "title": "24、 AQS 组件总结",
          "slug": "_24、-aqs-组件总结"
        },
        {
          "level": 3,
          "title": "25、volatile如何做到内存可见性的。",
          "slug": "_25、volatile如何做到内存可见性的。"
        },
        {
          "level": 3,
          "title": "26、volatile如何做到指令重排序的。",
          "slug": "_26、volatile如何做到指令重排序的。"
        },
        {
          "level": 3,
          "title": "27、Java 对象头",
          "slug": "_27、java-对象头"
        },
        {
          "level": 3,
          "title": "28、线程同步的方式",
          "slug": "_28、线程同步的方式"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/finally%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html",
      "relativePath": "java/collection/finally执行顺序.md",
      "key": "v-1bc28704",
      "path": "/java/collection/finally%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E6%9B%B4%E5%A4%9A%E7%BB%86%E8%8A%82.html",
      "relativePath": "java/collection/Java集合框架更多细节.md",
      "key": "v-6326fb91",
      "path": "/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E6%9B%B4%E5%A4%9A%E7%BB%86%E8%8A%82.html",
      "headers": [
        {
          "level": 2,
          "title": "集合框架图",
          "slug": "集合框架图"
        },
        {
          "level": 2,
          "title": "Collection",
          "slug": "collection"
        },
        {
          "level": 2,
          "title": "Map",
          "slug": "map"
        },
        {
          "level": 2,
          "title": "工具类",
          "slug": "工具类"
        },
        {
          "level": 2,
          "title": "通用实现",
          "slug": "通用实现"
        },
        {
          "level": 2,
          "title": "ArrayList",
          "slug": "arraylist"
        },
        {
          "level": 3,
          "title": "1. 概览",
          "slug": "_1-概览"
        },
        {
          "level": 3,
          "title": "2. 序列化",
          "slug": "_2-序列化"
        },
        {
          "level": 3,
          "title": "3. 扩容",
          "slug": "_3-扩容"
        },
        {
          "level": 3,
          "title": "4. 删除元素",
          "slug": "_4-删除元素"
        },
        {
          "level": 3,
          "title": "5. Fail-Fast",
          "slug": "_5-fail-fast"
        },
        {
          "level": 2,
          "title": "Vector",
          "slug": "vector"
        },
        {
          "level": 3,
          "title": "1. 同步",
          "slug": "_1-同步"
        },
        {
          "level": 3,
          "title": "2. ArrayList 与 Vector",
          "slug": "_2-arraylist-与-vector"
        },
        {
          "level": 3,
          "title": "3. Vector 替代方案",
          "slug": "_3-vector-替代方案"
        },
        {
          "level": 2,
          "title": "LinkedList",
          "slug": "linkedlist"
        },
        {
          "level": 3,
          "title": "1. 概览",
          "slug": "_1-概览-2"
        },
        {
          "level": 3,
          "title": "2. add()",
          "slug": "_2-add"
        },
        {
          "level": 3,
          "title": "3. remove()",
          "slug": "_3-remove"
        },
        {
          "level": 3,
          "title": "4. get()",
          "slug": "_4-get"
        },
        {
          "level": 3,
          "title": "5. 总结",
          "slug": "_5-总结"
        },
        {
          "level": 3,
          "title": "6. ArrayList 与 LinkedList",
          "slug": "_6-arraylist-与-linkedlist"
        },
        {
          "level": 2,
          "title": "HashMap",
          "slug": "hashmap"
        },
        {
          "level": 3,
          "title": "1. 存储结构",
          "slug": "_1-存储结构"
        },
        {
          "level": 3,
          "title": "2. 重要参数",
          "slug": "_2-重要参数"
        },
        {
          "level": 3,
          "title": "3. 确定哈希桶数组索引位置",
          "slug": "_3-确定哈希桶数组索引位置"
        },
        {
          "level": 3,
          "title": "4. 分析HashMap的put方法",
          "slug": "_4-分析hashmap的put方法"
        },
        {
          "level": 3,
          "title": "5. 扩容机制",
          "slug": "_5-扩容机制"
        },
        {
          "level": 3,
          "title": "6. 线程安全性",
          "slug": "_6-线程安全性"
        },
        {
          "level": 3,
          "title": "7. JDK1.8与JDK1.7的性能对比",
          "slug": "_7-jdk1-8与jdk1-7的性能对比"
        },
        {
          "level": 3,
          "title": "8. Hash较均匀的情况",
          "slug": "_8-hash较均匀的情况"
        },
        {
          "level": 3,
          "title": "9. Hash极不均匀的情况",
          "slug": "_9-hash极不均匀的情况"
        },
        {
          "level": 3,
          "title": "10. HashMap与Hashtable",
          "slug": "_10-hashmap与hashtable"
        },
        {
          "level": 3,
          "title": "11. 小结",
          "slug": "_11-小结"
        },
        {
          "level": 2,
          "title": "ConcurrentHashMap",
          "slug": "concurrenthashmap"
        },
        {
          "level": 3,
          "title": "1. 概述",
          "slug": "_1-概述"
        },
        {
          "level": 3,
          "title": "2. 存储结构",
          "slug": "_2-存储结构"
        },
        {
          "level": 3,
          "title": "2. size 操作",
          "slug": "_2-size-操作"
        },
        {
          "level": 3,
          "title": "3. 同步方式",
          "slug": "_3-同步方式"
        },
        {
          "level": 3,
          "title": "4. JDK 1.8 的改动",
          "slug": "_4-jdk-1-8-的改动"
        },
        {
          "level": 2,
          "title": "HashSet",
          "slug": "hashset"
        },
        {
          "level": 3,
          "title": "1. 成员变量",
          "slug": "_1-成员变量"
        },
        {
          "level": 3,
          "title": "2. 构造函数",
          "slug": "_2-构造函数"
        },
        {
          "level": 3,
          "title": "3. add()",
          "slug": "_3-add"
        },
        {
          "level": 3,
          "title": "4. 总结",
          "slug": "_4-总结"
        },
        {
          "level": 2,
          "title": "LinkedHashSet and LinkedHashMap",
          "slug": "linkedhashset-and-linkedhashmap"
        },
        {
          "level": 3,
          "title": "1. 概览",
          "slug": "_1-概览-3"
        },
        {
          "level": 3,
          "title": "2. get()",
          "slug": "_2-get"
        },
        {
          "level": 3,
          "title": "3. put()",
          "slug": "_3-put"
        },
        {
          "level": 3,
          "title": "4. remove()",
          "slug": "_4-remove"
        },
        {
          "level": 3,
          "title": "5. LinkedHashSet",
          "slug": "_5-linkedhashset"
        },
        {
          "level": 3,
          "title": "6. LinkedHashMap经典用法",
          "slug": "_6-linkedhashmap经典用法"
        },
        {
          "level": 2,
          "title": "迭代器模式",
          "slug": "迭代器模式"
        },
        {
          "level": 2,
          "title": "适配器模式",
          "slug": "适配器模式"
        },
        {
          "level": 2,
          "title": "1. ArrayList和LinkedList区别",
          "slug": "_1-arraylist和linkedlist区别"
        },
        {
          "level": 2,
          "title": "2. HashMap和Hashtable区别，HashMap的key类型",
          "slug": "_2-hashmap和hashtable区别-hashmap的key类型"
        },
        {
          "level": 2,
          "title": "3. HashMap和ConcurrentHashMap",
          "slug": "_3-hashmap和concurrenthashmap"
        },
        {
          "level": 2,
          "title": "4. Hashtable的原理",
          "slug": "_4-hashtable的原理"
        },
        {
          "level": 2,
          "title": "5. Hash冲突的解决办法",
          "slug": "_5-hash冲突的解决办法"
        },
        {
          "level": 2,
          "title": "6. 什么是迭代器",
          "slug": "_6-什么是迭代器"
        },
        {
          "level": 2,
          "title": "7. 构造相同hash的字符串进行攻击，这种情况应该怎么处理？JDK7如何处理",
          "slug": "_7-构造相同hash的字符串进行攻击-这种情况应该怎么处理-jdk7如何处理"
        },
        {
          "level": 2,
          "title": "8. HashMap为什么大小是2的幂次",
          "slug": "_8-hashmap为什么大小是2的幂次"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/hashmap%E7%9A%84%E6%AD%BB%E5%BE%AA%E7%8E%AF%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "java/collection/hashmap的死循环详解.md",
      "key": "v-0ea30d54",
      "path": "/java/collection/hashmap%E7%9A%84%E6%AD%BB%E5%BE%AA%E7%8E%AF%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "问题的症状",
          "slug": "问题的症状"
        },
        {
          "level": 3,
          "title": "Hash表数据结构",
          "slug": "hash表数据结构"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/bean%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",
      "relativePath": "java/collection/bean作用域生命周期.md",
      "key": "v-049d155d",
      "path": "/java/collection/bean%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",
      "headers": [
        {
          "level": 3,
          "title": "1. singleton——唯一 bean 实例",
          "slug": "_1-singleton-唯一-bean-实例"
        },
        {
          "level": 3,
          "title": "2. prototype——每次请求都会创建一个新的 bean 实例",
          "slug": "_2-prototype-每次请求都会创建一个新的-bean-实例"
        },
        {
          "level": 3,
          "title": "3. request——每一次HTTP请求都会产生一个新的bean，该bean仅在当前HTTP request内有效",
          "slug": "_3-request-每一次http请求都会产生一个新的bean-该bean仅在当前http-request内有效"
        },
        {
          "level": 3,
          "title": "4. session——每一次HTTP请求都会产生一个新的 bean，该bean仅在当前 HTTP session 内有效",
          "slug": "_4-session-每一次http请求都会产生一个新的-bean-该bean仅在当前-http-session-内有效"
        },
        {
          "level": 3,
          "title": "5. globalSession",
          "slug": "_5-globalsession"
        },
        {
          "level": 3,
          "title": "initialization 和 destroy",
          "slug": "initialization-和-destroy"
        },
        {
          "level": 3,
          "title": "实现*Aware接口 在Bean中使用Spring框架的一些对象",
          "slug": "实现-aware接口-在bean中使用spring框架的一些对象"
        },
        {
          "level": 3,
          "title": "BeanPostProcessor",
          "slug": "beanpostprocessor"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 3,
          "title": "单例管理的对象",
          "slug": "单例管理的对象"
        },
        {
          "level": 3,
          "title": "非单例管理的对象",
          "slug": "非单例管理的对象"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/hashmap%E5%8E%9F%E7%90%86.html",
      "relativePath": "java/collection/hashmap原理.md",
      "key": "v-e196cca8",
      "path": "/java/collection/hashmap%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 3,
          "title": "1. 什么时候会使用HashMap？他有什么特点？",
          "slug": "_1-什么时候会使用hashmap-他有什么特点"
        },
        {
          "level": 3,
          "title": "2. 你知道HashMap的工作原理吗？",
          "slug": "_2-你知道hashmap的工作原理吗"
        },
        {
          "level": 3,
          "title": "3. 你知道get和put的原理吗？equals()和hashCode()的都有什么作用？",
          "slug": "_3-你知道get和put的原理吗-equals-和hashcode-的都有什么作用"
        },
        {
          "level": 3,
          "title": "4. 你知道hash的实现吗？为什么要这样实现？",
          "slug": "_4-你知道hash的实现吗-为什么要这样实现"
        },
        {
          "level": 3,
          "title": "5. 如果HashMap的大小超过了负载因子(load factor)定义的容量，怎么办？",
          "slug": "_5-如果hashmap的大小超过了负载因子-load-factor-定义的容量-怎么办"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%8F%8A%E5%85%B6%E5%8C%BA%E5%88%AB.html",
      "relativePath": "java/collection/动态代理两种方式及其区别.md",
      "key": "v-2d548f37",
      "path": "/java/collection/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%8F%8A%E5%85%B6%E5%8C%BA%E5%88%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "应用场景",
          "slug": "应用场景"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "先来看一下什么是 MVC 模式",
      "frontmatter": {},
      "regularPath": "/java/collection/springmvc.html",
      "relativePath": "java/collection/springmvc.md",
      "key": "v-72f22ace",
      "path": "/java/collection/springmvc.html",
      "headers": [
        {
          "level": 3,
          "title": "先来看一下什么是 MVC 模式",
          "slug": "先来看一下什么是-mvc-模式"
        },
        {
          "level": 3,
          "title": "SpringMVC 简单介绍",
          "slug": "springmvc-简单介绍"
        },
        {
          "level": 3,
          "title": "SpringMVC 使用",
          "slug": "springmvc-使用"
        },
        {
          "level": 3,
          "title": "SpringMVC 工作原理（重要）",
          "slug": "springmvc-工作原理-重要"
        },
        {
          "level": 3,
          "title": "SpringMVC 重要组件说明",
          "slug": "springmvc-重要组件说明"
        },
        {
          "level": 3,
          "title": "DispatcherServlet详细解析",
          "slug": "dispatcherservlet详细解析"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/jdk5-10.html",
      "relativePath": "java/collection/jdk5-10.md",
      "key": "v-5ff0ec24",
      "path": "/java/collection/jdk5-10.html",
      "headers": [
        {
          "level": 3,
          "title": "JDK1.5新特性：",
          "slug": "jdk1-5新特性"
        },
        {
          "level": 3,
          "title": "JDK1.6新特性：",
          "slug": "jdk1-6新特性"
        },
        {
          "level": 3,
          "title": "JDK1.7 新特性",
          "slug": "jdk1-7-新特性"
        },
        {
          "level": 3,
          "title": "JDK1.8新特性",
          "slug": "jdk1-8新特性"
        },
        {
          "level": 3,
          "title": "jdk1.9新特性",
          "slug": "jdk1-9新特性"
        },
        {
          "level": 3,
          "title": "JDK 10",
          "slug": "jdk-10"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/%E5%8F%8D%E5%B0%84%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8.html",
      "relativePath": "java/collection/反射有什么作用.md",
      "key": "v-1f74cee2",
      "path": "/java/collection/%E5%8F%8D%E5%B0%84%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/%E5%BC%82%E5%B8%B8%E5%8E%9F%E7%90%86%E5%88%86%E7%B1%BB.html",
      "relativePath": "java/collection/异常原理分类.md",
      "key": "v-7e03474a",
      "path": "/java/collection/%E5%BC%82%E5%B8%B8%E5%8E%9F%E7%90%86%E5%88%86%E7%B1%BB.html",
      "headers": [
        {
          "level": 3,
          "title": "异常分类",
          "slug": "异常分类"
        },
        {
          "level": 3,
          "title": "异常原理",
          "slug": "异常原理"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/spring%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "relativePath": "java/collection/spring中的设计模式.md",
      "key": "v-4d15cd66",
      "path": "/java/collection/spring%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "headers": [
        {
          "level": 2,
          "title": "控制反转(IoC)和依赖注入(DI)",
          "slug": "控制反转-ioc-和依赖注入-di"
        },
        {
          "level": 2,
          "title": "工厂设计模式",
          "slug": "工厂设计模式"
        },
        {
          "level": 2,
          "title": "单例设计模式",
          "slug": "单例设计模式"
        },
        {
          "level": 2,
          "title": "代理设计模式",
          "slug": "代理设计模式"
        },
        {
          "level": 3,
          "title": "代理模式在 AOP 中的应用",
          "slug": "代理模式在-aop-中的应用"
        },
        {
          "level": 3,
          "title": "Spring AOP 和 AspectJ AOP 有什么区别?",
          "slug": "spring-aop-和-aspectj-aop-有什么区别"
        },
        {
          "level": 2,
          "title": "模板方法",
          "slug": "模板方法"
        },
        {
          "level": 2,
          "title": "观察者模式",
          "slug": "观察者模式"
        },
        {
          "level": 3,
          "title": "Spring 事件驱动模型中的三种角色",
          "slug": "spring-事件驱动模型中的三种角色"
        },
        {
          "level": 3,
          "title": "Spring 的事件流程总结",
          "slug": "spring-的事件流程总结"
        },
        {
          "level": 2,
          "title": "适配器模式",
          "slug": "适配器模式"
        },
        {
          "level": 3,
          "title": "spring AOP中的适配器模式",
          "slug": "spring-aop中的适配器模式"
        },
        {
          "level": 3,
          "title": "spring MVC中的适配器模式",
          "slug": "spring-mvc中的适配器模式"
        },
        {
          "level": 2,
          "title": "装饰者模式",
          "slug": "装饰者模式"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/io/BIONIO%E4%B8%8EAIO%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "java/io/BIONIO与AIO的区别.md",
      "key": "v-18ab02ee",
      "path": "/java/io/BIONIO%E4%B8%8EAIO%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "BIO（Blocking I/O）同步阻塞I/O",
          "slug": "bio-blocking-i-o-同步阻塞i-o"
        },
        {
          "level": 3,
          "title": "NIO (New I/O) 同步非阻塞I/O",
          "slug": "nio-new-i-o-同步非阻塞i-o"
        },
        {
          "level": 3,
          "title": "AIO (Asynchronous I/O) 异步非阻塞I/O",
          "slug": "aio-asynchronous-i-o-异步非阻塞i-o"
        },
        {
          "level": 3,
          "title": "1 IO，NIO，AIO区别",
          "slug": "_1-io-nio-aio区别"
        },
        {
          "level": 3,
          "title": "Stock通信的伪代码实现流程",
          "slug": "stock通信的伪代码实现流程"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81%E5%92%8C5%E4%B8%AA%E5%8E%9F%E5%88%99.html",
      "relativePath": "java/collection/面向对象三大特征和5个原则.md",
      "key": "v-1580079c",
      "path": "/java/collection/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81%E5%92%8C5%E4%B8%AA%E5%8E%9F%E5%88%99.html",
      "headers": [
        {
          "level": 3,
          "title": "(1)封装(Encapsulation)",
          "slug": "_1-封装-encapsulation"
        },
        {
          "level": 3,
          "title": "(2)继承(Inheritance)",
          "slug": "_2-继承-inheritance"
        },
        {
          "level": 3,
          "title": "(3)多态(Polymorphism)",
          "slug": "_3-多态-polymorphism"
        },
        {
          "level": 3,
          "title": "单一职责原则（Single-Resposibility Principle）",
          "slug": "单一职责原则-single-resposibility-principle"
        },
        {
          "level": 3,
          "title": "开放封闭原则（Open-Closed principle）",
          "slug": "开放封闭原则-open-closed-principle"
        },
        {
          "level": 3,
          "title": "Liskov替换原则（Liskov-Substitution Principle）",
          "slug": "liskov替换原则-liskov-substitution-principle"
        },
        {
          "level": 3,
          "title": "依赖倒置原则（Dependecy-Inversion Principle）",
          "slug": "依赖倒置原则-dependecy-inversion-principle"
        },
        {
          "level": 3,
          "title": "接口隔离原则（Interface-Segregation Principle）",
          "slug": "接口隔离原则-interface-segregation-principle"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/io/IO%E6%A8%A1%E5%BC%8F%E5%92%8CIO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html",
      "relativePath": "java/io/IO模式和IO多路复用.md",
      "key": "v-853413b6",
      "path": "/java/io/IO%E6%A8%A1%E5%BC%8F%E5%92%8CIO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html",
      "headers": [
        {
          "level": 3,
          "title": "IO模式",
          "slug": "io模式"
        },
        {
          "level": 3,
          "title": "IO请求流程",
          "slug": "io请求流程"
        },
        {
          "level": 3,
          "title": "阻塞IO",
          "slug": "阻塞io"
        },
        {
          "level": 3,
          "title": "非阻塞IO",
          "slug": "非阻塞io"
        },
        {
          "level": 3,
          "title": "IO多路复用",
          "slug": "io多路复用"
        },
        {
          "level": 3,
          "title": "异步IO",
          "slug": "异步io"
        },
        {
          "level": 3,
          "title": "IO多路复用的实现",
          "slug": "io多路复用的实现"
        },
        {
          "level": 3,
          "title": "epoll",
          "slug": "epoll"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/io/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%9C%BA%E5%88%B6.html",
      "relativePath": "java/io/IO多路复用机制.md",
      "key": "v-19f99eee",
      "path": "/java/io/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%9C%BA%E5%88%B6.html",
      "headers": [
        {
          "level": 3,
          "title": "用户空间与内核空间",
          "slug": "用户空间与内核空间"
        },
        {
          "level": 3,
          "title": "Blocking IO",
          "slug": "blocking-io"
        },
        {
          "level": 3,
          "title": "IO多路复用(IO mutiplexing)",
          "slug": "io多路复用-io-mutiplexing"
        },
        {
          "level": 3,
          "title": "优缺点",
          "slug": "优缺点"
        },
        {
          "level": 3,
          "title": "select，poll，epoll",
          "slug": "select-poll-epoll"
        },
        {
          "level": 3,
          "title": "select",
          "slug": "select"
        },
        {
          "level": 3,
          "title": "poll",
          "slug": "poll"
        },
        {
          "level": 3,
          "title": "epoll",
          "slug": "epoll"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/collection/spring%E9%97%AE%E9%A2%98.html",
      "relativePath": "java/collection/spring问题.md",
      "key": "v-d3d317f4",
      "path": "/java/collection/spring%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是 Spring 框架?",
          "slug": "什么是-spring-框架"
        },
        {
          "level": 2,
          "title": "列举一些重要的Spring模块？",
          "slug": "列举一些重要的spring模块"
        },
        {
          "level": 2,
          "title": "谈谈自己对于 Spring IoC 和 AOP 的理解",
          "slug": "谈谈自己对于-spring-ioc-和-aop-的理解"
        },
        {
          "level": 3,
          "title": "IoC",
          "slug": "ioc"
        },
        {
          "level": 3,
          "title": "AOP",
          "slug": "aop"
        },
        {
          "level": 2,
          "title": "Spring AOP 和 AspectJ AOP 有什么区别？",
          "slug": "spring-aop-和-aspectj-aop-有什么区别"
        },
        {
          "level": 2,
          "title": "Spring 中的 bean 的作用域有哪些?",
          "slug": "spring-中的-bean-的作用域有哪些"
        },
        {
          "level": 2,
          "title": "Spring 中的单例 bean 的线程安全问题了解吗？",
          "slug": "spring-中的单例-bean-的线程安全问题了解吗"
        },
        {
          "level": 2,
          "title": "Spring 中的 bean 生命周期?",
          "slug": "spring-中的-bean-生命周期"
        },
        {
          "level": 2,
          "title": "说说自己对于 Spring MVC 了解?",
          "slug": "说说自己对于-spring-mvc-了解"
        },
        {
          "level": 2,
          "title": "SpringMVC 工作原理了解吗?",
          "slug": "springmvc-工作原理了解吗"
        },
        {
          "level": 2,
          "title": "Spring 框架中用到了哪些设计模式？",
          "slug": "spring-框架中用到了哪些设计模式"
        },
        {
          "level": 2,
          "title": "@Component 和 @Bean 的区别是什么？",
          "slug": "component-和-bean-的区别是什么"
        },
        {
          "level": 2,
          "title": "将一个类声明为Spring的 bean 的注解有哪些?",
          "slug": "将一个类声明为spring的-bean-的注解有哪些"
        },
        {
          "level": 2,
          "title": "Spring 管理事务的方式有几种？",
          "slug": "spring-管理事务的方式有几种"
        },
        {
          "level": 2,
          "title": "Spring 事务中的隔离级别有哪几种?",
          "slug": "spring-事务中的隔离级别有哪几种"
        },
        {
          "level": 2,
          "title": "Spring 事务中哪几种事务传播行为?",
          "slug": "spring-事务中哪几种事务传播行为"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        },
        {
          "level": 3,
          "title": "SpringAOP,IOC实现原理",
          "slug": "springaop-ioc实现原理"
        },
        {
          "level": 3,
          "title": "AOP",
          "slug": "aop-2"
        },
        {
          "level": 3,
          "title": "IOC",
          "slug": "ioc-2"
        },
        {
          "level": 2,
          "title": "Spring事务管理",
          "slug": "spring事务管理"
        },
        {
          "level": 3,
          "title": "Spring单例与线程安全",
          "slug": "spring单例与线程安全"
        },
        {
          "level": 3,
          "title": "Spring源码阅读",
          "slug": "spring源码阅读"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/io/",
      "relativePath": "java/io/README.md",
      "key": "v-bed887f6",
      "path": "/java/io/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "title": "JMM讲解",
      "frontmatter": {},
      "regularPath": "/java/jvm/JMM%E8%AE%B2%E8%A7%A3.html",
      "relativePath": "java/jvm/JMM讲解.md",
      "key": "v-82e78e0a",
      "path": "/java/jvm/JMM%E8%AE%B2%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "JMM讲解",
          "slug": "jmm讲解"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "title": "CMS和G1的区别",
      "frontmatter": {},
      "regularPath": "/java/jvm/CMS%E5%92%8CG1%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "java/jvm/CMS和G1的区别.md",
      "key": "v-1a431918",
      "path": "/java/jvm/CMS%E5%92%8CG1%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "CMS和G1的区别",
          "slug": "cms和g1的区别"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/JDK%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93.html",
      "relativePath": "java/jvm/JDK监控和故障处理工具总结.md",
      "key": "v-6b6ea289",
      "path": "/java/jvm/JDK%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93.html",
      "headers": [
        {
          "level": 2,
          "title": "JDK 命令行工具",
          "slug": "jdk-命令行工具"
        },
        {
          "level": 3,
          "title": "jps:查看所有 Java 进程",
          "slug": "jps-查看所有-java-进程"
        },
        {
          "level": 3,
          "title": "jstat: 监视虚拟机各种运行状态信息",
          "slug": "jstat-监视虚拟机各种运行状态信息"
        },
        {
          "level": 3,
          "title": "jinfo: 实时地查看和调整虚拟机各项参数",
          "slug": "jinfo-实时地查看和调整虚拟机各项参数"
        },
        {
          "level": 3,
          "title": "jmap:生成堆转储快照",
          "slug": "jmap-生成堆转储快照"
        },
        {
          "level": 3,
          "title": "`jhat`: 分析 heapdump 文件",
          "slug": "jhat-分析-heapdump-文件"
        },
        {
          "level": 3,
          "title": "`jstack` :生成虚拟机当前时刻的线程快照",
          "slug": "jstack-生成虚拟机当前时刻的线程快照"
        },
        {
          "level": 2,
          "title": "JDK 可视化分析工具",
          "slug": "jdk-可视化分析工具"
        },
        {
          "level": 3,
          "title": "JConsole:Java 监视与管理控制台",
          "slug": "jconsole-java-监视与管理控制台"
        },
        {
          "level": 3,
          "title": "Visual VM:多合一故障处理工具",
          "slug": "visual-vm-多合一故障处理工具"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/newStudent%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88.html",
      "relativePath": "java/jvm/newStudent做了什么.md",
      "key": "v-7d932ca2",
      "path": "/java/jvm/newStudent%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/",
      "relativePath": "java/jvm/README.md",
      "key": "v-555039bd",
      "path": "/java/jvm/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/io/IO%E5%92%8CNIO%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "relativePath": "java/io/IO和NIO的区别.md",
      "key": "v-5967d060",
      "path": "/java/io/IO%E5%92%8CNIO%E7%9A%84%E5%8C%BA%E5%88%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "面向流和面向缓冲区",
          "slug": "面向流和面向缓冲区"
        },
        {
          "level": 3,
          "title": "阻塞和非阻塞",
          "slug": "阻塞和非阻塞"
        },
        {
          "level": 3,
          "title": "Java IO 工作流程",
          "slug": "java-io-工作流程"
        },
        {
          "level": 3,
          "title": "Java NIO 工作流程",
          "slug": "java-nio-工作流程"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/G1%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "java/jvm/G1原理详解.md",
      "key": "v-3f3ab51d",
      "path": "/java/jvm/G1%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "内存占用：",
          "slug": "内存占用"
        },
        {
          "level": 3,
          "title": "推荐使用G1的场景",
          "slug": "推荐使用g1的场景"
        },
        {
          "level": 3,
          "title": "G1组成",
          "slug": "g1组成"
        },
        {
          "level": 3,
          "title": "对象分配策略",
          "slug": "对象分配策略"
        },
        {
          "level": 3,
          "title": "Young GC",
          "slug": "young-gc"
        },
        {
          "level": 3,
          "title": "Mix GC",
          "slug": "mix-gc"
        },
        {
          "level": 3,
          "title": "调优实践",
          "slug": "调优实践"
        },
        {
          "level": 3,
          "title": "触发Full GC",
          "slug": "触发full-gc"
        },
        {
          "level": 3,
          "title": "一些概念",
          "slug": "一些概念"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B7%A5%E5%85%B7%E5%91%BD%E4%BB%A4.html",
      "relativePath": "java/jvm/Java虚拟机工具命令.md",
      "key": "v-62d08053",
      "path": "/java/jvm/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B7%A5%E5%85%B7%E5%91%BD%E4%BB%A4.html",
      "headers": [
        {
          "level": 3,
          "title": "（1）jps",
          "slug": "_1-jps"
        },
        {
          "level": 3,
          "title": "（2）jstat",
          "slug": "_2-jstat"
        },
        {
          "level": 3,
          "title": "（3）jinfo",
          "slug": "_3-jinfo"
        },
        {
          "level": 3,
          "title": "（4）jmap",
          "slug": "_4-jmap"
        },
        {
          "level": 3,
          "title": "（5）jhat",
          "slug": "_5-jhat"
        },
        {
          "level": 3,
          "title": "（6）jstack",
          "slug": "_6-jstack"
        },
        {
          "level": 3,
          "title": "（7）jconsole",
          "slug": "_7-jconsole"
        },
        {
          "level": 3,
          "title": "（8）jvisualvm",
          "slug": "_8-jvisualvm"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/JVM%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.html",
      "relativePath": "java/jvm/JVM运行时数据区.md",
      "key": "v-c44d3c26",
      "path": "/java/jvm/JVM%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.html",
      "headers": [
        {
          "level": 3,
          "title": "分类",
          "slug": "分类"
        },
        {
          "level": 3,
          "title": "多线程的实现原理",
          "slug": "多线程的实现原理"
        },
        {
          "level": 3,
          "title": "另外一篇文章",
          "slug": "另外一篇文章"
        },
        {
          "level": 3,
          "title": "本地方法栈（线程私有）",
          "slug": "本地方法栈-线程私有"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "CMS",
      "frontmatter": {},
      "regularPath": "/java/jvm/%E4%BD%BF%E7%94%A8%E7%9A%84JVM%E5%8F%82%E6%95%B0.html",
      "relativePath": "java/jvm/使用的JVM参数.md",
      "key": "v-96e52eb0",
      "path": "/java/jvm/%E4%BD%BF%E7%94%A8%E7%9A%84JVM%E5%8F%82%E6%95%B0.html",
      "headers": [
        {
          "level": 3,
          "title": "CMS",
          "slug": "cms"
        },
        {
          "level": 3,
          "title": "G1",
          "slug": "g1"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7.html",
      "relativePath": "java/jvm/内存泄露查询工具.md",
      "key": "v-e637c47a",
      "path": "/java/jvm/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%93%8D%E5%BA%94%E4%BC%98%E5%85%88%E6%88%96%E5%90%9E%E5%90%90%E4%BC%98%E5%85%88%E8%AE%BE%E7%BD%AE.html",
      "relativePath": "java/jvm/响应优先或吞吐优先设置.md",
      "key": "v-818278ae",
      "path": "/java/jvm/%E5%93%8D%E5%BA%94%E4%BC%98%E5%85%88%E6%88%96%E5%90%9E%E5%90%90%E4%BC%98%E5%85%88%E8%AE%BE%E7%BD%AE.html",
      "headers": [
        {
          "level": 3,
          "title": "吞吐量优先的并行收集器",
          "slug": "吞吐量优先的并行收集器"
        },
        {
          "level": 3,
          "title": "响应时间优先的并发收集器",
          "slug": "响应时间优先的并发收集器"
        },
        {
          "level": 3,
          "title": "调优总结：",
          "slug": "调优总结"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/zgc%E4%BB%8B%E7%BB%8D.html",
      "relativePath": "java/jvm/zgc介绍.md",
      "key": "v-1781e4dd",
      "path": "/java/jvm/zgc%E4%BB%8B%E7%BB%8D.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%85%B3%E9%97%ADjava%E6%9C%8D%E5%8A%A1.html",
      "relativePath": "java/jvm/如何优雅的关闭java服务.md",
      "key": "v-048e6af6",
      "path": "/java/jvm/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%85%B3%E9%97%ADjava%E6%9C%8D%E5%8A%A1.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%A6%82%E4%BD%95%E6%89%BE%E5%87%BAJVM%E7%BA%BF%E7%A8%8B%E6%AD%BB%E9%94%81.html",
      "relativePath": "java/jvm/如何找出JVM线程死锁.md",
      "key": "v-b98001ec",
      "path": "/java/jvm/%E5%A6%82%E4%BD%95%E6%89%BE%E5%87%BAJVM%E7%BA%BF%E7%A8%8B%E6%AD%BB%E9%94%81.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E4%BA%8C%E6%AC%A1%E7%BA%BF%E4%B8%8AJVM%E8%B0%83%E4%BC%98%E4%B8%8A%E7%BA%BFGC%E6%AC%A1%E6%95%B0%E8%BF%87%E5%A4%9A%E5%92%8Cpromotionfailed.html",
      "relativePath": "java/jvm/二次线上JVM调优上线GC次数过多和promotionfailed.md",
      "key": "v-3c4604e2",
      "path": "/java/jvm/%E4%BA%8C%E6%AC%A1%E7%BA%BF%E4%B8%8AJVM%E8%B0%83%E4%BC%98%E4%B8%8A%E7%BA%BFGC%E6%AC%A1%E6%95%B0%E8%BF%87%E5%A4%9A%E5%92%8Cpromotionfailed.html",
      "headers": [
        {
          "level": 3,
          "title": "上线GC次数超大",
          "slug": "上线gc次数超大"
        },
        {
          "level": 3,
          "title": "promotion failed",
          "slug": "promotion-failed"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7CPU100%25%E6%8E%92%E6%9F%A5%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5.html",
      "relativePath": "java/jvm/一次生产CPU100%排查优化实践.md",
      "key": "v-ee93d806",
      "path": "/java/jvm/%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7CPU100%25%E6%8E%92%E6%9F%A5%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5.html",
      "headers": [
        {
          "level": 2,
          "title": "本地模拟",
          "slug": "本地模拟"
        },
        {
          "level": 2,
          "title": "优化解决",
          "slug": "优化解决"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%AF%B9%E8%B1%A1%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E4%B8%8E%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95.html",
      "relativePath": "java/jvm/对象搜索算法与回收算法.md",
      "key": "v-23e99a35",
      "path": "/java/jvm/%E5%AF%B9%E8%B1%A1%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E4%B8%8E%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "GC对象搜索算法",
          "slug": "gc对象搜索算法"
        },
        {
          "level": 3,
          "title": "标记-清除算法（Mark-Sweep）",
          "slug": "标记-清除算法-mark-sweep"
        },
        {
          "level": 3,
          "title": "复制算法",
          "slug": "复制算法"
        },
        {
          "level": 3,
          "title": "标记-整理算法（Mark-Compact）",
          "slug": "标记-整理算法-mark-compact"
        },
        {
          "level": 3,
          "title": "分代收集算法",
          "slug": "分代收集算法"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "本文转自这篇文章 https://juejin.im/post/5bade237e51d450ea401fd71",
      "frontmatter": {},
      "regularPath": "/java/jvm/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E4%BB%8ESerial%E5%88%B0ZGC.html",
      "relativePath": "java/jvm/垃圾回收器从Serial到ZGC.md",
      "key": "v-59f0ef78",
      "path": "/java/jvm/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E4%BB%8ESerial%E5%88%B0ZGC.html",
      "headers": [
        {
          "level": 3,
          "title": "Serial收集器",
          "slug": "serial收集器"
        },
        {
          "level": 3,
          "title": "ParNew收集器",
          "slug": "parnew收集器"
        },
        {
          "level": 3,
          "title": "Parallel Scavenge收集器",
          "slug": "parallel-scavenge收集器"
        },
        {
          "level": 3,
          "title": "Serial Old收集器",
          "slug": "serial-old收集器"
        },
        {
          "level": 3,
          "title": "Parallel Old收集器",
          "slug": "parallel-old收集器"
        },
        {
          "level": 3,
          "title": "CMS收集器",
          "slug": "cms收集器"
        },
        {
          "level": 3,
          "title": "G1收集器",
          "slug": "g1收集器"
        },
        {
          "level": 3,
          "title": "令人惊叹的ZGC",
          "slug": "令人惊叹的zgc"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%82%E6%95%B0.html",
      "relativePath": "java/jvm/虚拟机参数.md",
      "key": "v-999bdd58",
      "path": "/java/jvm/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%82%E6%95%B0.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/spring/",
      "relativePath": "java/spring/README.md",
      "key": "v-2044a937",
      "path": "/java/spring/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html",
      "relativePath": "java/jvm/类加载器.md",
      "key": "v-2d4a9157",
      "path": "/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "回顾一下类加载过程",
          "slug": "回顾一下类加载过程"
        },
        {
          "level": 2,
          "title": "类加载器总结",
          "slug": "类加载器总结"
        },
        {
          "level": 2,
          "title": "双亲委派模型",
          "slug": "双亲委派模型"
        },
        {
          "level": 3,
          "title": "双亲委派模型介绍",
          "slug": "双亲委派模型介绍"
        },
        {
          "level": 3,
          "title": "双亲委派模型实现源码分析",
          "slug": "双亲委派模型实现源码分析"
        },
        {
          "level": 3,
          "title": "双亲委派模型的好处",
          "slug": "双亲委派模型的好处"
        },
        {
          "level": 3,
          "title": "如果我们不想用双亲委派模型怎么办？",
          "slug": "如果我们不想用双亲委派模型怎么办"
        },
        {
          "level": 2,
          "title": "自定义类加载器",
          "slug": "自定义类加载器"
        },
        {
          "level": 2,
          "title": "推荐阅读",
          "slug": "推荐阅读"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.html",
      "relativePath": "java/jvm/类加载过程.md",
      "key": "v-e54e4d50",
      "path": "/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.html",
      "headers": [
        {
          "level": 2,
          "title": "加载",
          "slug": "加载"
        },
        {
          "level": 2,
          "title": "验证",
          "slug": "验证"
        },
        {
          "level": 2,
          "title": "准备",
          "slug": "准备"
        },
        {
          "level": 2,
          "title": "解析",
          "slug": "解析"
        },
        {
          "level": 2,
          "title": "初始化",
          "slug": "初始化"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/thread/",
      "relativePath": "java/thread/README.md",
      "key": "v-386be43d",
      "path": "/java/thread/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/thread/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E7%BA%BF%E7%A8%8B%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2.html",
      "relativePath": "java/thread/如何减少线程上下文切换.md",
      "key": "v-afb98d26",
      "path": "/java/thread/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E7%BA%BF%E7%A8%8B%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "线程间通信",
      "frontmatter": {},
      "regularPath": "/java/thread/%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E5%92%8C%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",
      "relativePath": "java/thread/线程间通信和进程间通信.md",
      "key": "v-6d0b8236",
      "path": "/java/thread/%E7%BA%BF%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E5%92%8C%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",
      "headers": [
        {
          "level": 3,
          "title": "线程间通信",
          "slug": "线程间通信"
        },
        {
          "level": 3,
          "title": "进程间通信",
          "slug": "进程间通信"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "结构",
      "frontmatter": {},
      "regularPath": "/java/jvm/%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.html",
      "relativePath": "java/jvm/类文件结构.md",
      "key": "v-1548b4e8",
      "path": "/java/jvm/%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.html",
      "headers": [
        {
          "level": 2,
          "title": "一 概述",
          "slug": "一-概述"
        },
        {
          "level": 2,
          "title": "二 Class 文件结构总结",
          "slug": "二-class-文件结构总结"
        },
        {
          "level": 3,
          "title": "2.1 魔数",
          "slug": "_2-1-魔数"
        },
        {
          "level": 3,
          "title": "2.2 Class 文件版本",
          "slug": "_2-2-class-文件版本"
        },
        {
          "level": 3,
          "title": "2.3 常量池",
          "slug": "_2-3-常量池"
        },
        {
          "level": 3,
          "title": "2.4 访问标志",
          "slug": "_2-4-访问标志"
        },
        {
          "level": 3,
          "title": "2.5 当前类索引,父类索引与接口索引集合",
          "slug": "_2-5-当前类索引-父类索引与接口索引集合"
        },
        {
          "level": 3,
          "title": "2.6 字段表集合",
          "slug": "_2-6-字段表集合"
        },
        {
          "level": 3,
          "title": "2.7 方法表集合",
          "slug": "_2-7-方法表集合"
        },
        {
          "level": 3,
          "title": "2.8 属性表集合",
          "slug": "_2-8-属性表集合"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "lastUpdated": "2022-01-05 15:24:27"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/",
      "relativePath": "kafka/README.md",
      "key": "v-24eaef42",
      "path": "/kafka/",
      "lastUpdated": "2022-01-04 22:11:03"
    },
    {
      "frontmatter": {},
      "regularPath": "/java/thread/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%B0%E5%BA%95%E8%AF%A5%E8%AE%BE%E7%BD%AE%E5%A4%9A%E5%B0%91%E4%B8%AA%E7%BA%BF%E7%A8%8B.html",
      "relativePath": "java/thread/多线程到底该设置多少个线程.md",
      "key": "v-c5e6e7a4",
      "path": "/java/thread/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%B0%E5%BA%95%E8%AF%A5%E8%AE%BE%E7%BD%AE%E5%A4%9A%E5%B0%91%E4%B8%AA%E7%BA%BF%E7%A8%8B.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Spring的事务的传递性",
      "frontmatter": {},
      "regularPath": "/java/spring/spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BC%A0%E9%80%92%E6%80%A7.html",
      "relativePath": "java/spring/spring的事务和传递性.md",
      "key": "v-4e0ce9f4",
      "path": "/java/spring/spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BC%A0%E9%80%92%E6%80%A7.html",
      "headers": [
        {
          "level": 3,
          "title": "Spring的事务的传递性",
          "slug": "spring的事务的传递性"
        },
        {
          "level": 3,
          "title": "spring事务隔离级别",
          "slug": "spring事务隔离级别"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/Kafka%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86.html",
      "relativePath": "kafka/Kafka架构原理.md",
      "key": "v-2bfa2952",
      "path": "/kafka/Kafka%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 3,
          "title": "名词解释",
          "slug": "名词解释"
        },
        {
          "level": 3,
          "title": "消费模型",
          "slug": "消费模型"
        },
        {
          "level": 3,
          "title": "网络模型",
          "slug": "网络模型"
        },
        {
          "level": 3,
          "title": "高可靠分布式存储模型",
          "slug": "高可靠分布式存储模型"
        },
        {
          "level": 3,
          "title": "Kafka 核心组件",
          "slug": "kafka-核心组件"
        },
        {
          "level": 3,
          "title": "Kafka核心特性",
          "slug": "kafka核心特性"
        },
        {
          "level": 3,
          "title": "4.4 Kafka高效性相关设计",
          "slug": "_4-4-kafka高效性相关设计"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "消费模型",
      "frontmatter": {},
      "regularPath": "/kafka/kafka%E6%B6%88%E8%B4%B9%E8%BF%87%E7%A8%8B.html",
      "relativePath": "kafka/kafka消费过程.md",
      "key": "v-57032871",
      "path": "/kafka/kafka%E6%B6%88%E8%B4%B9%E8%BF%87%E7%A8%8B.html",
      "headers": [
        {
          "level": 3,
          "title": "消费模型",
          "slug": "消费模型"
        },
        {
          "level": 3,
          "title": "消费组",
          "slug": "消费组"
        },
        {
          "level": 3,
          "title": "消费组与分区重平衡",
          "slug": "消费组与分区重平衡"
        },
        {
          "level": 3,
          "title": "消费者处理offset",
          "slug": "消费者处理offset"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/kafka%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E5%BF%AB.html",
      "relativePath": "kafka/kafka为什么这么快.md",
      "key": "v-3d7a2f2d",
      "path": "/kafka/kafka%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E5%BF%AB.html",
      "headers": [
        {
          "level": 3,
          "title": "顺序IO（写入）",
          "slug": "顺序io-写入"
        },
        {
          "level": 3,
          "title": "内存映射文件（写入）",
          "slug": "内存映射文件-写入"
        },
        {
          "level": 3,
          "title": "零拷贝（读取）",
          "slug": "零拷贝-读取"
        },
        {
          "level": 3,
          "title": "应用层面的优化（读取）",
          "slug": "应用层面的优化-读取"
        },
        {
          "level": 3,
          "title": "支持压缩（读取）",
          "slug": "支持压缩-读取"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/kafka%E5%86%99%E5%85%A5%E8%BF%87%E7%A8%8B.html",
      "relativePath": "kafka/kafka写入过程.md",
      "key": "v-1e99bc72",
      "path": "/kafka/kafka%E5%86%99%E5%85%A5%E8%BF%87%E7%A8%8B.html",
      "headers": [
        {
          "level": 3,
          "title": "几个基本的概念：",
          "slug": "几个基本的概念"
        },
        {
          "level": 3,
          "title": "kafka的总体数据流程",
          "slug": "kafka的总体数据流程"
        },
        {
          "level": 3,
          "title": "生产",
          "slug": "生产"
        },
        {
          "level": 3,
          "title": "文件组织",
          "slug": "文件组织"
        },
        {
          "level": 3,
          "title": "offset",
          "slug": "offset"
        },
        {
          "level": 3,
          "title": "kafka支持3种消息投递语义",
          "slug": "kafka支持3种消息投递语义"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7.html",
      "relativePath": "kafka/如何保证消息的顺序性.md",
      "key": "v-259d51ac",
      "path": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "解决方案",
          "slug": "解决方案"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/kafka%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "relativePath": "kafka/kafka高可用.md",
      "key": "v-509c1176",
      "path": "/kafka/kafka%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "headers": [
        {
          "level": 3,
          "title": "副本放置策略",
          "slug": "副本放置策略"
        },
        {
          "level": 3,
          "title": "同步策略",
          "slug": "同步策略"
        },
        {
          "level": 3,
          "title": "Leader选举",
          "slug": "leader选举"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E5%86%99%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E8%AF%A5%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html",
      "relativePath": "kafka/如果让你写一个消息队列该如何进行架构设计.md",
      "key": "v-3d9f2a95",
      "path": "/kafka/%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E5%86%99%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E8%AF%A5%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%BB%B6%E6%97%B6%E4%BB%A5%E5%8F%8A%E8%BF%87%E6%9C%9F%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98.html",
      "relativePath": "kafka/如何解决消息队列的延时以及过期失效问题.md",
      "key": "v-55dc5e55",
      "path": "/kafka/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%BB%B6%E6%97%B6%E4%BB%A5%E5%8F%8A%E8%BF%87%E6%9C%9F%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "大量消息在 mq 里积压了几个小时了还没解决",
          "slug": "大量消息在-mq-里积压了几个小时了还没解决"
        },
        {
          "level": 3,
          "title": "mq 中的消息过期失效了",
          "slug": "mq-中的消息过期失效了"
        },
        {
          "level": 3,
          "title": "mq 都快写满了",
          "slug": "mq-都快写满了"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "relativePath": "kafka/如何保证消息队列的高可用.md",
      "key": "v-4f7da321",
      "path": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "RabbitMQ 的高可用性",
          "slug": "rabbitmq-的高可用性"
        },
        {
          "level": 3,
          "title": "Kafka 的高可用性",
          "slug": "kafka-的高可用性"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "博客文章 /_posts/ 路径失效说明",
      "frontmatter": {},
      "regularPath": "/posts-failure.html",
      "relativePath": "posts-failure.md",
      "key": "v-4141d56e",
      "path": "/posts-failure.html",
      "lastUpdated": "2022-01-04 11:06:34"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/kafka%E7%AD%89MQ%E5%AF%B9%E6%AF%94kafka%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8.html",
      "relativePath": "kafka/kafka等MQ对比kafka为什么要用.md",
      "key": "v-c32f7e68",
      "path": "/kafka/kafka%E7%AD%89MQ%E5%AF%B9%E6%AF%94kafka%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "为什么使用消息队列",
          "slug": "为什么使用消息队列"
        },
        {
          "level": 3,
          "title": "消息队列有什么优缺点",
          "slug": "消息队列有什么优缺点"
        },
        {
          "level": 3,
          "title": "Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？",
          "slug": "kafka、activemq、rabbitmq、rocketmq-有什么优缺点"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E7%82%B9%E5%92%8C%E7%BC%BA%E7%82%B9%E4%BB%A5%E5%8F%8A%E5%90%84%E4%B8%AA%E5%AF%B9%E6%AF%94.html",
      "relativePath": "kafka/消息队列有什么优点和缺点以及各个对比.md",
      "key": "v-0bc32b47",
      "path": "/kafka/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E7%82%B9%E5%92%8C%E7%BC%BA%E7%82%B9%E4%BB%A5%E5%8F%8A%E5%90%84%E4%B8%AA%E5%AF%B9%E6%AF%94.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "为什么使用消息队列",
          "slug": "为什么使用消息队列"
        },
        {
          "level": 3,
          "title": "消息队列有什么优缺点",
          "slug": "消息队列有什么优缺点"
        },
        {
          "level": 3,
          "title": "Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？",
          "slug": "kafka、activemq、rabbitmq、rocketmq-有什么优缺点"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7%E4%BC%A0%E8%BE%93.html",
      "relativePath": "kafka/如何保证消息的可靠性传输.md",
      "key": "v-5ec577ca",
      "path": "/kafka/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7%E4%BC%A0%E8%BE%93.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 2,
          "title": "面试官心理分析",
          "slug": "面试官心理分析"
        },
        {
          "level": 2,
          "title": "面试题剖析",
          "slug": "面试题剖析"
        },
        {
          "level": 3,
          "title": "RabbitMQ",
          "slug": "rabbitmq"
        },
        {
          "level": 3,
          "title": "Kafka",
          "slug": "kafka"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/Design-Pattern-FAQ.html",
      "relativePath": "q&a/interview/Design-Pattern-FAQ.md",
      "key": "v-0e6077b8",
      "path": "/q&a/interview/Design-Pattern-FAQ.html",
      "headers": [
        {
          "level": 3,
          "title": "1. 什么是设计模式？你是否在你的代码里面使用过任何设计模式？",
          "slug": "_1-什么是设计模式-你是否在你的代码里面使用过任何设计模式"
        },
        {
          "level": 3,
          "title": "2. 请列举出在 JDK 中几个常用的设计模式？",
          "slug": "_2-请列举出在-jdk-中几个常用的设计模式"
        },
        {
          "level": 3,
          "title": "3. Java 中什么叫单例设计模式？请用 Java 写出线程安全的单例模式",
          "slug": "_3-java-中什么叫单例设计模式-请用-java-写出线程安全的单例模式"
        },
        {
          "level": 3,
          "title": "单例模式的 7 种写法：懒汉 2 种，枚举，饿汉 2 种，静态内部类，双重校验锁（推荐）。",
          "slug": "单例模式的-7-种写法-懒汉-2-种-枚举-饿汉-2-种-静态内部类-双重校验锁-推荐-。"
        },
        {
          "level": 3,
          "title": "4. 在 Java 中，什么叫观察者设计模式（observer design pattern ）？",
          "slug": "_4-在-java-中-什么叫观察者设计模式-observer-design-pattern"
        },
        {
          "level": 3,
          "title": "5. 使用工厂模式最主要的好处是什么？在哪里使用？",
          "slug": "_5-使用工厂模式最主要的好处是什么-在哪里使用"
        },
        {
          "level": 3,
          "title": "6. 举一个用 Java 实现的装饰模式(decorator design pattern) ？它是作用于对象层次还是类层次？",
          "slug": "_6-举一个用-java-实现的装饰模式-decorator-design-pattern-它是作用于对象层次还是类层次"
        },
        {
          "level": 3,
          "title": "7. 在 Java 中，为什么不允许从静态方法中访问非静态变量？",
          "slug": "_7-在-java-中-为什么不允许从静态方法中访问非静态变量"
        },
        {
          "level": 3,
          "title": "8. 设计一个 ATM 机，请说出你的设计思路？",
          "slug": "_8-设计一个-atm-机-请说出你的设计思路"
        },
        {
          "level": 3,
          "title": "9. 在 Java 中，什么时候用重载，什么时候用重写？",
          "slug": "_9-在-java-中-什么时候用重载-什么时候用重写"
        },
        {
          "level": 3,
          "title": "10. 举例说明什么情况下会更倾向于使用抽象类而不是接口？",
          "slug": "_10-举例说明什么情况下会更倾向于使用抽象类而不是接口"
        },
        {
          "level": 3,
          "title": "Spring 当中用到了哪些设计模式？",
          "slug": "spring-当中用到了哪些设计模式"
        },
        {
          "level": 3,
          "title": "在工作中遇到过哪些设计模式，是如何应用的",
          "slug": "在工作中遇到过哪些设计模式-是如何应用的"
        },
        {
          "level": 3,
          "title": "简述一下你了解的 Java 设计模式（总结）",
          "slug": "简述一下你了解的-java-设计模式-总结"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/Elasticsearch-FAQ.html",
      "relativePath": "q&a/interview/Elasticsearch-FAQ.md",
      "key": "v-751a038e",
      "path": "/q&a/interview/Elasticsearch-FAQ.html",
      "headers": [
        {
          "level": 3,
          "title": "1、elasticsearch了解多少，说说你们公司es的集群架构，索引数据大小，分片有多少，以及一些调优手段 。",
          "slug": "_1、elasticsearch了解多少-说说你们公司es的集群架构-索引数据大小-分片有多少-以及一些调优手段-。"
        },
        {
          "level": 3,
          "title": "2、elasticsearch的倒排索引是什么",
          "slug": "_2、elasticsearch的倒排索引是什么"
        },
        {
          "level": 3,
          "title": "3、elasticsearch 索引数据多了怎么办，如何调优，部署",
          "slug": "_3、elasticsearch-索引数据多了怎么办-如何调优-部署"
        },
        {
          "level": 3,
          "title": "4、elasticsearch是如何实现master选举的",
          "slug": "_4、elasticsearch是如何实现master选举的"
        },
        {
          "level": 3,
          "title": "5、详细描述一下Elasticsearch索引文档的过程",
          "slug": "_5、详细描述一下elasticsearch索引文档的过程"
        },
        {
          "level": 3,
          "title": "6、详细描述一下Elasticsearch搜索的过程？",
          "slug": "_6、详细描述一下elasticsearch搜索的过程"
        },
        {
          "level": 3,
          "title": "7、Elasticsearch在部署时，对Linux的设置有哪些优化方法",
          "slug": "_7、elasticsearch在部署时-对linux的设置有哪些优化方法"
        },
        {
          "level": 3,
          "title": "8、lucence内部结构是什么？",
          "slug": "_8、lucence内部结构是什么"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "「直击面试」—— Java 集合，你肯定也会被问到这些",
      "frontmatter": {},
      "regularPath": "/q&a/interview/Collections-FAQ.html",
      "relativePath": "q&a/interview/Collections-FAQ.md",
      "key": "v-05714c64",
      "path": "/q&a/interview/Collections-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "说说常用的集合有哪些吧？",
          "slug": "说说常用的集合有哪些吧"
        },
        {
          "level": 2,
          "title": "ArrayList 和 Vector 的区别",
          "slug": "arraylist-和-vector-的区别"
        },
        {
          "level": 2,
          "title": "ArrayList 与 LinkedList 区别",
          "slug": "arraylist-与-linkedlist-区别"
        },
        {
          "level": 3,
          "title": "构造器",
          "slug": "构造器"
        },
        {
          "level": 3,
          "title": "插入",
          "slug": "插入"
        },
        {
          "level": 3,
          "title": "获取",
          "slug": "获取"
        },
        {
          "level": 2,
          "title": "HashMap的底层实现",
          "slug": "hashmap的底层实现"
        },
        {
          "level": 3,
          "title": "JDK1.7 实现",
          "slug": "jdk1-7-实现"
        },
        {
          "level": 3,
          "title": "JDK1.8 实现",
          "slug": "jdk1-8-实现"
        },
        {
          "level": 2,
          "title": "Hashtable",
          "slug": "hashtable"
        },
        {
          "level": 3,
          "title": "HashMap 和 Hashtable 的区别",
          "slug": "hashmap-和-hashtable-的区别"
        },
        {
          "level": 2,
          "title": "ConcurrentHashMap",
          "slug": "concurrenthashmap"
        },
        {
          "level": 3,
          "title": "JDK1.7 实现",
          "slug": "jdk1-7-实现-2"
        },
        {
          "level": 3,
          "title": "JDK1.8  实现",
          "slug": "jdk1-8-实现-2"
        },
        {
          "level": 3,
          "title": "Hashtable 和 ConcurrentHashMap 的区别",
          "slug": "hashtable-和-concurrenthashmap-的区别"
        },
        {
          "level": 2,
          "title": "Java快速失败（fail-fast）和安全失败（fail-safe）区别",
          "slug": "java快速失败-fail-fast-和安全失败-fail-safe-区别"
        },
        {
          "level": 3,
          "title": "快速失败（fail—fast）",
          "slug": "快速失败-fail-fast"
        },
        {
          "level": 3,
          "title": "安全失败（fail—safe）",
          "slug": "安全失败-fail-safe"
        },
        {
          "level": 3,
          "title": "如何避免fail-fast ？",
          "slug": "如何避免fail-fast"
        },
        {
          "level": 2,
          "title": "Iterator 和 Enumeration 区别",
          "slug": "iterator-和-enumeration-区别"
        },
        {
          "level": 2,
          "title": "Comparable 和 Comparator 接口有何区别？",
          "slug": "comparable-和-comparator-接口有何区别"
        },
        {
          "level": 2,
          "title": "HashSet",
          "slug": "hashset"
        },
        {
          "level": 3,
          "title": "HashSet如何检查重复",
          "slug": "hashset如何检查重复"
        },
        {
          "level": 3,
          "title": "Iterater 和 ListIterator 之间有什么区别？",
          "slug": "iterater-和-listiterator-之间有什么区别"
        },
        {
          "level": 2,
          "title": "参考与感谢",
          "slug": "参考与感谢"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/JUC-FAQ.html",
      "relativePath": "q&a/interview/JUC-FAQ.md",
      "key": "v-26c7a524",
      "path": "/q&a/interview/JUC-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "一、多线程开篇",
          "slug": "一、多线程开篇"
        },
        {
          "level": 3,
          "title": "进程和线程",
          "slug": "进程和线程"
        },
        {
          "level": 3,
          "title": "说说并发与并行的区别?",
          "slug": "说说并发与并行的区别"
        },
        {
          "level": 3,
          "title": "说下同步、异步、阻塞和非阻塞",
          "slug": "说下同步、异步、阻塞和非阻塞"
        },
        {
          "level": 2,
          "title": "同步与异步",
          "slug": "同步与异步"
        },
        {
          "level": 3,
          "title": "什么是线程安全和线程不安全？",
          "slug": "什么是线程安全和线程不安全"
        },
        {
          "level": 3,
          "title": "什么是上下文切换?",
          "slug": "什么是上下文切换"
        },
        {
          "level": 3,
          "title": "什么是线程的上下文切换?",
          "slug": "什么是线程的上下文切换"
        },
        {
          "level": 3,
          "title": "用户线程和守护线程有什么区别?",
          "slug": "用户线程和守护线程有什么区别"
        },
        {
          "level": 3,
          "title": "如何在 Windows 和 Linux 上查找哪个线程 cpu 利用率最高？",
          "slug": "如何在-windows-和-linux-上查找哪个线程-cpu-利用率最高"
        },
        {
          "level": 3,
          "title": "说说线程的生命周期和状态?",
          "slug": "说说线程的生命周期和状态"
        },
        {
          "level": 3,
          "title": "说说 sleep() 方法和 wait() 方法区别和共同点?",
          "slug": "说说-sleep-方法和-wait-方法区别和共同点"
        },
        {
          "level": 3,
          "title": "为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？",
          "slug": "为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法"
        },
        {
          "level": 3,
          "title": "Java 线程启动的几种方式",
          "slug": "java-线程启动的几种方式"
        },
        {
          "level": 3,
          "title": "Java 多线程之间的通信方式",
          "slug": "java-多线程之间的通信方式"
        },
        {
          "level": 3,
          "title": "Java 中 interrupted() 和 isInterrupted()方法的区 别?",
          "slug": "java-中-interrupted-和-isinterrupted-方法的区-别"
        },
        {
          "level": 2,
          "title": "二、同步机制篇",
          "slug": "二、同步机制篇"
        },
        {
          "level": 3,
          "title": "Java同步机制有哪些",
          "slug": "java同步机制有哪些"
        },
        {
          "level": 3,
          "title": "synchronized关键字",
          "slug": "synchronized关键字"
        },
        {
          "level": 3,
          "title": "Lock",
          "slug": "lock"
        },
        {
          "level": 3,
          "title": "如何排查死锁",
          "slug": "如何排查死锁"
        },
        {
          "level": 3,
          "title": "死锁预防",
          "slug": "死锁预防"
        },
        {
          "level": 3,
          "title": "ReentrantLock (可重入锁)",
          "slug": "reentrantlock-可重入锁"
        },
        {
          "level": 3,
          "title": "volatile关键字",
          "slug": "volatile关键字"
        },
        {
          "level": 3,
          "title": "synchronized 和 Lock 区别",
          "slug": "synchronized-和-lock-区别"
        },
        {
          "level": 3,
          "title": "说说 synchronized 关键字和 volatile 关键字的区别",
          "slug": "说说-synchronized-关键字和-volatile-关键字的区别"
        },
        {
          "level": 3,
          "title": "谈谈 synchronized和ReentrantLock 的区别",
          "slug": "谈谈-synchronized和reentrantlock-的区别"
        },
        {
          "level": 2,
          "title": "三、JMM篇",
          "slug": "三、jmm篇"
        },
        {
          "level": 2,
          "title": "四、Atomic~CAS篇",
          "slug": "四、atomic-cas篇"
        },
        {
          "level": 2,
          "title": "五、线程池篇",
          "slug": "五、线程池篇"
        },
        {
          "level": 3,
          "title": "为什么要用线程池？",
          "slug": "为什么要用线程池"
        },
        {
          "level": 3,
          "title": "实现Runnable接口和Callable接口的区别",
          "slug": "实现runnable接口和callable接口的区别"
        },
        {
          "level": 3,
          "title": "执行execute()方法和submit()方法的区别是什么呢？",
          "slug": "执行execute-方法和submit-方法的区别是什么呢"
        },
        {
          "level": 3,
          "title": "如何创建线程池",
          "slug": "如何创建线程池"
        },
        {
          "level": 3,
          "title": "ThreadPoolExecutor 类分析",
          "slug": "threadpoolexecutor-类分析"
        },
        {
          "level": 3,
          "title": "一个简单的线程池Demo:Runnable+ThreadPoolExecutor",
          "slug": "一个简单的线程池demo-runnable-threadpoolexecutor"
        },
        {
          "level": 3,
          "title": "线程池原理分析",
          "slug": "线程池原理分析"
        },
        {
          "level": 3,
          "title": "当提交新任务时，异常如何处理?",
          "slug": "当提交新任务时-异常如何处理"
        },
        {
          "level": 3,
          "title": "线程池都有哪几种工作队列？",
          "slug": "线程池都有哪几种工作队列"
        },
        {
          "level": 3,
          "title": "合理配置线程池你是如何考虑的？",
          "slug": "合理配置线程池你是如何考虑的"
        },
        {
          "level": 2,
          "title": "六、AQS篇",
          "slug": "六、aqs篇"
        },
        {
          "level": 3,
          "title": "6.1. AQS 介绍",
          "slug": "_6-1-aqs-介绍"
        },
        {
          "level": 3,
          "title": "6.2. AQS 原理分析",
          "slug": "_6-2-aqs-原理分析"
        },
        {
          "level": 3,
          "title": "6.3. AQS 组件总结",
          "slug": "_6-3-aqs-组件总结"
        },
        {
          "level": 3,
          "title": "AQS是如何唤醒下一个线程的？",
          "slug": "aqs是如何唤醒下一个线程的"
        },
        {
          "level": 3,
          "title": "AQS 中独占锁和共享锁的操作流程大体描述一下",
          "slug": "aqs-中独占锁和共享锁的操作流程大体描述一下"
        },
        {
          "level": 3,
          "title": "ReetrantLock有用过吗，怎么实现重入的",
          "slug": "reetrantlock有用过吗-怎么实现重入的"
        },
        {
          "level": 3,
          "title": "countDownLatch/CycliBarries/Semaphore使用过吗",
          "slug": "countdownlatch-cyclibarries-semaphore使用过吗"
        },
        {
          "level": 2,
          "title": "七、并发容器篇",
          "slug": "七、并发容器篇"
        },
        {
          "level": 2,
          "title": "八、其他问题",
          "slug": "八、其他问题"
        },
        {
          "level": 3,
          "title": "ThreadLocal",
          "slug": "threadlocal"
        },
        {
          "level": 3,
          "title": "3.1. ThreadLocal简介",
          "slug": "_3-1-threadlocal简介"
        },
        {
          "level": 3,
          "title": "3.2. ThreadLocal示例",
          "slug": "_3-2-threadlocal示例"
        },
        {
          "level": 3,
          "title": "3.3. ThreadLocal原理",
          "slug": "_3-3-threadlocal原理"
        },
        {
          "level": 3,
          "title": "3.4. ThreadLocal 内存泄露问题",
          "slug": "_3-4-threadlocal-内存泄露问题"
        },
        {
          "level": 3,
          "title": "ThreadLocalMap的enrty的key为什么要设置成弱引用",
          "slug": "threadlocalmap的enrty的key为什么要设置成弱引用"
        },
        {
          "level": 3,
          "title": "网站的高并发，大流量访问怎么解决?",
          "slug": "网站的高并发-大流量访问怎么解决"
        },
        {
          "level": 3,
          "title": "订票系统，某车次只有一张火车票，假定有 1w 个人同 时打开 12306 网站来订票，如何解决并发问题?(可扩展 到任何高并发网站要考虑的并发读写问题)。",
          "slug": "订票系统-某车次只有一张火车票-假定有-1w-个人同-时打开-12306-网站来订票-如何解决并发问题-可扩展-到任何高并发网站要考虑的并发读写问题-。"
        },
        {
          "level": 3,
          "title": "如果不用锁机制如何实现共享数据访问。(不要用锁，不要用 sychronized 块或者方法，也不要直接使用 jdk 提供的线程安全 的数据结构，需要自己实现一个类来保证多个线程同时读写这个类 中的共享数据是线程安全的，怎么办?)",
          "slug": "如果不用锁机制如何实现共享数据访问。-不要用锁-不要用-sychronized-块或者方法-也不要直接使用-jdk-提供的线程安全-的数据结构-需要自己实现一个类来保证多个线程同时读写这个类-中的共享数据是线程安全的-怎么办"
        },
        {
          "level": 3,
          "title": "写出 3 条你遵循的多线程最佳实践。",
          "slug": "写出-3-条你遵循的多线程最佳实践。"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/GC-FAQ.html",
      "relativePath": "q&a/interview/GC-FAQ.md",
      "key": "v-69fc68a4",
      "path": "/q&a/interview/GC-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "JVM 运行时内存布局",
          "slug": "jvm-运行时内存布局"
        },
        {
          "level": 3,
          "title": "Question 1：JVM 运行时内存布局分为哪些区域？它们之间又是怎样的关系？",
          "slug": "question-1-jvm-运行时内存布局分为哪些区域-它们之间又是怎样的关系"
        },
        {
          "level": 3,
          "title": "Question 2：哪些区域会产生 OOM？",
          "slug": "question-2-哪些区域会产生-oom"
        },
        {
          "level": 3,
          "title": "Question 3：总体来看，JVM 把内存划分为“栈(stack)”与“堆(heap)”两大类，为何要这样设计？",
          "slug": "question-3-总体来看-jvm-把内存划分为-栈-stack-与-堆-heap-两大类-为何要这样设计"
        },
        {
          "level": 3,
          "title": "Question 4：如果 A 引用 B，B 又引用 A（发生了循环引用问题），这 2 个对象是否能被 GC回收？",
          "slug": "question-4-如果-a-引用-b-b-又引用-a-发生了循环引用问题-这-2-个对象是否能被-gc回收"
        },
        {
          "level": 3,
          "title": "Question 5：说一说常用的 GC 算法及其优缺点",
          "slug": "question-5-说一说常用的-gc-算法及其优缺点"
        },
        {
          "level": 3,
          "title": "Question 6：请以 Hotspot 为例，分析一下 GC 全过程（并指出其中 GC 算法的综合运用）。",
          "slug": "question-6-请以-hotspot-为例-分析一下-gc-全过程-并指出其中-gc-算法的综合运用-。"
        },
        {
          "level": 2,
          "title": "8 种垃圾回收器",
          "slug": "_8-种垃圾回收器"
        },
        {
          "level": 3,
          "title": "Question 7：CMS 收集器工作的整个流程主要分为哪几个阶段？",
          "slug": "question-7-cms-收集器工作的整个流程主要分为哪几个阶段"
        },
        {
          "level": 3,
          "title": "Question 8：G1 垃圾收集器的原理是什么？",
          "slug": "question-8-g1-垃圾收集器的原理是什么"
        },
        {
          "level": 3,
          "title": "Question 9：G1 垃圾收集器的运行过程，分为哪几个阶段？",
          "slug": "question-9-g1-垃圾收集器的运行过程-分为哪几个阶段"
        },
        {
          "level": 3,
          "title": "Question 10：ZGC 在 G1 基础上做了哪些改进？",
          "slug": "question-10-zgc-在-g1-基础上做了哪些改进"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/MyBatis-FAQ.html",
      "relativePath": "q&a/interview/MyBatis-FAQ.md",
      "key": "v-9cd958e4",
      "path": "/q&a/interview/MyBatis-FAQ.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/JVM-FAQ.html",
      "relativePath": "q&a/interview/JVM-FAQ.md",
      "key": "v-f5d3fd64",
      "path": "/q&a/interview/JVM-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "类加载子系统",
          "slug": "类加载子系统"
        },
        {
          "level": 3,
          "title": "类加载机制？类加载过程",
          "slug": "类加载机制-类加载过程"
        },
        {
          "level": 3,
          "title": "什么是类加载器，类加载器有哪些？这些类加载器都加载哪些文件？",
          "slug": "什么是类加载器-类加载器有哪些-这些类加载器都加载哪些文件"
        },
        {
          "level": 3,
          "title": "多线程的情况下，类的加载为什么不会出现重复加载的情况？",
          "slug": "多线程的情况下-类的加载为什么不会出现重复加载的情况"
        },
        {
          "level": 3,
          "title": "什么是双亲委派机制？它有啥优势？可以打破这种机制吗？",
          "slug": "什么是双亲委派机制-它有啥优势-可以打破这种机制吗"
        },
        {
          "level": 3,
          "title": "自定义了一个String，那么会加载哪个String？",
          "slug": "自定义了一个string-那么会加载哪个string"
        },
        {
          "level": 3,
          "title": "简单说说你了解的类加载器，可以打破双亲委派么，怎么打破。",
          "slug": "简单说说你了解的类加载器-可以打破双亲委派么-怎么打破。"
        },
        {
          "level": 2,
          "title": "内存管理",
          "slug": "内存管理"
        },
        {
          "level": 3,
          "title": "Java内存结构？",
          "slug": "java内存结构"
        },
        {
          "level": 3,
          "title": "内存泄露和内存溢出的区别？",
          "slug": "内存泄露和内存溢出的区别"
        },
        {
          "level": 3,
          "title": "内存泄漏时，如何定位问题代码",
          "slug": "内存泄漏时-如何定位问题代码"
        },
        {
          "level": 3,
          "title": "什么情况下会发生栈内存溢出?",
          "slug": "什么情况下会发生栈内存溢出"
        },
        {
          "level": 3,
          "title": "JVM内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为Eden和Survivor。",
          "slug": "jvm内存为什么要分成新生代-老年代-持久代。新生代中为什么要分为eden和survivor。"
        },
        {
          "level": 2,
          "title": "GC",
          "slug": "gc"
        },
        {
          "level": 3,
          "title": "1. JVM 垃圾回收的时候如何确定垃圾？ 你知道什么是 GC Roots 吗？GC Roots 如何确定，那些对象可以作为 GC Roots?",
          "slug": "_1-jvm-垃圾回收的时候如何确定垃圾-你知道什么是-gc-roots-吗-gc-roots-如何确定-那些对象可以作为-gc-roots"
        },
        {
          "level": 3,
          "title": "JVM中一次完整的GC流程是怎样的，对象如何晋升到老年代",
          "slug": "jvm中一次完整的gc流程是怎样的-对象如何晋升到老年代"
        },
        {
          "level": 3,
          "title": "你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms和G1，包括原理，流程，优缺点。",
          "slug": "你知道哪几种垃圾收集器-各自的优缺点-重点讲下cms和g1-包括原理-流程-优缺点。"
        },
        {
          "level": 3,
          "title": "System.gc() 和 Runtime.gc() 会做什么事情",
          "slug": "system-gc-和-runtime-gc-会做什么事情"
        },
        {
          "level": 3,
          "title": "gc引用计数法的缺点，除了循环引用，说一到两个",
          "slug": "gc引用计数法的缺点-除了循环引用-说一到两个"
        },
        {
          "level": 3,
          "title": "说说你知道的几种主要的JVM参数",
          "slug": "说说你知道的几种主要的jvm参数"
        },
        {
          "level": 3,
          "title": "怎么打出线程栈信息。",
          "slug": "怎么打出线程栈信息。"
        },
        {
          "level": 2,
          "title": "调优",
          "slug": "调优"
        },
        {
          "level": 2,
          "title": "2.你说你做过 JVM 调优和参数配置，请问如何盘点查看 JVM 系统默认值",
          "slug": "_2-你说你做过-jvm-调优和参数配置-请问如何盘点查看-jvm-系统默认值"
        },
        {
          "level": 3,
          "title": "JVM参数类型",
          "slug": "jvm参数类型"
        },
        {
          "level": 3,
          "title": "盘点家底查看JVM默认值",
          "slug": "盘点家底查看jvm默认值"
        },
        {
          "level": 2,
          "title": "3. 你平时工作用过的 JVM 常用基本配置参数有哪些？",
          "slug": "_3-你平时工作用过的-jvm-常用基本配置参数有哪些"
        },
        {
          "level": 3,
          "title": "4. 强引用、软引用、弱引用、虚引用分别是什么？",
          "slug": "_4-强引用、软引用、弱引用、虚引用分别是什么"
        },
        {
          "level": 2,
          "title": "5. 请谈谈你对 OOM 的认识",
          "slug": "_5-请谈谈你对-oom-的认识"
        },
        {
          "level": 2,
          "title": "6. GC垃圾回收算法和垃圾收集器的关系？分别是什么，请你谈谈？",
          "slug": "_6-gc垃圾回收算法和垃圾收集器的关系-分别是什么-请你谈谈"
        },
        {
          "level": 3,
          "title": "7.怎么查看服务器默认的垃圾收集器是哪个？生产上如何配置垃圾收集器？谈谈你对垃圾收集器的理解？",
          "slug": "_7-怎么查看服务器默认的垃圾收集器是哪个-生产上如何配置垃圾收集器-谈谈你对垃圾收集器的理解"
        },
        {
          "level": 3,
          "title": "8.G1 垃圾收集器？",
          "slug": "_8-g1-垃圾收集器"
        },
        {
          "level": 3,
          "title": "9.生产环境服务器变慢，诊断思路和性能评估谈谈？",
          "slug": "_9-生产环境服务器变慢-诊断思路和性能评估谈谈"
        },
        {
          "level": 3,
          "title": "10.假设生产环境出现 CPU占用过高，请谈谈你的分析思路和定位",
          "slug": "_10-假设生产环境出现-cpu占用过高-请谈谈你的分析思路和定位"
        },
        {
          "level": 3,
          "title": "11. 对于JDK 自带的JVM 监控和性能分析工具用过哪些？你是怎么用的？",
          "slug": "_11-对于jdk-自带的jvm-监控和性能分析工具用过哪些-你是怎么用的"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/Kafka-FAQ.html",
      "relativePath": "q&a/interview/Kafka-FAQ.md",
      "key": "v-66438e2e",
      "path": "/q&a/interview/Kafka-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "1、Kafka 都有哪些特点？",
          "slug": "_1、kafka-都有哪些特点"
        },
        {
          "level": 2,
          "title": "2、请简述下你在哪些场景下会选择 Kafka？",
          "slug": "_2、请简述下你在哪些场景下会选择-kafka"
        },
        {
          "level": 2,
          "title": "3、 Kafka 的设计架构你知道吗？",
          "slug": "_3、-kafka-的设计架构你知道吗"
        },
        {
          "level": 2,
          "title": "4、Kafka 分区的目的？",
          "slug": "_4、kafka-分区的目的"
        },
        {
          "level": 2,
          "title": "5、Kafka 高可靠性实现",
          "slug": "_5、kafka-高可靠性实现"
        },
        {
          "level": 2,
          "title": "5、你知道 Kafka 是如何做到消息的有序性？",
          "slug": "_5、你知道-kafka-是如何做到消息的有序性"
        },
        {
          "level": 2,
          "title": "kafka 全局一致性如何保证",
          "slug": "kafka-全局一致性如何保证"
        },
        {
          "level": 2,
          "title": "7、请谈一谈 Kafka 数据一致性原理",
          "slug": "_7、请谈一谈-kafka-数据一致性原理"
        },
        {
          "level": 2,
          "title": "8、ISR、OSR、AR 是什么？",
          "slug": "_8、isr、osr、ar-是什么"
        },
        {
          "level": 2,
          "title": "9、LEO、HW、LSO、LW等分别代表什么",
          "slug": "_9、leo、hw、lso、lw等分别代表什么"
        },
        {
          "level": 2,
          "title": "10、Kafka 在什么情况下会出现消息丢失？",
          "slug": "_10、kafka-在什么情况下会出现消息丢失"
        },
        {
          "level": 2,
          "title": "11、怎么尽可能保证 Kafka 的可靠性",
          "slug": "_11、怎么尽可能保证-kafka-的可靠性"
        },
        {
          "level": 2,
          "title": "12、消费者和消费者组有什么关系？",
          "slug": "_12、消费者和消费者组有什么关系"
        },
        {
          "level": 2,
          "title": "13、Kafka 的每个分区只能被一个消费者线程，如何做到多个线程同时消费一个分区？",
          "slug": "_13、kafka-的每个分区只能被一个消费者线程-如何做到多个线程同时消费一个分区"
        },
        {
          "level": 2,
          "title": "14、数据传输的事务有几种？",
          "slug": "_14、数据传输的事务有几种"
        },
        {
          "level": 2,
          "title": "15、Kafka 消费者是否可以消费指定分区消息？",
          "slug": "_15、kafka-消费者是否可以消费指定分区消息"
        },
        {
          "level": 2,
          "title": "16、Kafka消息是采用Pull模式，还是Push模式？",
          "slug": "_16、kafka消息是采用pull模式-还是push模式"
        },
        {
          "level": 2,
          "title": "19、Kafka 高效文件存储设计特点",
          "slug": "_19、kafka-高效文件存储设计特点"
        },
        {
          "level": 2,
          "title": "20、Kafka创建Topic时如何将分区放置到不同的Broker中",
          "slug": "_20、kafka创建topic时如何将分区放置到不同的broker中"
        },
        {
          "level": 2,
          "title": "21、Kafka新建的分区会在哪个目录下创建",
          "slug": "_21、kafka新建的分区会在哪个目录下创建"
        },
        {
          "level": 2,
          "title": "22、谈一谈 Kafka 的再均衡",
          "slug": "_22、谈一谈-kafka-的再均衡"
        },
        {
          "level": 2,
          "title": "22、Kafka 为什么能那么快 | Kafka高效读写数据的原因据的原因 | 吞吐量大的原因？",
          "slug": "_22、kafka-为什么能那么快-kafka高效读写数据的原因据的原因-吞吐量大的原因"
        },
        {
          "level": 2,
          "title": "23、如何保证消息不被重复消费？",
          "slug": "_23、如何保证消息不被重复消费"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/",
      "relativePath": "q&a/interview/README.md",
      "key": "v-24b7ce22",
      "path": "/q&a/interview/",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "JDK和JRE、 JVM",
      "frontmatter": {},
      "regularPath": "/q&a/interview/Java-Basics-FAQ.html",
      "relativePath": "q&a/interview/Java-Basics-FAQ.md",
      "key": "v-1f9f266e",
      "path": "/q&a/interview/Java-Basics-FAQ.html",
      "headers": [
        {
          "level": 3,
          "title": "JDK和JRE、 JVM",
          "slug": "jdk和jre、-jvm"
        },
        {
          "level": 3,
          "title": "和对象的区别",
          "slug": "和对象的区别"
        },
        {
          "level": 3,
          "title": "构造方法和普通方法的区别",
          "slug": "构造方法和普通方法的区别"
        },
        {
          "level": 3,
          "title": "作用域public，private，protected，以及不写时的区别",
          "slug": "作用域public-private-protected-以及不写时的区别"
        },
        {
          "level": 3,
          "title": "Integer与 int 的区别",
          "slug": "integer与-int-的区别"
        },
        {
          "level": 3,
          "title": "&和&&的区别",
          "slug": "和-的区别"
        },
        {
          "level": 3,
          "title": "全局变量、局部变量、静态变量和实例变量的区别",
          "slug": "全局变量、局部变量、静态变量和实例变量的区别"
        },
        {
          "level": 3,
          "title": "类变量与实例变量的区别",
          "slug": "类变量与实例变量的区别"
        },
        {
          "level": 3,
          "title": "\"==\"和equals区别",
          "slug": "和equals区别"
        },
        {
          "level": 3,
          "title": "String s = new String(\"xyz\");创建了几个String Object? 二者之间有什么区别？",
          "slug": "string-s-new-string-xyz-创建了几个string-object-二者之间有什么区别"
        },
        {
          "level": 3,
          "title": "String 和StringBuffer的区别",
          "slug": "string-和stringbuffer的区别"
        },
        {
          "level": 3,
          "title": "final, finally, finalize的区别",
          "slug": "final-finally-finalize的区别"
        },
        {
          "level": 3,
          "title": "Java中finally语句块的深度解析(try catch finally的执行顺序)",
          "slug": "java中finally语句块的深度解析-try-catch-finally的执行顺序"
        },
        {
          "level": 3,
          "title": "Overload和Override的区别",
          "slug": "overload和override的区别"
        },
        {
          "level": 3,
          "title": "ceil、floor、round的区别",
          "slug": "ceil、floor、round的区别"
        },
        {
          "level": 3,
          "title": "抽象类和接口的对比",
          "slug": "抽象类和接口的对比"
        },
        {
          "level": 3,
          "title": "Java中的异常处理机制的简单原理和应用",
          "slug": "java中的异常处理机制的简单原理和应用"
        },
        {
          "level": 3,
          "title": "什么是java序列化，如何实现java序列化？或者请解释Serializable接口的作用",
          "slug": "什么是java序列化-如何实现java序列化-或者请解释serializable接口的作用"
        },
        {
          "level": 3,
          "title": "java中有几种类型的流？JDK为每种类型的流提供了一些抽象类以供继承，请说出他们分别是哪些类？",
          "slug": "java中有几种类型的流-jdk为每种类型的流提供了一些抽象类以供继承-请说出他们分别是哪些类"
        },
        {
          "level": 3,
          "title": "字节流与字符流的区别",
          "slug": "字节流与字符流的区别"
        },
        {
          "level": 3,
          "title": "获得一个类的类对象有哪些方式？",
          "slug": "获得一个类的类对象有哪些方式"
        },
        {
          "level": 3,
          "title": "如何通过反射创建对象？",
          "slug": "如何通过反射创建对象"
        },
        {
          "level": 3,
          "title": "break ,continue ,return 的区别及作用",
          "slug": "break-continue-return-的区别及作用"
        },
        {
          "level": 3,
          "title": "hashCode 与 equals (重要)",
          "slug": "hashcode-与-equals-重要"
        },
        {
          "level": 3,
          "title": "为什么重写了equals()，还要重写hashCode()？",
          "slug": "为什么重写了equals-还要重写hashcode"
        },
        {
          "level": 3,
          "title": "BIO,NIO,AIO 有什么区别?",
          "slug": "bio-nio-aio-有什么区别"
        },
        {
          "level": 2,
          "title": "反射",
          "slug": "反射"
        },
        {
          "level": 3,
          "title": "什么是反射机制？",
          "slug": "什么是反射机制"
        },
        {
          "level": 3,
          "title": "反射机制优缺点",
          "slug": "反射机制优缺点"
        },
        {
          "level": 3,
          "title": "反射机制的应用场景有哪些？",
          "slug": "反射机制的应用场景有哪些"
        },
        {
          "level": 3,
          "title": "Java获取反射的三种方法",
          "slug": "java获取反射的三种方法"
        },
        {
          "level": 3,
          "title": "反射的原理",
          "slug": "反射的原理"
        },
        {
          "level": 3,
          "title": "注解的原理",
          "slug": "注解的原理"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "MySQL 三万字精华总结 + 面试100 问，和面试官扯皮绰绰有余",
      "frontmatter": {},
      "regularPath": "/q&a/interview/MySQL-FAQ.html",
      "relativePath": "q&a/interview/MySQL-FAQ.md",
      "key": "v-b6a750a4",
      "path": "/q&a/interview/MySQL-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "一、MySQL架构",
          "slug": "一、mysql架构"
        },
        {
          "level": 2,
          "title": "二、存储引擎",
          "slug": "二、存储引擎"
        },
        {
          "level": 3,
          "title": "查看存储引擎",
          "slug": "查看存储引擎"
        },
        {
          "level": 3,
          "title": "设置存储引擎",
          "slug": "设置存储引擎"
        },
        {
          "level": 3,
          "title": "存储引擎对比",
          "slug": "存储引擎对比"
        },
        {
          "level": 2,
          "title": "三、数据类型",
          "slug": "三、数据类型"
        },
        {
          "level": 2,
          "title": "四、索引",
          "slug": "四、索引"
        },
        {
          "level": 3,
          "title": "基本语法：",
          "slug": "基本语法"
        },
        {
          "level": 3,
          "title": "优势",
          "slug": "优势"
        },
        {
          "level": 3,
          "title": "劣势",
          "slug": "劣势"
        },
        {
          "level": 3,
          "title": "MySQL索引分类",
          "slug": "mysql索引分类"
        },
        {
          "level": 3,
          "title": "MySQL索引结构",
          "slug": "mysql索引结构"
        },
        {
          "level": 3,
          "title": "哪些情况需要创建索引",
          "slug": "哪些情况需要创建索引"
        },
        {
          "level": 3,
          "title": "哪些情况不要创建索引",
          "slug": "哪些情况不要创建索引"
        },
        {
          "level": 3,
          "title": "MySQL高效索引",
          "slug": "mysql高效索引"
        },
        {
          "level": 2,
          "title": "五、MySQL查询",
          "slug": "五、mysql查询"
        },
        {
          "level": 3,
          "title": "MySQL中 in和 exists 的区别？",
          "slug": "mysql中-in和-exists-的区别"
        },
        {
          "level": 3,
          "title": "SQL执行顺序",
          "slug": "sql执行顺序"
        },
        {
          "level": 3,
          "title": "Join图",
          "slug": "join图"
        },
        {
          "level": 2,
          "title": "六、MySQL 事务",
          "slug": "六、mysql-事务"
        },
        {
          "level": 3,
          "title": "ACID — 事务基本要素",
          "slug": "acid-事务基本要素"
        },
        {
          "level": 3,
          "title": "事务隔离级别",
          "slug": "事务隔离级别"
        },
        {
          "level": 3,
          "title": "MVCC 多版本并发控制",
          "slug": "mvcc-多版本并发控制"
        },
        {
          "level": 3,
          "title": "事务日志",
          "slug": "事务日志"
        },
        {
          "level": 3,
          "title": "事务的实现",
          "slug": "事务的实现"
        },
        {
          "level": 3,
          "title": "MySQL对分布式事务的支持",
          "slug": "mysql对分布式事务的支持"
        },
        {
          "level": 2,
          "title": "七、MySQL 锁机制",
          "slug": "七、mysql-锁机制"
        },
        {
          "level": 3,
          "title": "锁的分类",
          "slug": "锁的分类"
        },
        {
          "level": 3,
          "title": "MyISAM 表锁",
          "slug": "myisam-表锁"
        },
        {
          "level": 3,
          "title": "InnoDB 行锁",
          "slug": "innodb-行锁"
        },
        {
          "level": 3,
          "title": "死锁",
          "slug": "死锁"
        },
        {
          "level": 2,
          "title": "八、MySQL 调优",
          "slug": "八、mysql-调优"
        },
        {
          "level": 3,
          "title": "影响  mysql 的性能因素",
          "slug": "影响-mysql-的性能因素"
        },
        {
          "level": 3,
          "title": "性能分析",
          "slug": "性能分析"
        },
        {
          "level": 3,
          "title": "性能优化",
          "slug": "性能优化"
        },
        {
          "level": 3,
          "title": "说一下大表的优化方案",
          "slug": "说一下大表的优化方案"
        },
        {
          "level": 2,
          "title": "九、分区、分表、分库",
          "slug": "九、分区、分表、分库"
        },
        {
          "level": 3,
          "title": "MySQL分区",
          "slug": "mysql分区"
        },
        {
          "level": 3,
          "title": "MySQL分表",
          "slug": "mysql分表"
        },
        {
          "level": 3,
          "title": "MySQL分库",
          "slug": "mysql分库"
        },
        {
          "level": 2,
          "title": "十、主从复制",
          "slug": "十、主从复制"
        },
        {
          "level": 3,
          "title": "复制的基本原理",
          "slug": "复制的基本原理"
        },
        {
          "level": 3,
          "title": "复制的基本原则",
          "slug": "复制的基本原则"
        },
        {
          "level": 3,
          "title": "复制的最大问题",
          "slug": "复制的最大问题"
        },
        {
          "level": 2,
          "title": "十一、其他问题",
          "slug": "十一、其他问题"
        },
        {
          "level": 3,
          "title": "说一说三个范式",
          "slug": "说一说三个范式"
        },
        {
          "level": 3,
          "title": "百万级别或以上的数据如何删除",
          "slug": "百万级别或以上的数据如何删除"
        },
        {
          "level": 3,
          "title": "limit 100000 加载很慢的话，你是怎么解决的呢？",
          "slug": "limit-100000-加载很慢的话-你是怎么解决的呢"
        },
        {
          "level": 3,
          "title": "在高并发情况下，如何做到安全的修改同一行数据？",
          "slug": "在高并发情况下-如何做到安全的修改同一行数据"
        },
        {
          "level": 2,
          "title": "参考与感谢：",
          "slug": "参考与感谢"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/interview/Network-FAQ.html",
      "relativePath": "q&a/interview/Network-FAQ.md",
      "key": "v-7062f9ae",
      "path": "/q&a/interview/Network-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "一、计算机网络",
          "slug": "一、计算机网络"
        },
        {
          "level": 3,
          "title": "通信协议",
          "slug": "通信协议"
        },
        {
          "level": 3,
          "title": "网络模型",
          "slug": "网络模型"
        },
        {
          "level": 2,
          "title": "二、TCP/IP",
          "slug": "二、tcp-ip"
        },
        {
          "level": 3,
          "title": "TCP/IP 与 HTTP",
          "slug": "tcp-ip-与-http"
        },
        {
          "level": 3,
          "title": "TCP 与 UDP",
          "slug": "tcp-与-udp"
        },
        {
          "level": 3,
          "title": "TCP连接的建立与终止",
          "slug": "tcp连接的建立与终止"
        },
        {
          "level": 3,
          "title": "TCP协议如何来保证传输的可靠性",
          "slug": "tcp协议如何来保证传输的可靠性"
        },
        {
          "level": 3,
          "title": "滑动窗口机制",
          "slug": "滑动窗口机制"
        },
        {
          "level": 3,
          "title": "TCP的拥塞处理",
          "slug": "tcp的拥塞处理"
        },
        {
          "level": 3,
          "title": "服务器出现了大量CLOSE_WAIT状态如何解决",
          "slug": "服务器出现了大量close-wait状态如何解决"
        },
        {
          "level": 3,
          "title": "讲一讲SYN超时，洪泛攻击，以及解决策略",
          "slug": "讲一讲syn超时-洪泛攻击-以及解决策略"
        },
        {
          "level": 2,
          "title": "三、HTTP",
          "slug": "三、http"
        },
        {
          "level": 3,
          "title": "URI 和 URL",
          "slug": "uri-和-url"
        },
        {
          "level": 3,
          "title": "HTTP消息的结构",
          "slug": "http消息的结构"
        },
        {
          "level": 3,
          "title": "方法",
          "slug": "方法"
        },
        {
          "level": 3,
          "title": "GET与POST的区别",
          "slug": "get与post的区别"
        },
        {
          "level": 3,
          "title": "状态码",
          "slug": "状态码"
        },
        {
          "level": 3,
          "title": "协议版本",
          "slug": "协议版本"
        },
        {
          "level": 2,
          "title": "四、HTTPS",
          "slug": "四、https"
        },
        {
          "level": 3,
          "title": "HTTP 和 HTTPS 对比",
          "slug": "http-和-https-对比"
        },
        {
          "level": 3,
          "title": "对称加密与非对称加密",
          "slug": "对称加密与非对称加密"
        },
        {
          "level": 3,
          "title": "SSL/TSL",
          "slug": "ssl-tsl"
        },
        {
          "level": 3,
          "title": "证书",
          "slug": "证书"
        },
        {
          "level": 3,
          "title": "HTTPS的工作原理",
          "slug": "https的工作原理"
        },
        {
          "level": 3,
          "title": "HTTPS的优点",
          "slug": "https的优点"
        },
        {
          "level": 3,
          "title": "HTTPS的缺点",
          "slug": "https的缺点"
        },
        {
          "level": 3,
          "title": "HTTP 切换到 HTTPS",
          "slug": "http-切换到-https"
        },
        {
          "level": 3,
          "title": "什么是Cookie，Cookie的使用过程是怎么样的？",
          "slug": "什么是cookie-cookie的使用过程是怎么样的"
        },
        {
          "level": 3,
          "title": "什么是session，有哪些实现session的机制？",
          "slug": "什么是session-有哪些实现session的机制"
        },
        {
          "level": 3,
          "title": "session和cookie有什么区别",
          "slug": "session和cookie有什么区别"
        },
        {
          "level": 2,
          "title": "Other FAQ",
          "slug": "other-faq"
        },
        {
          "level": 3,
          "title": "从输入网址到获得页面的过程",
          "slug": "从输入网址到获得页面的过程"
        },
        {
          "level": 3,
          "title": "XSS 攻击",
          "slug": "xss-攻击"
        },
        {
          "level": 3,
          "title": "IP地址的分类",
          "slug": "ip地址的分类"
        },
        {
          "level": 2,
          "title": "参考与感谢",
          "slug": "参考与感谢"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "一、Redis 基础问题",
      "frontmatter": {},
      "regularPath": "/q&a/interview/Redis-FAQ.html",
      "relativePath": "q&a/interview/Redis-FAQ.md",
      "key": "v-f947d164",
      "path": "/q&a/interview/Redis-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "一、Redis 基础问题",
          "slug": "一、redis-基础问题"
        },
        {
          "level": 3,
          "title": "Redis是什么",
          "slug": "redis是什么"
        },
        {
          "level": 3,
          "title": "Redis 都支持哪些数据类型",
          "slug": "redis-都支持哪些数据类型"
        },
        {
          "level": 3,
          "title": "那你能说说这些数据类型的使用指令吗？",
          "slug": "那你能说说这些数据类型的使用指令吗"
        },
        {
          "level": 3,
          "title": "为什么要用缓存？为什么使用 Redis？",
          "slug": "为什么要用缓存-为什么使用-redis"
        },
        {
          "level": 3,
          "title": "这些都会，那你能说说 Redis 使用场景不，你们项目中是怎么用的",
          "slug": "这些都会-那你能说说-redis-使用场景不-你们项目中是怎么用的"
        },
        {
          "level": 3,
          "title": "用缓存，肯定是因为他快，那 Redis 为什么这么快",
          "slug": "用缓存-肯定是因为他快-那-redis-为什么这么快"
        },
        {
          "level": 3,
          "title": "Redis 属于单线程还是多线程？",
          "slug": "redis-属于单线程还是多线程"
        },
        {
          "level": 3,
          "title": "为什么早期版本的 Redis 选择单线程？",
          "slug": "为什么早期版本的-redis-选择单线程"
        },
        {
          "level": 3,
          "title": "Redis 和 Memcached 的区别",
          "slug": "redis-和-memcached-的区别"
        },
        {
          "level": 3,
          "title": "Redis 线程模型",
          "slug": "redis-线程模型"
        },
        {
          "level": 3,
          "title": "Redis 内存模型",
          "slug": "redis-内存模型"
        },
        {
          "level": 3,
          "title": "最后总结下 Redis 优缺点",
          "slug": "最后总结下-redis-优缺点"
        },
        {
          "level": 2,
          "title": "二、Redis 数据结构问题",
          "slug": "二、redis-数据结构问题"
        },
        {
          "level": 3,
          "title": "String 是如何实现的",
          "slug": "string-是如何实现的"
        },
        {
          "level": 3,
          "title": "Redis 的 SDS 和 C 中字符串相比有什么优势？",
          "slug": "redis-的-sds-和-c-中字符串相比有什么优势"
        },
        {
          "level": 3,
          "title": "说说 List",
          "slug": "说说-list"
        },
        {
          "level": 3,
          "title": "字典Hash是如何实现的？Rehash 了解吗？",
          "slug": "字典hash是如何实现的-rehash-了解吗"
        },
        {
          "level": 3,
          "title": "说说 Zset 吧",
          "slug": "说说-zset-吧"
        },
        {
          "level": 3,
          "title": "跳跃表是如何实现的？原理？",
          "slug": "跳跃表是如何实现的-原理"
        },
        {
          "level": 3,
          "title": "压缩列表了解吗？",
          "slug": "压缩列表了解吗"
        },
        {
          "level": 3,
          "title": "快速列表 quicklist 了解吗？",
          "slug": "快速列表-quicklist-了解吗"
        },
        {
          "level": 3,
          "title": "除了5种基本数据类型，还知道其他数据结构不",
          "slug": "除了5种基本数据类型-还知道其他数据结构不"
        },
        {
          "level": 2,
          "title": "三、Redis持久化问题",
          "slug": "三、redis持久化问题"
        },
        {
          "level": 3,
          "title": "你对redis的持久化机制了解吗？能讲一下吗？",
          "slug": "你对redis的持久化机制了解吗-能讲一下吗"
        },
        {
          "level": 3,
          "title": "解释一下持久化发生了什么",
          "slug": "解释一下持久化发生了什么"
        },
        {
          "level": 3,
          "title": "Redis 持久化的方式有哪写",
          "slug": "redis-持久化的方式有哪写"
        },
        {
          "level": 3,
          "title": "RDB 做快照时会阻塞线程吗？",
          "slug": "rdb-做快照时会阻塞线程吗"
        },
        {
          "level": 3,
          "title": "RDB 做快照的时候数据能修改吗？",
          "slug": "rdb-做快照的时候数据能修改吗"
        },
        {
          "level": 3,
          "title": "AOF 日志是如何实现的？",
          "slug": "aof-日志是如何实现的"
        },
        {
          "level": 3,
          "title": "RDB 和 AOF 各自有什么优缺点？",
          "slug": "rdb-和-aof-各自有什么优缺点"
        },
        {
          "level": 3,
          "title": "aof 如果文件越来愈大 怎么办？",
          "slug": "aof-如果文件越来愈大-怎么办"
        },
        {
          "level": 3,
          "title": "两种持久化方式如何选择？",
          "slug": "两种持久化方式如何选择"
        },
        {
          "level": 2,
          "title": "四、Redis事务问题",
          "slug": "四、redis事务问题"
        },
        {
          "level": 3,
          "title": "Redis事务的概念？",
          "slug": "redis事务的概念"
        },
        {
          "level": 3,
          "title": "Redis事务的三个阶段、三特性",
          "slug": "redis事务的三个阶段、三特性"
        },
        {
          "level": 3,
          "title": "Redis事务支持隔离性吗？",
          "slug": "redis事务支持隔离性吗"
        },
        {
          "level": 3,
          "title": "Redis事务保证原子性吗，支持回滚吗？",
          "slug": "redis事务保证原子性吗-支持回滚吗"
        },
        {
          "level": 2,
          "title": "五、Redis 集群问题",
          "slug": "五、redis-集群问题"
        },
        {
          "level": 3,
          "title": "主从同步了解吗？",
          "slug": "主从同步了解吗"
        },
        {
          "level": 3,
          "title": "那主从复制会存在哪些问题呢？",
          "slug": "那主从复制会存在哪些问题呢"
        },
        {
          "level": 3,
          "title": "什么是哨兵",
          "slug": "什么是哨兵"
        },
        {
          "level": 3,
          "title": "那你能说下哨兵的工作原理吗？",
          "slug": "那你能说下哨兵的工作原理吗"
        },
        {
          "level": 3,
          "title": "新的主服务器是怎样被挑选出来的？",
          "slug": "新的主服务器是怎样被挑选出来的"
        },
        {
          "level": 3,
          "title": "Redis 集群使用过吗？原理？",
          "slug": "redis-集群使用过吗-原理"
        },
        {
          "level": 3,
          "title": "集群中数据如何分区？",
          "slug": "集群中数据如何分区"
        },
        {
          "level": 3,
          "title": "节点之间的通信机制了解吗？",
          "slug": "节点之间的通信机制了解吗"
        },
        {
          "level": 3,
          "title": "集群数据如何存储的有了解吗？",
          "slug": "集群数据如何存储的有了解吗"
        },
        {
          "level": 3,
          "title": "Redis集群最大节点个数是多少？",
          "slug": "redis集群最大节点个数是多少"
        },
        {
          "level": 3,
          "title": "Redis集群会有写操作丢失吗？为什么？",
          "slug": "redis集群会有写操作丢失吗-为什么"
        },
        {
          "level": 3,
          "title": "Redis集群之间是如何复制的？",
          "slug": "redis集群之间是如何复制的"
        },
        {
          "level": 3,
          "title": "Redis是单线程的，如何提高多核CPU的利用率？",
          "slug": "redis是单线程的-如何提高多核cpu的利用率"
        },
        {
          "level": 3,
          "title": "为什么要做Redis分区？",
          "slug": "为什么要做redis分区"
        },
        {
          "level": 3,
          "title": "有哪些Redis分区实现方案？",
          "slug": "有哪些redis分区实现方案"
        },
        {
          "level": 3,
          "title": "Redis分区有什么缺点？",
          "slug": "redis分区有什么缺点"
        },
        {
          "level": 2,
          "title": "六、Redis 内存相关问题",
          "slug": "六、redis-内存相关问题"
        },
        {
          "level": 3,
          "title": "Redis 过期键的删除策略？",
          "slug": "redis-过期键的删除策略"
        },
        {
          "level": 3,
          "title": "Redis 的淘汰策略有哪些？",
          "slug": "redis-的淘汰策略有哪些"
        },
        {
          "level": 3,
          "title": "Redis 内存满了怎么办",
          "slug": "redis-内存满了怎么办"
        },
        {
          "level": 2,
          "title": "七、Redis 缓存异常问题",
          "slug": "七、redis-缓存异常问题"
        },
        {
          "level": 3,
          "title": "Redis常见性能问题和解决方案？",
          "slug": "redis常见性能问题和解决方案"
        },
        {
          "level": 3,
          "title": "如何保证缓存与数据库双写时的数据一致性？",
          "slug": "如何保证缓存与数据库双写时的数据一致性"
        },
        {
          "level": 3,
          "title": "使用缓存会出现什么问题？",
          "slug": "使用缓存会出现什么问题"
        },
        {
          "level": 2,
          "title": "八、分布式相关问题",
          "slug": "八、分布式相关问题"
        },
        {
          "level": 3,
          "title": "Redis实现分布式锁",
          "slug": "redis实现分布式锁"
        },
        {
          "level": 3,
          "title": "如何解决 Redis 的并发竞争 Key 问题",
          "slug": "如何解决-redis-的并发竞争-key-问题"
        },
        {
          "level": 3,
          "title": "分布式Redis是前期做还是后期规模上来了再做好？为什么？",
          "slug": "分布式redis是前期做还是后期规模上来了再做好-为什么"
        },
        {
          "level": 3,
          "title": "什么是 RedLock",
          "slug": "什么是-redlock"
        },
        {
          "level": 2,
          "title": "十、其他问题",
          "slug": "十、其他问题"
        },
        {
          "level": 3,
          "title": "使用Redis做过异步队列吗，是如何实现的",
          "slug": "使用redis做过异步队列吗-是如何实现的"
        },
        {
          "level": 3,
          "title": "Redis如何实现延时队列",
          "slug": "redis如何实现延时队列"
        },
        {
          "level": 3,
          "title": "Redis如何做内存优化？",
          "slug": "redis如何做内存优化"
        },
        {
          "level": 3,
          "title": "Redis—大key问题",
          "slug": "redis-大key问题"
        },
        {
          "level": 2,
          "title": "来源",
          "slug": "来源"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Tomcat简介",
      "frontmatter": {},
      "regularPath": "/q&a/interview/Tomcat-FAQ.html",
      "relativePath": "q&a/interview/Tomcat-FAQ.md",
      "key": "v-4066be9e",
      "path": "/q&a/interview/Tomcat-FAQ.html",
      "headers": [
        {
          "level": 3,
          "title": "Tomcat简介",
          "slug": "tomcat简介"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/self/",
      "relativePath": "q&a/self/README.md",
      "key": "v-15a0019d",
      "path": "/q&a/self/",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Spring 面试集",
      "frontmatter": {},
      "regularPath": "/q&a/interview/Spring-FAQ.html",
      "relativePath": "q&a/interview/Spring-FAQ.md",
      "key": "v-12515e68",
      "path": "/q&a/interview/Spring-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "一、一般问题",
          "slug": "一、一般问题"
        },
        {
          "level": 3,
          "title": "开发中主要使用 Spring 的什么技术 ?",
          "slug": "开发中主要使用-spring-的什么技术"
        },
        {
          "level": 3,
          "title": "Spring有哪些优点？",
          "slug": "spring有哪些优点"
        },
        {
          "level": 3,
          "title": "Spring模块",
          "slug": "spring模块"
        },
        {
          "level": 3,
          "title": "简述 AOP 和 IOC 概念",
          "slug": "简述-aop-和-ioc-概念"
        },
        {
          "level": 2,
          "title": "二、依赖注入",
          "slug": "二、依赖注入"
        },
        {
          "level": 3,
          "title": "什么是 Spring IOC 容器？",
          "slug": "什么是-spring-ioc-容器"
        },
        {
          "level": 3,
          "title": "什么是依赖注入？",
          "slug": "什么是依赖注入"
        },
        {
          "level": 3,
          "title": "Spring 中有多少种 IOC 容器？",
          "slug": "spring-中有多少种-ioc-容器"
        },
        {
          "level": 3,
          "title": "BeanFactory 和 ApplicationContext 区别",
          "slug": "beanfactory-和-applicationcontext-区别"
        },
        {
          "level": 3,
          "title": "列举 IoC 的一些好处",
          "slug": "列举-ioc-的一些好处"
        },
        {
          "level": 3,
          "title": "Spring IoC 的实现机制",
          "slug": "spring-ioc-的实现机制"
        },
        {
          "level": 2,
          "title": "三、Beans",
          "slug": "三、beans"
        },
        {
          "level": 3,
          "title": "什么是 Spring Beans？",
          "slug": "什么是-spring-beans"
        },
        {
          "level": 3,
          "title": "Spring 提供了哪些配置方式？",
          "slug": "spring-提供了哪些配置方式"
        },
        {
          "level": 3,
          "title": "Spring Bean的作用域？",
          "slug": "spring-bean的作用域"
        },
        {
          "level": 3,
          "title": "Spring bean 容器的生命周期是什么样的？",
          "slug": "spring-bean-容器的生命周期是什么样的"
        },
        {
          "level": 3,
          "title": "在 Spring 中如何配置 Bean?",
          "slug": "在-spring-中如何配置-bean"
        },
        {
          "level": 3,
          "title": "什么是 Spring 装配",
          "slug": "什么是-spring-装配"
        },
        {
          "level": 3,
          "title": "什么是bean自动装配？",
          "slug": "什么是bean自动装配"
        },
        {
          "level": 3,
          "title": "自动装配有什么局限？",
          "slug": "自动装配有什么局限"
        },
        {
          "level": 3,
          "title": "通过注解的方式配置bean | 什么是基于注解的容器配置",
          "slug": "通过注解的方式配置bean-什么是基于注解的容器配置"
        },
        {
          "level": 3,
          "title": "如何在 spring 中启动注解装配？",
          "slug": "如何在-spring-中启动注解装配"
        },
        {
          "level": 2,
          "title": "四、AOP",
          "slug": "四、aop"
        },
        {
          "level": 3,
          "title": "什么是 AOP？",
          "slug": "什么是-aop"
        },
        {
          "level": 3,
          "title": "AOP 术语",
          "slug": "aop-术语"
        },
        {
          "level": 3,
          "title": "有哪写类型的通知（Advice） | 用 AspectJ 注解声明切面",
          "slug": "有哪写类型的通知-advice-用-aspectj-注解声明切面"
        },
        {
          "level": 3,
          "title": "AOP 有哪些实现方式？",
          "slug": "aop-有哪些实现方式"
        },
        {
          "level": 3,
          "title": "有哪些不同的AOP实现",
          "slug": "有哪些不同的aop实现"
        },
        {
          "level": 3,
          "title": "Spring AOP and AspectJ AOP 有什么区别？",
          "slug": "spring-aop-and-aspectj-aop-有什么区别"
        },
        {
          "level": 2,
          "title": "五、数据访问",
          "slug": "五、数据访问"
        },
        {
          "level": 3,
          "title": "Spring对JDBC的支持",
          "slug": "spring对jdbc的支持"
        },
        {
          "level": 3,
          "title": "Spring 支持哪些 ORM 框架",
          "slug": "spring-支持哪些-orm-框架"
        },
        {
          "level": 2,
          "title": "六、事务",
          "slug": "六、事务"
        },
        {
          "level": 3,
          "title": "Spring 中的事务管理",
          "slug": "spring-中的事务管理"
        },
        {
          "level": 3,
          "title": "事务管理器",
          "slug": "事务管理器"
        },
        {
          "level": 3,
          "title": "用事务通知声明式地管理事务",
          "slug": "用事务通知声明式地管理事务"
        },
        {
          "level": 3,
          "title": "用 @Transactional 注解声明式地管理事务",
          "slug": "用-transactional-注解声明式地管理事务"
        },
        {
          "level": 3,
          "title": "事务传播属性",
          "slug": "事务传播属性"
        },
        {
          "level": 3,
          "title": "Spring 支持的事务隔离级别",
          "slug": "spring-支持的事务隔离级别"
        },
        {
          "level": 3,
          "title": "设置隔离事务属性",
          "slug": "设置隔离事务属性"
        },
        {
          "level": 3,
          "title": "设置回滚事务属性",
          "slug": "设置回滚事务属性"
        },
        {
          "level": 3,
          "title": "超时和只读属性",
          "slug": "超时和只读属性"
        },
        {
          "level": 2,
          "title": "七、MVC",
          "slug": "七、mvc"
        },
        {
          "level": 3,
          "title": "Spring MVC 框架有什么用？",
          "slug": "spring-mvc-框架有什么用"
        },
        {
          "level": 3,
          "title": "Spring MVC的优点",
          "slug": "spring-mvc的优点"
        },
        {
          "level": 3,
          "title": "Spring MVC 的运行流程 | DispatcherServlet描述",
          "slug": "spring-mvc-的运行流程-dispatcherservlet描述"
        },
        {
          "level": 3,
          "title": "Spring的Controller是单例的吗？多线程情况下Controller是线程安全吗？",
          "slug": "spring的controller是单例的吗-多线程情况下controller是线程安全吗"
        },
        {
          "level": 2,
          "title": "八、注解",
          "slug": "八、注解"
        },
        {
          "level": 3,
          "title": "什么是基于Java的Spring注解配置? 给一些注解的例子",
          "slug": "什么是基于java的spring注解配置-给一些注解的例子"
        },
        {
          "level": 3,
          "title": "怎样开启注解装配？",
          "slug": "怎样开启注解装配"
        },
        {
          "level": 3,
          "title": "Spring MVC 常用注解:",
          "slug": "spring-mvc-常用注解"
        },
        {
          "level": 3,
          "title": "@Component, @Controller, @Repository, @Service 有何区别？",
          "slug": "component-controller-repository-service-有何区别"
        },
        {
          "level": 3,
          "title": "@Required 注解有什么作用",
          "slug": "required-注解有什么作用"
        },
        {
          "level": 3,
          "title": "@Autowired 注解有什么作用",
          "slug": "autowired-注解有什么作用"
        },
        {
          "level": 3,
          "title": "@Autowired和@Resource之间的区别",
          "slug": "autowired和-resource之间的区别"
        },
        {
          "level": 3,
          "title": "@Qualifier 注解有什么作用",
          "slug": "qualifier-注解有什么作用"
        },
        {
          "level": 3,
          "title": "@RequestMapping 注解有什么用？",
          "slug": "requestmapping-注解有什么用"
        },
        {
          "level": 2,
          "title": "九、其他问题",
          "slug": "九、其他问题"
        },
        {
          "level": 3,
          "title": "Spring 框架中用到了哪些设计模式？",
          "slug": "spring-框架中用到了哪些设计模式"
        },
        {
          "level": 2,
          "title": "参考与来源",
          "slug": "参考与来源"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "概述",
      "frontmatter": {},
      "regularPath": "/q&a/interview/SpringBoot-FAQ.html",
      "relativePath": "q&a/interview/SpringBoot-FAQ.md",
      "key": "v-5ebb76a8",
      "path": "/q&a/interview/SpringBoot-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "概述",
          "slug": "概述"
        },
        {
          "level": 3,
          "title": "说说 Spring Boot 和 Spring 的关系",
          "slug": "说说-spring-boot-和-spring-的关系"
        },
        {
          "level": 3,
          "title": "什么是 Spring Boot？",
          "slug": "什么是-spring-boot"
        },
        {
          "level": 3,
          "title": "Spring Boot 有哪些优点？",
          "slug": "spring-boot-有哪些优点"
        },
        {
          "level": 3,
          "title": "Spring Boot 的核心注解是哪个？它主要由哪几个注解组成的？",
          "slug": "spring-boot-的核心注解是哪个-它主要由哪几个注解组成的"
        },
        {
          "level": 3,
          "title": "说说Spring Boot 启动原理",
          "slug": "说说spring-boot-启动原理"
        },
        {
          "level": 2,
          "title": "配置",
          "slug": "配置"
        },
        {
          "level": 3,
          "title": "什么是 JavaConfig？",
          "slug": "什么是-javaconfig"
        },
        {
          "level": 3,
          "title": "Spring Boot 自动配置原理是什么？",
          "slug": "spring-boot-自动配置原理是什么"
        },
        {
          "level": 3,
          "title": "你如何理解 Spring Boot 配置加载顺序？",
          "slug": "你如何理解-spring-boot-配置加载顺序"
        },
        {
          "level": 3,
          "title": "什么是 YAML？",
          "slug": "什么是-yaml"
        },
        {
          "level": 3,
          "title": "YAML 配置的优势在哪里 ?",
          "slug": "yaml-配置的优势在哪里"
        },
        {
          "level": 3,
          "title": "Spring Boot 是否可以使用 XML 配置 ?",
          "slug": "spring-boot-是否可以使用-xml-配置"
        },
        {
          "level": 3,
          "title": "spring boot 核心配置文件是什么？bootstrap.properties 和 application.properties 有何区别 ?",
          "slug": "spring-boot-核心配置文件是什么-bootstrap-properties-和-application-properties-有何区别"
        },
        {
          "level": 3,
          "title": "什么是 Spring Profiles？",
          "slug": "什么是-spring-profiles"
        },
        {
          "level": 3,
          "title": "如何在自定义端口上运行 Spring Boot 应用程序？",
          "slug": "如何在自定义端口上运行-spring-boot-应用程序"
        },
        {
          "level": 2,
          "title": "安全",
          "slug": "安全"
        },
        {
          "level": 3,
          "title": "如何实现 Spring Boot 应用程序的安全性？",
          "slug": "如何实现-spring-boot-应用程序的安全性"
        },
        {
          "level": 3,
          "title": "比较一下 Spring Security 和 Shiro 各自的优缺点 ?",
          "slug": "比较一下-spring-security-和-shiro-各自的优缺点"
        },
        {
          "level": 3,
          "title": "Spring Boot 中如何解决跨域问题 ?",
          "slug": "spring-boot-中如何解决跨域问题"
        },
        {
          "level": 3,
          "title": "什么是 CSRF 攻击？",
          "slug": "什么是-csrf-攻击"
        },
        {
          "level": 2,
          "title": "监视器",
          "slug": "监视器"
        },
        {
          "level": 3,
          "title": "Spring Boot 中的监视器是什么？",
          "slug": "spring-boot-中的监视器是什么"
        },
        {
          "level": 3,
          "title": "如何在 Spring Boot 中禁用 Actuator 端点安全性？",
          "slug": "如何在-spring-boot-中禁用-actuator-端点安全性"
        },
        {
          "level": 3,
          "title": "我们如何监视所有 Spring Boot 微服务？",
          "slug": "我们如何监视所有-spring-boot-微服务"
        },
        {
          "level": 2,
          "title": "整合第三方项目",
          "slug": "整合第三方项目"
        },
        {
          "level": 3,
          "title": "什么是 WebSockets？",
          "slug": "什么是-websockets"
        },
        {
          "level": 3,
          "title": "什么是 Spring Data ?",
          "slug": "什么是-spring-data"
        },
        {
          "level": 3,
          "title": "什么是 Spring Batch？",
          "slug": "什么是-spring-batch"
        },
        {
          "level": 3,
          "title": "什么是 FreeMarker 模板？",
          "slug": "什么是-freemarker-模板"
        },
        {
          "level": 3,
          "title": "如何集成 Spring Boot 和 ActiveMQ？",
          "slug": "如何集成-spring-boot-和-activemq"
        },
        {
          "level": 3,
          "title": "什么是 Apache Kafka？",
          "slug": "什么是-apache-kafka"
        },
        {
          "level": 3,
          "title": "什么是 Swagger？你用 Spring Boot 实现了它吗？",
          "slug": "什么是-swagger-你用-spring-boot-实现了它吗"
        },
        {
          "level": 3,
          "title": "前后端分离，如何维护接口文档 ?",
          "slug": "前后端分离-如何维护接口文档"
        },
        {
          "level": 2,
          "title": "其他",
          "slug": "其他"
        },
        {
          "level": 3,
          "title": "如何重新加载 Spring Boot 上的更改，而无需重新启动服务器？Spring Boot项目如何热部署？",
          "slug": "如何重新加载-spring-boot-上的更改-而无需重新启动服务器-spring-boot项目如何热部署"
        },
        {
          "level": 3,
          "title": "您使用了哪些 starter maven 依赖项？",
          "slug": "您使用了哪些-starter-maven-依赖项"
        },
        {
          "level": 3,
          "title": "Spring Boot 中的 starter 到底是什么 ?",
          "slug": "spring-boot-中的-starter-到底是什么"
        },
        {
          "level": 3,
          "title": "spring-boot-starter-parent 有什么用 ?",
          "slug": "spring-boot-starter-parent-有什么用"
        },
        {
          "level": 3,
          "title": "Spring Boot 打成的 jar 和普通的 jar 有什么区别 ?",
          "slug": "spring-boot-打成的-jar-和普通的-jar-有什么区别"
        },
        {
          "level": 3,
          "title": "运行 Spring Boot 有哪几种方式？",
          "slug": "运行-spring-boot-有哪几种方式"
        },
        {
          "level": 3,
          "title": "Spring Boot 需要独立的容器运行吗？",
          "slug": "spring-boot-需要独立的容器运行吗"
        },
        {
          "level": 3,
          "title": "开启 Spring Boot 特性有哪几种方式？",
          "slug": "开启-spring-boot-特性有哪几种方式"
        },
        {
          "level": 3,
          "title": "如何使用 Spring Boot 实现异常处理？",
          "slug": "如何使用-spring-boot-实现异常处理"
        },
        {
          "level": 3,
          "title": "如何使用 Spring Boot 实现分页和排序？",
          "slug": "如何使用-spring-boot-实现分页和排序"
        },
        {
          "level": 3,
          "title": "微服务中如何实现 session 共享 ?",
          "slug": "微服务中如何实现-session-共享"
        },
        {
          "level": 3,
          "title": "Spring Boot 中如何实现定时任务 ?",
          "slug": "spring-boot-中如何实现定时任务"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "谈下你对 Zookeeper 的认识？",
      "frontmatter": {},
      "regularPath": "/q&a/interview/ZooKeeper-FAQ.html",
      "relativePath": "q&a/interview/ZooKeeper-FAQ.md",
      "key": "v-7c7eefee",
      "path": "/q&a/interview/ZooKeeper-FAQ.html",
      "headers": [
        {
          "level": 2,
          "title": "谈下你对 Zookeeper 的认识？",
          "slug": "谈下你对-zookeeper-的认识"
        },
        {
          "level": 2,
          "title": "Zookeeper 都有哪些功能？",
          "slug": "zookeeper-都有哪些功能"
        },
        {
          "level": 2,
          "title": "zookeeper负载均衡和nginx负载均衡区别",
          "slug": "zookeeper负载均衡和nginx负载均衡区别"
        },
        {
          "level": 2,
          "title": "一致性协议2PC、3PC？",
          "slug": "一致性协议2pc、3pc"
        },
        {
          "level": 3,
          "title": "2PC",
          "slug": "_2pc"
        },
        {
          "level": 3,
          "title": "3PC",
          "slug": "_3pc"
        },
        {
          "level": 2,
          "title": "讲一讲 Paxos 算法？",
          "slug": "讲一讲-paxos-算法"
        },
        {
          "level": 2,
          "title": "谈下你对 ZAB 协议的了解？",
          "slug": "谈下你对-zab-协议的了解"
        },
        {
          "level": 2,
          "title": "Zookeeper 怎么保证主从节点的状态同步？或者说同步流程是什么样的",
          "slug": "zookeeper-怎么保证主从节点的状态同步-或者说同步流程是什么样的"
        },
        {
          "level": 2,
          "title": "集群中为什么要有主节点？",
          "slug": "集群中为什么要有主节点"
        },
        {
          "level": 2,
          "title": "集群中有 3 台服务器，其中一个节点宕机，这个时候 Zookeeper 还可以使用吗？",
          "slug": "集群中有-3-台服务器-其中一个节点宕机-这个时候-zookeeper-还可以使用吗"
        },
        {
          "level": 2,
          "title": "Zookeeper 宕机如何处理？",
          "slug": "zookeeper-宕机如何处理"
        },
        {
          "level": 2,
          "title": "说下四种类型的数据节点 Znode？",
          "slug": "说下四种类型的数据节点-znode"
        },
        {
          "level": 2,
          "title": "Zookeeper选举机制",
          "slug": "zookeeper选举机制"
        },
        {
          "level": 2,
          "title": "1. ZooKeeper 是什么？",
          "slug": "_1-zookeeper-是什么"
        },
        {
          "level": 2,
          "title": "2. ZooKeeper 提供了什么？",
          "slug": "_2-zookeeper-提供了什么"
        },
        {
          "level": 2,
          "title": "3. Zookeeper 文件系统",
          "slug": "_3-zookeeper-文件系统"
        },
        {
          "level": 2,
          "title": "4. Zookeeper 怎么保证主从节点的状态同步？",
          "slug": "_4-zookeeper-怎么保证主从节点的状态同步"
        },
        {
          "level": 2,
          "title": "5. 四种类型的数据节点 Znode",
          "slug": "_5-四种类型的数据节点-znode"
        },
        {
          "level": 2,
          "title": "6. Zookeeper Watcher 机制 – 数据变更通知",
          "slug": "_6-zookeeper-watcher-机制-数据变更通知"
        },
        {
          "level": 2,
          "title": "7. 客户端注册 Watcher 实现",
          "slug": "_7-客户端注册-watcher-实现"
        },
        {
          "level": 2,
          "title": "8. 服务端处理 Watcher 实现",
          "slug": "_8-服务端处理-watcher-实现"
        },
        {
          "level": 2,
          "title": "9. 客户端回调 Watcher",
          "slug": "_9-客户端回调-watcher"
        },
        {
          "level": 2,
          "title": "10. ACL 权限控制机制",
          "slug": "_10-acl-权限控制机制"
        },
        {
          "level": 2,
          "title": "11. Chroot 特性",
          "slug": "_11-chroot-特性"
        },
        {
          "level": 2,
          "title": "12. 会话管理",
          "slug": "_12-会话管理"
        },
        {
          "level": 2,
          "title": "13. 服务器角色",
          "slug": "_13-服务器角色"
        },
        {
          "level": 2,
          "title": "14. Zookeeper 下 Server 工作状态",
          "slug": "_14-zookeeper-下-server-工作状态"
        },
        {
          "level": 2,
          "title": "15. 数据同步",
          "slug": "_15-数据同步"
        },
        {
          "level": 2,
          "title": "16. zookeeper 是如何保证事务的顺序一致性的？",
          "slug": "_16-zookeeper-是如何保证事务的顺序一致性的"
        },
        {
          "level": 2,
          "title": "17. 分布式集群中为什么会有 Master主节点？",
          "slug": "_17-分布式集群中为什么会有-master主节点"
        },
        {
          "level": 2,
          "title": "18. zk 节点宕机如何处理？",
          "slug": "_18-zk-节点宕机如何处理"
        },
        {
          "level": 2,
          "title": "19. zookeeper 负载均衡和 nginx 负载均衡区别",
          "slug": "_19-zookeeper-负载均衡和-nginx-负载均衡区别"
        },
        {
          "level": 2,
          "title": "20. Zookeeper 有哪几种几种部署模式？",
          "slug": "_20-zookeeper-有哪几种几种部署模式"
        },
        {
          "level": 2,
          "title": "21. 集群最少要几台机器，集群规则是怎样的？集群中有 3 台服务器，其中一个节点宕机，这个时候 Zookeeper 还可以使用吗？",
          "slug": "_21-集群最少要几台机器-集群规则是怎样的-集群中有-3-台服务器-其中一个节点宕机-这个时候-zookeeper-还可以使用吗"
        },
        {
          "level": 2,
          "title": "22. 集群支持动态添加机器吗？",
          "slug": "_22-集群支持动态添加机器吗"
        },
        {
          "level": 2,
          "title": "23. Zookeeper 对节点的 watch 监听通知是永久的吗？为什么不是永久的?",
          "slug": "_23-zookeeper-对节点的-watch-监听通知是永久的吗-为什么不是永久的"
        },
        {
          "level": 2,
          "title": "24. Zookeeper 的 java 客户端都有哪些？",
          "slug": "_24-zookeeper-的-java-客户端都有哪些"
        },
        {
          "level": 2,
          "title": "25. chubby 是什么，和 zookeeper 比你怎么看？",
          "slug": "_25-chubby-是什么-和-zookeeper-比你怎么看"
        },
        {
          "level": 2,
          "title": "26. 说几个 zookeeper 常用的命令。",
          "slug": "_26-说几个-zookeeper-常用的命令。"
        },
        {
          "level": 2,
          "title": "27. ZAB 和 Paxos 算法的联系与区别？",
          "slug": "_27-zab-和-paxos-算法的联系与区别"
        },
        {
          "level": 2,
          "title": "28. Zookeeper 的典型应用场景",
          "slug": "_28-zookeeper-的典型应用场景"
        },
        {
          "level": 2,
          "title": "29. Zookeeper 都有哪些功能？",
          "slug": "_29-zookeeper-都有哪些功能"
        },
        {
          "level": 2,
          "title": "30. 说一下 Zookeeper 的通知机制？",
          "slug": "_30-说一下-zookeeper-的通知机制"
        },
        {
          "level": 2,
          "title": "31. Zookeeper 和 Dubbo 的关系？",
          "slug": "_31-zookeeper-和-dubbo-的关系"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "分布式锁",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/DistrLocks.html",
      "relativePath": "q&a/self/articles/DistrLocks.md",
      "key": "v-74666e7e",
      "path": "/q&a/self/articles/DistrLocks.html",
      "headers": [
        {
          "level": 3,
          "title": "锁分类",
          "slug": "锁分类"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "集合",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Collection.html",
      "relativePath": "q&a/self/articles/Collection.md",
      "key": "v-785f368c",
      "path": "/q&a/self/articles/Collection.html",
      "headers": [
        {
          "level": 3,
          "title": "一、整体知识",
          "slug": "一、整体知识"
        },
        {
          "level": 3,
          "title": "二、Set",
          "slug": "二、set"
        },
        {
          "level": 3,
          "title": "三、List",
          "slug": "三、list"
        },
        {
          "level": 3,
          "title": "四、Queue",
          "slug": "四、queue"
        },
        {
          "level": 3,
          "title": "五、Map",
          "slug": "五、map"
        },
        {
          "level": 3,
          "title": "六、CopyOn……",
          "slug": "六、copyon"
        },
        {
          "level": 3,
          "title": "七、集合的优雅姿势——Stream",
          "slug": "七、集合的优雅姿势-stream"
        },
        {
          "level": 3,
          "title": "八、选型",
          "slug": "八、选型"
        },
        {
          "level": 3,
          "title": "九、关键问题",
          "slug": "九、关键问题"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "高可用",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/HighAvailability.html",
      "relativePath": "q&a/self/articles/HighAvailability.md",
      "key": "v-9bfc7488",
      "path": "/q&a/self/articles/HighAvailability.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "计算机网络面试突击",
      "frontmatter": {},
      "regularPath": "/q&a/interview/networks-interview.html",
      "relativePath": "q&a/interview/networks-interview.md",
      "key": "v-7fccba46",
      "path": "/q&a/interview/networks-interview.html",
      "headers": [
        {
          "level": 2,
          "title": "一：各协议层以及它们的服务类型",
          "slug": "一-各协议层以及它们的服务类型"
        },
        {
          "level": 3,
          "title": "1. OSI 七层模型",
          "slug": "_1-osi-七层模型"
        },
        {
          "level": 3,
          "title": "2. TCP/IP 参考模型",
          "slug": "_2-tcp-ip-参考模型"
        },
        {
          "level": 3,
          "title": "3. TCP/IP 五层参考模型",
          "slug": "_3-tcp-ip-五层参考模型"
        },
        {
          "level": 3,
          "title": "4. OSI 模型和 TCP/IP 模型的异同比较",
          "slug": "_4-osi-模型和-tcp-ip-模型的异同比较"
        },
        {
          "level": 3,
          "title": "5. OSI 和 TCP/IP 协议之间对应关系",
          "slug": "_5-osi-和-tcp-ip-协议之间对应关系"
        },
        {
          "level": 3,
          "title": "6. 为什么 ICP/IP 去除了表示层和会话层",
          "slug": "_6-为什么-icp-ip-去除了表示层和会话层"
        },
        {
          "level": 3,
          "title": "7. 数据如何在各层之间传输",
          "slug": "_7-数据如何在各层之间传输"
        },
        {
          "level": 2,
          "title": "二：应用层",
          "slug": "二-应用层"
        },
        {
          "level": 3,
          "title": "1. HTTP 头部包含哪些信息",
          "slug": "_1-http-头部包含哪些信息"
        },
        {
          "level": 3,
          "title": "2. Keep-Alive 和非 Keep-Alive 区别，对服务器性能有影响吗",
          "slug": "_2-keep-alive-和非-keep-alive-区别-对服务器性能有影响吗"
        },
        {
          "level": 3,
          "title": "3. HTTP 长连接短连接使用场景是什么",
          "slug": "_3-http-长连接短连接使用场景是什么"
        },
        {
          "level": 3,
          "title": "4. 怎么知道 HTTP 的报文长度",
          "slug": "_4-怎么知道-http-的报文长度"
        },
        {
          "level": 3,
          "title": "5. HTTP 方法了解哪些",
          "slug": "_5-http-方法了解哪些"
        },
        {
          "level": 3,
          "title": "6. GET 和 POST 的区别",
          "slug": "_6-get-和-post-的区别"
        },
        {
          "level": 3,
          "title": "7. GET 的长度限制是多少",
          "slug": "_7-get-的长度限制是多少"
        },
        {
          "level": 3,
          "title": "8. HTTP 与 HTTPs 的工作方式【建立连接的过程】",
          "slug": "_8-http-与-https-的工作方式【建立连接的过程】"
        },
        {
          "level": 3,
          "title": "9. HTTPS 和 HTTP 的区别",
          "slug": "_9-https-和-http-的区别"
        },
        {
          "level": 3,
          "title": "10. HTTPS 的加密方式",
          "slug": "_10-https-的加密方式"
        },
        {
          "level": 3,
          "title": "11. 客户端为什么信任第三方证书",
          "slug": "_11-客户端为什么信任第三方证书"
        },
        {
          "level": 3,
          "title": "12. HTTP 是不保存状态的协议,如何保存用户状态",
          "slug": "_12-http-是不保存状态的协议-如何保存用户状态"
        },
        {
          "level": 3,
          "title": "13. 状态码",
          "slug": "_13-状态码"
        },
        {
          "level": 3,
          "title": "14. HTTP/1.1 和 HTTP/1.0 的区别",
          "slug": "_14-http-1-1-和-http-1-0-的区别"
        },
        {
          "level": 3,
          "title": "15. HTTP/1.X 和 HTTP/2.0 的区别",
          "slug": "_15-http-1-x-和-http-2-0-的区别"
        },
        {
          "level": 3,
          "title": "16. HTTP/3 了解吗",
          "slug": "_16-http-3-了解吗"
        },
        {
          "level": 3,
          "title": "17. DNS 的作用和原理",
          "slug": "_17-dns-的作用和原理"
        },
        {
          "level": 3,
          "title": "19. DNS 为什么用 UDP",
          "slug": "_19-dns-为什么用-udp"
        },
        {
          "level": 3,
          "title": "20. 怎么实现 DNS 劫持",
          "slug": "_20-怎么实现-dns-劫持"
        },
        {
          "level": 3,
          "title": "21. socket() 套接字有哪些",
          "slug": "_21-socket-套接字有哪些"
        },
        {
          "level": 3,
          "title": "22. URI（统一资源标识符）和 URL（统一资源定位符）之间的区别",
          "slug": "_22-uri-统一资源标识符-和-url-统一资源定位符-之间的区别"
        },
        {
          "level": 3,
          "title": "23. 为什么 fidder，charles 能抓到你的包【抓取数据包的过程】",
          "slug": "_23-为什么-fidder-charles-能抓到你的包【抓取数据包的过程】"
        },
        {
          "level": 3,
          "title": "24. 如果你访问一个网站很慢，怎么排查和解决",
          "slug": "_24-如果你访问一个网站很慢-怎么排查和解决"
        },
        {
          "level": 3,
          "title": "25. 其他协议",
          "slug": "_25-其他协议"
        },
        {
          "level": 3,
          "title": "26. 网页解析全过程【用户输入网址到显示对应页面的全过程】",
          "slug": "_26-网页解析全过程【用户输入网址到显示对应页面的全过程】"
        },
        {
          "level": 2,
          "title": "三：传输层",
          "slug": "三-传输层"
        },
        {
          "level": 3,
          "title": "1. 三次握手和四次挥手机制",
          "slug": "_1-三次握手和四次挥手机制"
        },
        {
          "level": 3,
          "title": "2. 如果三次握手的时候每次握手信息对方没有收到会怎么样",
          "slug": "_2-如果三次握手的时候每次握手信息对方没有收到会怎么样"
        },
        {
          "level": 3,
          "title": "3. 为什么要进行三次握手？两次握手可以吗？",
          "slug": "_3-为什么要进行三次握手-两次握手可以吗"
        },
        {
          "level": 3,
          "title": "4. 第 2 次握手传回了 ACK，为什么还要传回 SYN",
          "slug": "_4-第-2-次握手传回了-ack-为什么还要传回-syn"
        },
        {
          "level": 3,
          "title": "5. 为什么要四次挥手？",
          "slug": "_5-为什么要四次挥手"
        },
        {
          "level": 3,
          "title": "6. CLOSE-WAIT 和 TIME-WAIT 的状态和意义",
          "slug": "_6-close-wait-和-time-wait-的状态和意义"
        },
        {
          "level": 3,
          "title": "7. TIME_WAIT 状态会导致什么问题，怎么解决",
          "slug": "_7-time-wait-状态会导致什么问题-怎么解决"
        },
        {
          "level": 3,
          "title": "8. TIME-WAIT 为什么是 2MSL",
          "slug": "_8-time-wait-为什么是-2msl"
        },
        {
          "level": 3,
          "title": "9. 有很多 TIME-WAIT 状态如何解决",
          "slug": "_9-有很多-time-wait-状态如何解决"
        },
        {
          "level": 3,
          "title": "10. 有很多 CLOSE-WAIT 怎么解决",
          "slug": "_10-有很多-close-wait-怎么解决"
        },
        {
          "level": 3,
          "title": "11. TCP 和 UDP 的区别",
          "slug": "_11-tcp-和-udp-的区别"
        },
        {
          "level": 3,
          "title": "12. TCP 协议中的定时器",
          "slug": "_12-tcp-协议中的定时器"
        },
        {
          "level": 3,
          "title": "13. TCP 是如何保证可靠性的",
          "slug": "_13-tcp-是如何保证可靠性的"
        },
        {
          "level": 3,
          "title": "14. UDP 为什么是不可靠的？bind 和 connect 对于 UDP 的作用是什么",
          "slug": "_14-udp-为什么是不可靠的-bind-和-connect-对于-udp-的作用是什么"
        },
        {
          "level": 3,
          "title": "15. TCP 超时重传的原理",
          "slug": "_15-tcp-超时重传的原理"
        },
        {
          "level": 3,
          "title": "16. TCP 的停止等待协议是什么",
          "slug": "_16-tcp-的停止等待协议是什么"
        },
        {
          "level": 3,
          "title": "17. TCP 最大连接数限制",
          "slug": "_17-tcp-最大连接数限制"
        },
        {
          "level": 3,
          "title": "18. TCP 流量控制与拥塞控制",
          "slug": "_18-tcp-流量控制与拥塞控制"
        },
        {
          "level": 3,
          "title": "19. 如果接收方滑动窗口满了，发送方会怎么做",
          "slug": "_19-如果接收方滑动窗口满了-发送方会怎么做"
        },
        {
          "level": 3,
          "title": "20. TCP 拥塞控制采用的四种算法",
          "slug": "_20-tcp-拥塞控制采用的四种算法"
        },
        {
          "level": 3,
          "title": "21. TCP 粘包问题",
          "slug": "_21-tcp-粘包问题"
        },
        {
          "level": 3,
          "title": "22. TCP 报文包含哪些信息",
          "slug": "_22-tcp-报文包含哪些信息"
        },
        {
          "level": 3,
          "title": "23. SYN FLOOD 是什么",
          "slug": "_23-syn-flood-是什么"
        },
        {
          "level": 3,
          "title": "24. 为什么服务端易受到 SYN 攻击",
          "slug": "_24-为什么服务端易受到-syn-攻击"
        },
        {
          "level": 3,
          "title": "25. 高并发服务器客户端主动关闭连接和服务端主动关闭连接的区别",
          "slug": "_25-高并发服务器客户端主动关闭连接和服务端主动关闭连接的区别"
        },
        {
          "level": 2,
          "title": "四：网络层",
          "slug": "四-网络层"
        },
        {
          "level": 3,
          "title": "1. IP 协议的定义和作用",
          "slug": "_1-ip-协议的定义和作用"
        },
        {
          "level": 3,
          "title": "2. 域名和 IP 的关系，一个 IP 可以对应多个域名吗",
          "slug": "_2-域名和-ip-的关系-一个-ip-可以对应多个域名吗"
        },
        {
          "level": 3,
          "title": "3. IPV4 地址不够如何解决",
          "slug": "_3-ipv4-地址不够如何解决"
        },
        {
          "level": 3,
          "title": "4. 路由器的分组转发流程",
          "slug": "_4-路由器的分组转发流程"
        },
        {
          "level": 3,
          "title": "5. 路由器和交换机的区别",
          "slug": "_5-路由器和交换机的区别"
        },
        {
          "level": 3,
          "title": "6. ICMP 协议概念/作用",
          "slug": "_6-icmp-协议概念-作用"
        },
        {
          "level": 3,
          "title": "7. ICMP 的应用",
          "slug": "_7-icmp-的应用"
        },
        {
          "level": 3,
          "title": "8. 两台电脑连起来后 ping 不通，你觉得可能存在哪些问题？",
          "slug": "_8-两台电脑连起来后-ping-不通-你觉得可能存在哪些问题"
        },
        {
          "level": 3,
          "title": "9. ARP 地址解析协议的原理和地址解析过程",
          "slug": "_9-arp-地址解析协议的原理和地址解析过程"
        },
        {
          "level": 3,
          "title": "10. 网络地址转换 NAT",
          "slug": "_10-网络地址转换-nat"
        },
        {
          "level": 3,
          "title": "11. TTL 是什么？有什么作用",
          "slug": "_11-ttl-是什么-有什么作用"
        },
        {
          "level": 3,
          "title": "12. 运输层协议和网络层协议的区别",
          "slug": "_12-运输层协议和网络层协议的区别"
        },
        {
          "level": 2,
          "title": "五：数据链路层",
          "slug": "五-数据链路层"
        },
        {
          "level": 3,
          "title": "1. MAC 地址和 IP 地址分别有什么作用",
          "slug": "_1-mac-地址和-ip-地址分别有什么作用"
        },
        {
          "level": 3,
          "title": "2. 为什么有了 MAC 地址还需要 IP 地址",
          "slug": "_2-为什么有了-mac-地址还需要-ip-地址"
        },
        {
          "level": 3,
          "title": "3. 为什么有了 IP 地址还需要 MAC 地址",
          "slug": "_3-为什么有了-ip-地址还需要-mac-地址"
        },
        {
          "level": 3,
          "title": "4. 私网地址和公网地址之间进行转换：同一个局域网内的两个私网地址，经过转换之后外面看到的一样吗",
          "slug": "_4-私网地址和公网地址之间进行转换-同一个局域网内的两个私网地址-经过转换之后外面看到的一样吗"
        },
        {
          "level": 3,
          "title": "5. 以太网中的 CSMA/CD 协议",
          "slug": "_5-以太网中的-csma-cd-协议"
        },
        {
          "level": 3,
          "title": "6. 数据链路层上的三个基本问题",
          "slug": "_6-数据链路层上的三个基本问题"
        },
        {
          "level": 3,
          "title": "7. PPP 协议",
          "slug": "_7-ppp-协议"
        },
        {
          "level": 3,
          "title": "8. 为什么 PPP 协议不使用序号和确认机制",
          "slug": "_8-为什么-ppp-协议不使用序号和确认机制"
        },
        {
          "level": 3,
          "title": "9. 物理层主要做什么事情",
          "slug": "_9-物理层主要做什么事情"
        },
        {
          "level": 3,
          "title": "10. 主机之间的通信方式",
          "slug": "_10-主机之间的通信方式"
        },
        {
          "level": 3,
          "title": "11. 通道复用技术",
          "slug": "_11-通道复用技术"
        },
        {
          "level": 3,
          "title": "12. 几种常用的宽带接入技术",
          "slug": "_12-几种常用的宽带接入技术"
        },
        {
          "level": 2,
          "title": "六：物理层",
          "slug": "六-物理层"
        },
        {
          "level": 3,
          "title": "1. 物理层主要做什么事情",
          "slug": "_1-物理层主要做什么事情"
        },
        {
          "level": 3,
          "title": "2. 主机之间的通信方式",
          "slug": "_2-主机之间的通信方式"
        },
        {
          "level": 3,
          "title": "3. 通道复用技术",
          "slug": "_3-通道复用技术"
        },
        {
          "level": 3,
          "title": "4. 几种常用的宽带接入技术",
          "slug": "_4-几种常用的宽带接入技术"
        },
        {
          "level": 2,
          "title": "七：计算机网络中的安全问题",
          "slug": "七-计算机网络中的安全问题"
        },
        {
          "level": 3,
          "title": "1. 安全攻击有哪些",
          "slug": "_1-安全攻击有哪些"
        },
        {
          "level": 3,
          "title": "2. ARP 攻击",
          "slug": "_2-arp-攻击"
        },
        {
          "level": 3,
          "title": "3. 对称加密和非对称的区别，非对称加密有哪些",
          "slug": "_3-对称加密和非对称的区别-非对称加密有哪些"
        },
        {
          "level": 3,
          "title": "4. AES 的过程",
          "slug": "_4-aes-的过程"
        },
        {
          "level": 3,
          "title": "5. RSA 和 AES 算法有什么区别",
          "slug": "_5-rsa-和-aes-算法有什么区别"
        },
        {
          "level": 3,
          "title": "6. DDoS 有哪些，如何防范",
          "slug": "_6-ddos-有哪些-如何防范"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "ES",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Es.html",
      "relativePath": "q&a/self/articles/Es.md",
      "key": "v-063276cc",
      "path": "/q&a/self/articles/Es.html",
      "headers": [
        {
          "level": 3,
          "title": "1. ES架构",
          "slug": "_1-es架构"
        },
        {
          "level": 3,
          "title": "2. ElasticSearch概念、原理与实现",
          "slug": "_2-elasticsearch概念、原理与实现"
        },
        {
          "level": 3,
          "title": "问题",
          "slug": "问题"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "JVM",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/JVM.html",
      "relativePath": "q&a/self/articles/JVM.md",
      "key": "v-6b2a688e",
      "path": "/q&a/self/articles/JVM.html",
      "headers": [
        {
          "level": 3,
          "title": "一、JVM类的加载机制",
          "slug": "一、jvm类的加载机制"
        },
        {
          "level": 3,
          "title": "二、JVM内存结构",
          "slug": "二、jvm内存结构"
        },
        {
          "level": 3,
          "title": "三、回收算法",
          "slug": "三、回收算法"
        },
        {
          "level": 3,
          "title": "四、内存调优",
          "slug": "四、内存调优"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "其他",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Common.html",
      "relativePath": "q&a/self/articles/Common.md",
      "key": "v-3fd93fe0",
      "path": "/q&a/self/articles/Common.html",
      "headers": [
        {
          "level": 3,
          "title": "1 延时队列的实现思路",
          "slug": "_1-延时队列的实现思路"
        },
        {
          "level": 3,
          "title": "2 分布式锁的实现思路",
          "slug": "_2-分布式锁的实现思路"
        },
        {
          "level": 3,
          "title": "3. 库表的扩展性方案",
          "slug": "_3-库表的扩展性方案"
        },
        {
          "level": 3,
          "title": "4.元数据模型",
          "slug": "_4-元数据模型"
        },
        {
          "level": 3,
          "title": "5. 一致性",
          "slug": "_5-一致性"
        },
        {
          "level": 3,
          "title": "6. 缓存常见的套路",
          "slug": "_6-缓存常见的套路"
        },
        {
          "level": 3,
          "title": "7. 旁路缓存的一致性问题",
          "slug": "_7-旁路缓存的一致性问题"
        },
        {
          "level": 3,
          "title": "8. DataBus/DTS的一致性问题",
          "slug": "_8-databus-dts的一致性问题"
        },
        {
          "level": 3,
          "title": "9. MySQL的逻辑架构",
          "slug": "_9-mysql的逻辑架构"
        },
        {
          "level": 3,
          "title": "10. mysql结构索引",
          "slug": "_10-mysql结构索引"
        },
        {
          "level": 3,
          "title": "11. RPC框架",
          "slug": "_11-rpc框架"
        },
        {
          "level": 3,
          "title": "12. LinkedBlockingQueue size = 0",
          "slug": "_12-linkedblockingqueue-size-0"
        },
        {
          "level": 3,
          "title": "13. 如何进行领域建模",
          "slug": "_13-如何进行领域建模"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Mysql",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Mysql.html",
      "relativePath": "q&a/self/articles/Mysql.md",
      "key": "v-15bca56e",
      "path": "/q&a/self/articles/Mysql.html",
      "headers": [
        {
          "level": 3,
          "title": "一、数据库事务",
          "slug": "一、数据库事务"
        },
        {
          "level": 3,
          "title": "二、基础知识",
          "slug": "二、基础知识"
        },
        {
          "level": 3,
          "title": "三、数据库索引",
          "slug": "三、数据库索引"
        },
        {
          "level": 3,
          "title": "四、数据库log",
          "slug": "四、数据库log"
        },
        {
          "level": 3,
          "title": "五、数据库锁",
          "slug": "五、数据库锁"
        },
        {
          "level": 3,
          "title": "六、数据库隔离级别",
          "slug": "六、数据库隔离级别"
        },
        {
          "level": 3,
          "title": "七、多版本控制",
          "slug": "七、多版本控制"
        },
        {
          "level": 3,
          "title": "八、主从复制",
          "slug": "八、主从复制"
        },
        {
          "level": 3,
          "title": "九、分库分表",
          "slug": "九、分库分表"
        },
        {
          "level": 3,
          "title": "十、其他",
          "slug": "十、其他"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "java锁",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/JavaLocks.html",
      "relativePath": "q&a/self/articles/JavaLocks.md",
      "key": "v-36a76424",
      "path": "/q&a/self/articles/JavaLocks.html",
      "headers": [
        {
          "level": 3,
          "title": "锁分类",
          "slug": "锁分类"
        },
        {
          "level": 3,
          "title": "其他",
          "slug": "其他"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Kafka",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Kafka.html",
      "relativePath": "q&a/self/articles/Kafka.md",
      "key": "v-da39f024",
      "path": "/q&a/self/articles/Kafka.html",
      "headers": [
        {
          "level": 3,
          "title": "一、Kafka架构",
          "slug": "一、kafka架构"
        },
        {
          "level": 3,
          "title": "二、工作流程",
          "slug": "二、工作流程"
        },
        {
          "level": 3,
          "title": "三、存储机制",
          "slug": "三、存储机制"
        },
        {
          "level": 3,
          "title": "四、生产者",
          "slug": "四、生产者"
        },
        {
          "level": 3,
          "title": "五、消费者",
          "slug": "五、消费者"
        },
        {
          "level": 3,
          "title": "六、性能优化",
          "slug": "六、性能优化"
        },
        {
          "level": 3,
          "title": "七、高可用",
          "slug": "七、高可用"
        },
        {
          "level": 3,
          "title": "八、Kafka事务",
          "slug": "八、kafka事务"
        },
        {
          "level": 3,
          "title": "九、问题",
          "slug": "九、问题"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Mysql索引原理",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/MysqlIndexTheory.html",
      "relativePath": "q&a/self/articles/MysqlIndexTheory.md",
      "key": "v-37bee94c",
      "path": "/q&a/self/articles/MysqlIndexTheory.html",
      "headers": [
        {
          "level": 3,
          "title": "1 Mysql的BTree索引",
          "slug": "_1-mysql的btree索引"
        },
        {
          "level": 3,
          "title": "2 Mysql的哈希索引",
          "slug": "_2-mysql的哈希索引"
        },
        {
          "level": 3,
          "title": "3. Mysql的全文索引",
          "slug": "_3-mysql的全文索引"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Spring",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Spring.html",
      "relativePath": "q&a/self/articles/Spring.md",
      "key": "v-11473dc8",
      "path": "/q&a/self/articles/Spring.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Mysql锁原理",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/MysqlLockTheory.html",
      "relativePath": "q&a/self/articles/MysqlLockTheory.md",
      "key": "v-6ee7d76e",
      "path": "/q&a/self/articles/MysqlLockTheory.html",
      "headers": [
        {
          "level": 3,
          "title": "1. ACID 原理",
          "slug": "_1-acid-原理"
        },
        {
          "level": 3,
          "title": "2. MVVC 原理",
          "slug": "_2-mvvc-原理"
        },
        {
          "level": 3,
          "title": "3. 锁的实现原理",
          "slug": "_3-锁的实现原理"
        },
        {
          "level": 3,
          "title": "4. 隔离级别的实现原理",
          "slug": "_4-隔离级别的实现原理"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "线程池",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/ThreadPool.html",
      "relativePath": "q&a/self/articles/ThreadPool.md",
      "key": "v-1c8a296a",
      "path": "/q&a/self/articles/ThreadPool.html",
      "headers": [
        {
          "level": 3,
          "title": "几个关键问题",
          "slug": "几个关键问题"
        },
        {
          "level": 3,
          "title": "线程池",
          "slug": "线程池-2"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/tuji/",
      "relativePath": "q&a/tuji/README.md",
      "key": "v-64e033c6",
      "path": "/q&a/tuji/",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Redis",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/Redis.html",
      "relativePath": "q&a/self/articles/Redis.md",
      "key": "v-62ed210e",
      "path": "/q&a/self/articles/Redis.html",
      "headers": [
        {
          "level": 3,
          "title": "1. Redis基础数据结构和原理",
          "slug": "_1-redis基础数据结构和原理"
        },
        {
          "level": 3,
          "title": "2. Redis持久化",
          "slug": "_2-redis持久化"
        },
        {
          "level": 3,
          "title": "3. 高可用",
          "slug": "_3-高可用"
        },
        {
          "level": 3,
          "title": "3. 其他一些重要功能",
          "slug": "_3-其他一些重要功能"
        },
        {
          "level": 3,
          "title": "常见问题",
          "slug": "常见问题"
        },
        {
          "level": 3,
          "title": "题目补充（无答案）",
          "slug": "题目补充-无答案"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "Zk",
      "frontmatter": {},
      "regularPath": "/q&a/self/articles/zk.html",
      "relativePath": "q&a/self/articles/zk.md",
      "key": "v-31b65c94",
      "path": "/q&a/self/articles/zk.html",
      "headers": [
        {
          "level": 3,
          "title": "一、主要结构",
          "slug": "一、主要结构"
        },
        {
          "level": 3,
          "title": "二、Zookeeper内部原理",
          "slug": "二、zookeeper内部原理"
        },
        {
          "level": 3,
          "title": "三、基本概念",
          "slug": "三、基本概念"
        },
        {
          "level": 3,
          "title": "自己的文章",
          "slug": "自己的文章"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 Redis高并发跟整个系统的高并发之间的关系",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(02)%20-%20Redis%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%9D%A5%E6%89%BF%E8%BD%BD%E8%AF%BB%E8%AF%B7%E6%B1%82QPS%E8%B6%85%E8%BF%8710%E4%B8%87.html",
      "relativePath": "q&a/tuji/突破Java面试(02) - Redis如何通过读写分离来承载读请求QPS超过10万.md",
      "key": "v-f805225e",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(02)%20-%20Redis%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%9D%A5%E6%89%BF%E8%BD%BD%E8%AF%BB%E8%AF%B7%E6%B1%82QPS%E8%B6%85%E8%BF%8710%E4%B8%87.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1   项目中如何使用缓存的？",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(19)%20-%20%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98.html",
      "relativePath": "q&a/tuji/突破Java面试(19) - 分布式缓存的第一个问题.md",
      "key": "v-e8a5474a",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(19)%20-%20%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "2.1 高性能",
          "slug": "_2-1-高性能"
        },
        {
          "level": 3,
          "title": "MySQL太久，受不了!",
          "slug": "mysql太久-受不了"
        },
        {
          "level": 3,
          "title": "使用缓存！",
          "slug": "使用缓存"
        },
        {
          "level": 3,
          "title": "应用场景",
          "slug": "应用场景"
        },
        {
          "level": 2,
          "title": "2.2 高并发",
          "slug": "_2-2-高并发"
        },
        {
          "level": 3,
          "title": "应用场景",
          "slug": "应用场景-2"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(11)-%E4%BD%A0%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97.html",
      "relativePath": "q&a/tuji/突破Java面试(11)-你怎么设计一个消息队列.md",
      "key": "v-d2b62a68",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(11)-%E4%BD%A0%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 支持可伸缩性",
          "slug": "_3-1-支持可伸缩性"
        },
        {
          "level": 2,
          "title": "3.2 数据落地",
          "slug": "_3-2-数据落地"
        },
        {
          "level": 2,
          "title": "3.3 其次你考虑一下你的mq的可用性啊",
          "slug": "_3-3-其次你考虑一下你的mq的可用性啊"
        },
        {
          "level": 2,
          "title": "3.4 支持数据0丢失",
          "slug": "_3-4-支持数据0丢失"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 sdown和odown转换机制",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(23-9)%20-%20%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90Redis%E5%93%A8%E5%85%B5%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",
      "relativePath": "q&a/tuji/突破Java面试(23-9) - 深入解析Redis哨兵底层原理.md",
      "key": "v-476e2359",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(23-9)%20-%20%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90Redis%E5%93%A8%E5%85%B5%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "1.1 概念",
          "slug": "_1-1-概念"
        },
        {
          "level": 2,
          "title": "1.2 达成条件",
          "slug": "_1-2-达成条件"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 为什么要分库分表",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/MySQL%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "relativePath": "q&a/tuji/MySQL分库分表.md",
      "key": "v-09885976",
      "path": "/q&a/tuji/MySQL%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "分表",
          "slug": "分表"
        },
        {
          "level": 2,
          "title": "分库",
          "slug": "分库"
        },
        {
          "level": 2,
          "title": "cobar",
          "slug": "cobar"
        },
        {
          "level": 2,
          "title": "TDDL",
          "slug": "tddl"
        },
        {
          "level": 2,
          "title": "atlas",
          "slug": "atlas"
        },
        {
          "level": 2,
          "title": "sharding-jdbc（shardingsphere）",
          "slug": "sharding-jdbc-shardingsphere"
        },
        {
          "level": 2,
          "title": "mycat",
          "slug": "mycat"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "7.1 水平拆分",
          "slug": "_7-1-水平拆分"
        },
        {
          "level": 3,
          "title": "水平拆分的意义",
          "slug": "水平拆分的意义"
        },
        {
          "level": 2,
          "title": "7.2 垂直拆分",
          "slug": "_7-2-垂直拆分"
        },
        {
          "level": 2,
          "title": "按range分",
          "slug": "按range分"
        },
        {
          "level": 2,
          "title": "按某字段hash",
          "slug": "按某字段hash"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "0  Github",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(06)-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7.html",
      "relativePath": "q&a/tuji/突破Java面试(06)-如何保证消息队列的高可用性.md",
      "key": "v-8cf25e24",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(06)-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 RabbitMQ的高可用性",
          "slug": "_3-1-rabbitmq的高可用性"
        },
        {
          "level": 3,
          "title": "3.1.1 单机模式",
          "slug": "_3-1-1-单机模式"
        },
        {
          "level": 3,
          "title": "3.1.2 普通集群模式",
          "slug": "_3-1-2-普通集群模式"
        },
        {
          "level": 3,
          "title": "3.1.3 镜像集群模式",
          "slug": "_3-1-3-镜像集群模式"
        },
        {
          "level": 2,
          "title": "3.2 kafka的高可用性",
          "slug": "_3-2-kafka的高可用性"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(29)%20-%20%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84redis%E9%9B%86%E7%BE%A4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html",
      "relativePath": "q&a/tuji/突破Java面试(29) - 生产环境的redis集群的部署架构是怎么样的.md",
      "key": "v-298f7444",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(29)%20-%20%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84redis%E9%9B%86%E7%BE%A4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 redis cluster",
          "slug": "_3-1-redis-cluster"
        },
        {
          "level": 2,
          "title": "3.2 机器配置",
          "slug": "_3-2-机器配置"
        },
        {
          "level": 2,
          "title": "3.3 你往内存里写的是什么数据？每条数据的大小是多少？",
          "slug": "_3-3-你往内存里写的是什么数据-每条数据的大小是多少"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(25)%20-%20Redis%20cluster%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8E%9F%E7%90%86.html",
      "relativePath": "q&a/tuji/突破Java面试(25) - Redis cluster集群模式的原理.md",
      "key": "v-79d9ddf4",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(25)%20-%20Redis%20cluster%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "5.1 基础通信原理",
          "slug": "_5-1-基础通信原理"
        },
        {
          "level": 3,
          "title": "5.1.1 集中式",
          "slug": "_5-1-1-集中式"
        },
        {
          "level": 3,
          "title": "5.1.2 gossip协议",
          "slug": "_5-1-2-gossip协议"
        },
        {
          "level": 2,
          "title": "6.1 基于重定向的客户端",
          "slug": "_6-1-基于重定向的客户端"
        },
        {
          "level": 3,
          "title": "6.1.1 请求重定向",
          "slug": "_6-1-1-请求重定向"
        },
        {
          "level": 3,
          "title": "6.1.2 计算hash slot",
          "slug": "_6-1-2-计算hash-slot"
        },
        {
          "level": 3,
          "title": "6.1.3 hash slot查找",
          "slug": "_6-1-3-hash-slot查找"
        },
        {
          "level": 2,
          "title": "6.2 smart jedis",
          "slug": "_6-2-smart-jedis"
        },
        {
          "level": 3,
          "title": "6.2.1 什么是smart jedis",
          "slug": "_6-2-1-什么是smart-jedis"
        },
        {
          "level": 3,
          "title": "6.2.2 JedisCluster的工作原理",
          "slug": "_6-2-2-jediscluster的工作原理"
        },
        {
          "level": 3,
          "title": "6.2.3 hashslot迁移和ask重定向",
          "slug": "_6-2-3-hashslot迁移和ask重定向"
        },
        {
          "level": 2,
          "title": "7.1 判断节点宕机",
          "slug": "_7-1-判断节点宕机"
        },
        {
          "level": 2,
          "title": "7.2 从节点过滤",
          "slug": "_7-2-从节点过滤"
        },
        {
          "level": 2,
          "title": "7.3 从节点选举",
          "slug": "_7-3-从节点选举"
        },
        {
          "level": 2,
          "title": "7.4 与哨兵比较",
          "slug": "_7-4-与哨兵比较"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 CAP 定理",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html",
      "relativePath": "q&a/tuji/分布式事务解决方案.md",
      "key": "v-685166ee",
      "path": "/q&a/tuji/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html",
      "headers": [
        {
          "level": 2,
          "title": "1.1 概念",
          "slug": "_1-1-概念"
        },
        {
          "level": 2,
          "title": "2.2 中间件实例",
          "slug": "_2-2-中间件实例"
        },
        {
          "level": 2,
          "title": "2.1 核心思想",
          "slug": "_2-1-核心思想"
        },
        {
          "level": 2,
          "title": "2.2 一致性模型",
          "slug": "_2-2-一致性模型"
        },
        {
          "level": 2,
          "title": "3.1 实现思路",
          "slug": "_3-1-实现思路"
        },
        {
          "level": 3,
          "title": "理想状态",
          "slug": "理想状态"
        },
        {
          "level": 3,
          "title": "一般情况",
          "slug": "一般情况"
        },
        {
          "level": 2,
          "title": "3.2 实现方案",
          "slug": "_3-2-实现方案"
        },
        {
          "level": 3,
          "title": "3.2.1 XA方案",
          "slug": "_3-2-1-xa方案"
        },
        {
          "level": 3,
          "title": "3.2.2 TCC方案",
          "slug": "_3-2-2-tcc方案"
        },
        {
          "level": 2,
          "title": "4.2 跨行转账案例",
          "slug": "_4-2-跨行转账案例"
        },
        {
          "level": 2,
          "title": "4.3 适用场景",
          "slug": "_4-3-适用场景"
        },
        {
          "level": 2,
          "title": "4.4 方案示意图",
          "slug": "_4-4-方案示意图"
        },
        {
          "level": 2,
          "title": "5.1 简介",
          "slug": "_5-1-简介"
        },
        {
          "level": 2,
          "title": "5.2 优点",
          "slug": "_5-2-优点"
        },
        {
          "level": 2,
          "title": "5.3 缺陷",
          "slug": "_5-3-缺陷"
        },
        {
          "level": 2,
          "title": "6.1 执行流程",
          "slug": "_6-1-执行流程"
        },
        {
          "level": 2,
          "title": "图解",
          "slug": "图解"
        },
        {
          "level": 2,
          "title": "7.1 简介",
          "slug": "_7-1-简介"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(35)-Dubbo%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8F%8A%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E7%AD%96%E7%95%A5.html",
      "relativePath": "q&a/tuji/突破Java面试(35)-Dubbo负载均衡及动态代理的策略.md",
      "key": "v-36310744",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(35)-Dubbo%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8F%8A%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E7%AD%96%E7%95%A5.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 random loadbalance",
          "slug": "_3-1-random-loadbalance"
        },
        {
          "level": 2,
          "title": "3.2 roundrobin loadbalance",
          "slug": "_3-2-roundrobin-loadbalance"
        },
        {
          "level": 2,
          "title": "3.3  leastactive loadbalance",
          "slug": "_3-3-leastactive-loadbalance"
        },
        {
          "level": 2,
          "title": "3.4 consistanthash loadbalance",
          "slug": "_3-4-consistanthash-loadbalance"
        },
        {
          "level": 2,
          "title": "4.1 failover cluster模式",
          "slug": "_4-1-failover-cluster模式"
        },
        {
          "level": 2,
          "title": "4.2 failfast cluster模式",
          "slug": "_4-2-failfast-cluster模式"
        },
        {
          "level": 2,
          "title": "4.3 failsafe cluster模式",
          "slug": "_4-3-failsafe-cluster模式"
        },
        {
          "level": 2,
          "title": "4.4 failbackc cluster模式",
          "slug": "_4-4-failbackc-cluster模式"
        },
        {
          "level": 2,
          "title": "4.5 forking cluster",
          "slug": "_4-5-forking-cluster"
        },
        {
          "level": 2,
          "title": "4.6 broadcacst cluster",
          "slug": "_4-6-broadcacst-cluster"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(33)-Dubbo%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html",
      "relativePath": "q&a/tuji/突破Java面试(33)-Dubbo的工作原理.md",
      "key": "v-00709f48",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(33)-Dubbo%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 dubbo工作原理",
          "slug": "_3-1-dubbo工作原理"
        },
        {
          "level": 3,
          "title": "3.1.1 工作流程：",
          "slug": "_3-1-1-工作流程"
        },
        {
          "level": 2,
          "title": "3.2 注册中心挂了可以继续通信吗？",
          "slug": "_3-2-注册中心挂了可以继续通信吗"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(32)-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%8A%E7%B3%BB%E7%BB%9F%E6%8B%86%E5%88%86%E6%88%90%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%EF%BC%9F%E4%B8%BA%E5%95%A5%E8%A6%81%E7%94%A8dubbo.html",
      "relativePath": "q&a/tuji/突破Java面试(32)-为什么要把系统拆分成分布式的？为啥要用dubbo.md",
      "key": "v-03912f4d",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(32)-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%8A%E7%B3%BB%E7%BB%9F%E6%8B%86%E5%88%86%E6%88%90%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%EF%BC%9F%E4%B8%BA%E5%95%A5%E8%A6%81%E7%94%A8dubbo.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 缘何系统拆分",
          "slug": "_3-1-缘何系统拆分"
        },
        {
          "level": 3,
          "title": "3.1.1  不拆分,维护成本高",
          "slug": "_3-1-1-不拆分-维护成本高"
        },
        {
          "level": 3,
          "title": "3.1.2 拆分后,世界清净了",
          "slug": "_3-1-2-拆分后-世界清净了"
        },
        {
          "level": 2,
          "title": "3.2 如何拆分系统",
          "slug": "_3-2-如何拆分系统"
        },
        {
          "level": 2,
          "title": "3.3 拆分后不用dubbo可以吗？",
          "slug": "_3-3-拆分后不用dubbo可以吗"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "0  Github",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(40)-%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BCDubbo%E7%9A%84RPC%E6%A1%86%E6%9E%B6.html",
      "relativePath": "q&a/tuji/突破Java面试(40)-如何设计一个类似Dubbo的RPC框架.md",
      "key": "v-7936f1aa",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(40)-%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BCDubbo%E7%9A%84RPC%E6%A1%86%E6%9E%B6.html",
      "headers": [
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "0  Github",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(41)-ZooKeeper%E7%9A%84%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.html",
      "relativePath": "q&a/tuji/突破Java面试(41)-ZooKeeper的适用场景.md",
      "key": "v-8450166e",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(41)-ZooKeeper%E7%9A%84%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 分布式协调",
          "slug": "_3-1-分布式协调"
        },
        {
          "level": 2,
          "title": "3.2 分布式锁",
          "slug": "_3-2-分布式锁"
        },
        {
          "level": 2,
          "title": "3.3 元数据/配置信息管理",
          "slug": "_3-3-元数据-配置信息管理"
        },
        {
          "level": 2,
          "title": "3.4 HA高可用性",
          "slug": "_3-4-ha高可用性"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(38)-%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7.html",
      "relativePath": "q&a/tuji/突破Java面试(38)-分布式服务接口的幂等性.md",
      "key": "v-02f6891a",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(38)-%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(45)-%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F.html",
      "relativePath": "q&a/tuji/突破Java面试(45)-设计一个高并发系统.md",
      "key": "v-26c4c792",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(45)-%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F.html",
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 服务治理",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(37)-%E5%9F%BA%E4%BA%8EDubbo%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E3%80%81%E6%9C%8D%E5%8A%A1%E9%99%8D%E7%BA%A7%E4%BB%A5%E5%8F%8A%E9%87%8D%E8%AF%95.html",
      "relativePath": "q&a/tuji/突破Java面试(37)-基于Dubbo的服务治理、服务降级以及重试.md",
      "key": "v-5ec1c962",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(37)-%E5%9F%BA%E4%BA%8EDubbo%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E3%80%81%E6%9C%8D%E5%8A%A1%E9%99%8D%E7%BA%A7%E4%BB%A5%E5%8F%8A%E9%87%8D%E8%AF%95.html",
      "headers": [
        {
          "level": 2,
          "title": "1.1 调用链路自动生成",
          "slug": "_1-1-调用链路自动生成"
        },
        {
          "level": 2,
          "title": "1.2 服务访问压力以及时长统计",
          "slug": "_1-2-服务访问压力以及时长统计"
        },
        {
          "level": 2,
          "title": "1.3 其他",
          "slug": "_1-3-其他"
        },
        {
          "level": 2,
          "title": "3.1 失败重试",
          "slug": "_3-1-失败重试"
        },
        {
          "level": 2,
          "title": "3.2 超时重试",
          "slug": "_3-2-超时重试"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(47)-%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E5%AE%9E%E8%B7%B5.html",
      "relativePath": "q&a/tuji/突破Java面试(47)-分库分表的实践.md",
      "key": "v-0a48bb2b",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(47)-%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E5%AE%9E%E8%B7%B5.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 停机迁移方案",
          "slug": "_3-1-停机迁移方案"
        },
        {
          "level": 2,
          "title": "3.2 双写迁移方案",
          "slug": "_3-2-双写迁移方案"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "0 Github",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(9)-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7.html",
      "relativePath": "q&a/tuji/突破Java面试(9)-如何保证消息队列的顺序性.md",
      "key": "v-3cd63780",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(9)-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "3.0 案例",
          "slug": "_3-0-案例"
        },
        {
          "level": 2,
          "title": "3.1 顺序错乱的场景",
          "slug": "_3-1-顺序错乱的场景"
        },
        {
          "level": 3,
          "title": "3.1.1 rabbitmq",
          "slug": "_3-1-1-rabbitmq"
        },
        {
          "level": 3,
          "title": "3.1.2  kafka",
          "slug": "_3-1-2-kafka"
        },
        {
          "level": 2,
          "title": "3.2 保证消息的顺序性",
          "slug": "_3-2-保证消息的顺序性"
        },
        {
          "level": 3,
          "title": "3.2.1 rabbitmq",
          "slug": "_3-2-1-rabbitmq"
        },
        {
          "level": 3,
          "title": "3.2.2 kafka",
          "slug": "_3-2-2-kafka"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/self/",
      "relativePath": "self/README.md",
      "key": "v-12ff1f86",
      "path": "/self/",
      "lastUpdated": "2022-01-18 17:50:20"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(43)-%E5%88%86%E5%B8%83%E5%BC%8FSession%E6%96%B9%E6%A1%88%E7%9A%84%E5%AE%9E%E7%8E%B0.html",
      "relativePath": "q&a/tuji/突破Java面试(43)-分布式Session方案的实现.md",
      "key": "v-77bfa2f0",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(43)-%E5%88%86%E5%B8%83%E5%BC%8FSession%E6%96%B9%E6%A1%88%E7%9A%84%E5%AE%9E%E7%8E%B0.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1  Tomcat + Redis",
          "slug": "_3-1-tomcat-redis"
        },
        {
          "level": 2,
          "title": "3.2 Spring Session + Redis",
          "slug": "_3-2-spring-session-redis"
        },
        {
          "level": 2,
          "title": "3.3 小结",
          "slug": "_3-3-小结"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(8)-MQ%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8E%BB%E5%93%AA%E4%BA%86.html",
      "relativePath": "q&a/tuji/突破Java面试(8)-MQ的数据去哪了.md",
      "key": "v-050b5000",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(8)-MQ%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8E%BB%E5%93%AA%E4%BA%86.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 rabbitmq",
          "slug": "_3-1-rabbitmq"
        },
        {
          "level": 3,
          "title": "3.1.1 生产者丢数据",
          "slug": "_3-1-1-生产者丢数据"
        },
        {
          "level": 3,
          "title": "3.1.2 rabbitmq丢数据",
          "slug": "_3-1-2-rabbitmq丢数据"
        },
        {
          "level": 3,
          "title": "3.1.3 消费端弄丢了数据",
          "slug": "_3-1-3-消费端弄丢了数据"
        },
        {
          "level": 2,
          "title": "3.2 Kafka",
          "slug": "_3-2-kafka"
        },
        {
          "level": 3,
          "title": "3.2.1 消费端丢数据",
          "slug": "_3-2-1-消费端丢数据"
        },
        {
          "level": 3,
          "title": "3.2.2 kafka弄丢了数据",
          "slug": "_3-2-2-kafka弄丢了数据"
        },
        {
          "level": 3,
          "title": "3.2.3 生产者会不会弄丢数据",
          "slug": "_3-2-3-生产者会不会弄丢数据"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "一、整体架构",
      "frontmatter": {},
      "regularPath": "/self/%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E5%8C%96%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF%E4%B8%80.html",
      "relativePath": "self/系统平台化建设思路一.md",
      "key": "v-6c4fe812",
      "path": "/self/%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E5%8C%96%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF%E4%B8%80.html",
      "headers": [
        {
          "level": 3,
          "title": "一、整体架构",
          "slug": "一、整体架构"
        },
        {
          "level": 3,
          "title": "二、平台化建设思路",
          "slug": "二、平台化建设思路"
        }
      ],
      "lastUpdated": "2022-01-11 19:58:08"
    },
    {
      "title": "1 面试题",
      "frontmatter": {},
      "regularPath": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(42)%20-%20Redis%20&%20ZooKeeper%E4%B8%A4%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%BC%98%E5%8A%A3.html",
      "relativePath": "q&a/tuji/突破Java面试(42) - Redis & ZooKeeper两种分布式锁实现的优劣.md",
      "key": "v-bdd6fd8a",
      "path": "/q&a/tuji/%E7%AA%81%E7%A0%B4Java%E9%9D%A2%E8%AF%95(42)%20-%20Redis%20&%20ZooKeeper%E4%B8%A4%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%BC%98%E5%8A%A3.html",
      "headers": [
        {
          "level": 2,
          "title": "3.1 最普通的实现方式",
          "slug": "_3-1-最普通的实现方式"
        },
        {
          "level": 2,
          "title": "3.2 RedLock算法",
          "slug": "_3-2-redlock算法"
        },
        {
          "level": 2,
          "title": "4.1 方案一",
          "slug": "_4-1-方案一"
        },
        {
          "level": 2,
          "title": "4.2 方案二",
          "slug": "_4-2-方案二"
        },
        {
          "level": 2,
          "title": "Java交流群",
          "slug": "java交流群"
        },
        {
          "level": 2,
          "title": "博客",
          "slug": "博客"
        },
        {
          "level": 2,
          "title": "Github",
          "slug": "github"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "frontmatter": {},
      "regularPath": "/self/redis%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97%E4%BB%A5%E5%8F%8A%E6%97%B6%E9%97%B4%E8%BD%AE%E5%92%8Crabbitmq%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html",
      "relativePath": "self/redis自己实现延迟队列以及时间轮和rabbitmq实现原理.md",
      "key": "v-67a9432b",
      "path": "/self/redis%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97%E4%BB%A5%E5%8F%8A%E6%97%B6%E9%97%B4%E8%BD%AE%E5%92%8Crabbitmq%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html",
      "headers": [
        {
          "level": 3,
          "title": "自己项目的方案",
          "slug": "自己项目的方案"
        },
        {
          "level": 3,
          "title": "RabbitMQ",
          "slug": "rabbitmq"
        },
        {
          "level": 3,
          "title": "时间轮的处理方案（Timer）",
          "slug": "时间轮的处理方案-timer"
        },
        {
          "level": 3,
          "title": "另外成熟方案：",
          "slug": "另外成熟方案"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "从0到1搭建新系统",
      "frontmatter": {},
      "regularPath": "/self/%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E5%8C%96%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF%E4%BA%8C.html",
      "relativePath": "self/系统平台化建设思路二.md",
      "key": "v-9d5df118",
      "path": "/self/%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E5%8C%96%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF%E4%BA%8C.html",
      "headers": [
        {
          "level": 3,
          "title": "从0到1搭建新系统",
          "slug": "从0到1搭建新系统"
        },
        {
          "level": 3,
          "title": "快速扩张阶段",
          "slug": "快速扩张阶段"
        },
        {
          "level": 3,
          "title": "多样化阶段",
          "slug": "多样化阶段"
        }
      ],
      "lastUpdated": "2022-01-11 19:58:08"
    },
    {
      "frontmatter": {},
      "regularPath": "/self/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9.html",
      "relativePath": "self/项目总结以及知识点.md",
      "key": "v-68b62e66",
      "path": "/self/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9.html",
      "headers": [
        {
          "level": 3,
          "title": "本抽奖不并发和并发问题解决",
          "slug": "本抽奖不并发和并发问题解决"
        },
        {
          "level": 3,
          "title": "GC的总结：",
          "slug": "gc的总结"
        },
        {
          "level": 3,
          "title": "线程池参数总结：",
          "slug": "线程池参数总结"
        },
        {
          "level": 3,
          "title": "kafka优化思路总结",
          "slug": "kafka优化思路总结"
        },
        {
          "level": 3,
          "title": "抽奖迁移库",
          "slug": "抽奖迁移库"
        },
        {
          "level": 3,
          "title": "项目中的分布式锁",
          "slug": "项目中的分布式锁"
        },
        {
          "level": 3,
          "title": "飞机遇到的问题",
          "slug": "飞机遇到的问题"
        },
        {
          "level": 3,
          "title": "限流以及分布式限流",
          "slug": "限流以及分布式限流"
        },
        {
          "level": 3,
          "title": "synchronized和ReentrantLock的区别",
          "slug": "synchronized和reentrantlock的区别"
        },
        {
          "level": 3,
          "title": "kafka是如何扩容的",
          "slug": "kafka是如何扩容的"
        },
        {
          "level": 3,
          "title": "kafka如何保证可靠性传输",
          "slug": "kafka如何保证可靠性传输"
        },
        {
          "level": 3,
          "title": "MySQL 整型长度的含义",
          "slug": "mysql-整型长度的含义"
        },
        {
          "level": 3,
          "title": "mysql中char与varchar的区别：",
          "slug": "mysql中char与varchar的区别"
        },
        {
          "level": 3,
          "title": "读写分离思想",
          "slug": "读写分离思想"
        }
      ],
      "lastUpdated": "2022-01-04 17:14:56"
    },
    {
      "title": "什么是系统设计？",
      "frontmatter": {},
      "regularPath": "/self/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.html",
      "relativePath": "self/系统设计方法.md",
      "key": "v-14211f96",
      "path": "/self/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是系统设计？",
          "slug": "什么是系统设计"
        },
        {
          "level": 3,
          "title": "怎么做系统设计？",
          "slug": "怎么做系统设计"
        },
        {
          "level": 3,
          "title": "怎么做系统设计：面向对象的方法",
          "slug": "怎么做系统设计-面向对象的方法"
        },
        {
          "level": 3,
          "title": "系统设计-具体做什么",
          "slug": "系统设计-具体做什么"
        },
        {
          "level": 3,
          "title": "功能需求分析",
          "slug": "功能需求分析"
        },
        {
          "level": 3,
          "title": "领域建模",
          "slug": "领域建模"
        },
        {
          "level": 3,
          "title": "怎么判断划分是否合理",
          "slug": "怎么判断划分是否合理"
        },
        {
          "level": 3,
          "title": "经典分层架构",
          "slug": "经典分层架构"
        },
        {
          "level": 3,
          "title": "典型架构",
          "slug": "典型架构"
        },
        {
          "level": 3,
          "title": "API设计",
          "slug": "api设计"
        },
        {
          "level": 3,
          "title": "API设计注意事项",
          "slug": "api设计注意事项"
        },
        {
          "level": 3,
          "title": "关于概念",
          "slug": "关于概念"
        }
      ],
      "lastUpdated": "2022-01-18 17:50:02"
    }
  ],
  "themeConfig": {
    "docsDir": "docs",
    "sidebar": {
      "/algo/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "LRU缓存.md",
            "常见的.md",
            "手写线程池.md",
            "指针.md",
            "排序.md",
            "线程相关.md",
            "设计模式.md"
          ]
        }
      ],
      "/buss/": [
        {
          "title": "业务",
          "collapsable": false,
          "children": [
            "抽奖.md"
          ]
        }
      ],
      "/db/es/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "es写入和查询的工作原理是什么啊.md",
            "es在数据量很大的情况下数十亿级别如何提高查询效率啊.md",
            "es的分布式架构原理能说一下么.md",
            "ES选举-类Bully算法.md",
            "ES面试基础知识要点.md",
            "倒排索引更具体的解释.md",
            "底层lucene和倒排索引.md"
          ]
        }
      ],
      "/db/mysql/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "explain.md",
            "InnoDB什么时候用行锁和表锁.md",
            "innodb行锁实现方式.md",
            "MyISAM和InnoDB区别.md",
            "MySQL中的重做日redolog和undolog以及binlog.md",
            "MySQL主从同步延时问题.md",
            "MYSQL主从复制.md",
            "MYSQL事务和隔离级别.md",
            "mysql同步的三种方式.md",
            "Mysql新知识20200818.md",
            "一条SQL语句执行得很慢的原因有哪些.md",
            "为什么要分库分表.md",
            "乐观锁和悲观锁.md",
            "什么是MVCC.md",
            "分布式事务以及单个事务执行过程.md",
            "分库分表中间件对比和原理.md",
            "分库分表之后id主键如何处理.md",
            "分库分表的分页查询.md",
            "大表优化.md",
            "如何设计可以动态扩容缩容的分库分表方案.md",
            "引擎区别.md",
            "数据库引擎情况.md",
            "数据的基本知识.md",
            "最终一致性其实比MVCC简单.md",
            "海量数据limit慢.md",
            "索引.md",
            "自己或公司实现分库分表中间件.md",
            "锁机制与InnoDB锁算法.md"
          ]
        }
      ],
      "/db/redis/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "20万用户同时访问一个热点缓存的问题.md",
            "Mysql索引和redis跳表.md",
            "rediscluster原理和哨兵方式的优缺点.md",
            "rediscluster集群部署方式.md",
            "redis一致性哈希算法.md",
            "Redis主从架构.md",
            "redis内存淘汰机制.md",
            "redis几种递进的高可用方案.md",
            "redis取模一致性哈希slot算法演进.md",
            "Redis命令时间复杂度.md",
            "redis哨兵协议具体介绍.md",
            "redis实现互斥锁.md",
            "redis持久化.md",
            "redis的内存碎片化问题怎么解决.md",
            "redis的过期策略都有哪些.md",
            "redis的雪崩穿透和击穿以及应对方案.md",
            "redis雪崩穿透和击穿以及对应的方案.md",
            "为什么说Redis是单线程的以及Redis为什么这么快.md",
            "发布订阅者模式.md",
            "如何保证缓存与数据库的双写一致性.md",
            "如何正确访问Redis中的海量数据.md",
            "生产环境中的redis是怎么部署的.md"
          ]
        }
      ],
      "/distri/rpc/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "dubbo原理详解.md",
            "moa大致.md",
            "什么是RPC.md",
            "序列化框架对比.md",
            "自己实现RPC框架.md"
          ]
        }
      ],
      "/distri/the/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "4种分布式限流方案.md",
            "cap和base.md",
            "hystrix使用和原理以及自己是如何降级的.md",
            "三个协议的精简说法.md",
            "保证分布式系统数据一致性的6种方案.md",
            "几种负载均衡.md",
            "几种负载均衡的算法.md",
            "分布式-ap-gossip协议.md",
            "分布式-cap和base和acid总体.md",
            "分布式-cp-paxos协议.md",
            "分布式-cp-raft协议.md",
            "分布式-cp-zab协议.md",
            "分布式-cp-zab和paxoy和raft区别.md",
            "分布式ID生成方案.md",
            "分布式一ca-2pc和3pc以及tcc协议.md",
            "分布式回调.md",
            "分布式异步回调模型的回调策略.md",
            "分布式服务接口请求的顺序性如何保证.md",
            "分布式系统内的时间时钟和事件顺序.md",
            "分布式锁的实现方式.md",
            "可靠消息最终一致性方案.md",
            "如何建立一个分布式计数器.md",
            "如何架构分布式系统.md",
            "如何设计一个高并发系统.md",
            "如何设计分布式系统.md"
          ]
        }
      ],
      "/distri/zk/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "zab协议.md",
            "zk实现分布式锁.md",
            "zk实现注册中心.md",
            "zk问答.md",
            "ZooKeeper典型应用场景一览.md",
            "Zookeeper分布式过程协同技术详解.md"
          ]
        }
      ],
      "/internet/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "GET和POST的区别.md",
            "HTTPS中的TLS.md",
            "HTTP和HTTPS的区别.md",
            "HTTP方法.md",
            "HTTP状态.md",
            "从输入网址到获得页面的网络请求过程.md",
            "如何理解HTTP协议是无状态的.md",
            "网络安全.md",
            "非对称加密.md"
          ]
        }
      ],
      "/interview/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "HR.md",
            "Java集合框架常见面试题.md",
            "JVM面试题.md",
            "kafka问答.md",
            "MYSQL问答.md",
            "redis问答.md",
            "spring问答.md",
            "zk问答.md",
            "框架.md",
            "算法问答.md",
            "网络.md",
            "美团面试题.md",
            "进程线程相关.md",
            "需要问的问题.md"
          ]
        }
      ],
      "/java/collection/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "ArrayList集合加入1万条数据.md",
            "Arrays.asList获得的List使用时需要注意什么.md",
            "bean作用域生命周期.md",
            "Comparable与Comparator的区别.md",
            "CopyOnWriteArrayList原理.md",
            "finally执行顺序.md",
            "hashmap原理.md",
            "hashmap的死循环详解.md",
            "Java集合框架更多细节.md",
            "jdk5-10.md",
            "RestControllerVSController.md",
            "Set如何保证元素不重复.md",
            "springmvc.md",
            "spring中的设计模式.md",
            "spring问题.md",
            "动态代理两种方式及其区别.md",
            "反射有什么作用.md",
            "异常原理分类.md",
            "面向对象三大特征和5个原则.md"
          ]
        }
      ],
      "/java/io/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "BIONIO与AIO的区别.md",
            "IO和NIO的区别.md",
            "IO多路复用机制.md",
            "IO模式和IO多路复用.md"
          ]
        }
      ],
      "/java/spring/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "spring的事务和传递性.md"
          ]
        }
      ],
      "/java/thread/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "多线程到底该设置多少个线程.md",
            "如何减少线程上下文切换.md",
            "线程间通信和进程间通信.md"
          ]
        }
      ],
      "/kafka/": [
        {
          "title": "工程算法",
          "collapsable": false,
          "children": [
            "kafka为什么这么快.md",
            "kafka写入过程.md",
            "Kafka架构原理.md",
            "kafka消费过程.md",
            "kafka等MQ对比kafka为什么要用.md",
            "kafka高可用.md",
            "如何保证消息的可靠性传输.md",
            "如何保证消息的顺序性.md",
            "如何保证消息队列的高可用.md",
            "如何解决消息队列的延时以及过期失效问题.md",
            "如果让你写一个消息队列该如何进行架构设计.md",
            "消息队列有什么优点和缺点以及各个对比.md"
          ]
        }
      ],
      "/q&a/interview/": [
        {
          "title": "",
          "collapsable": false,
          "children": [
            "Collections-FAQ.md",
            "Design-Pattern-FAQ.md",
            "Elasticsearch-FAQ.md",
            "GC-FAQ.md",
            "Java-Basics-FAQ.md",
            "JUC-FAQ.md",
            "JVM-FAQ.md",
            "Kafka-FAQ.md",
            "MyBatis-FAQ.md",
            "MySQL-FAQ.md",
            "Network-FAQ.md",
            "networks-interview.md",
            "Redis-FAQ.md",
            "Spring-FAQ.md",
            "SpringBoot-FAQ.md",
            "Tomcat-FAQ.md",
            "ZooKeeper-FAQ.md"
          ]
        }
      ],
      "/q&a/self/": [
        {
          "title": "基础问答",
          "collapsable": false,
          "children": [
            "",
            "articles/JVM.md",
            "articles/Collection.md",
            "articles/ThreadPool.md",
            "articles/JavaLocks.md",
            "articles/DistrLocks.md",
            "articles/Spring.md",
            "articles/HighAvailability.md",
            "articles/Mysql.md",
            "articles/MysqlIndexTheory.md",
            "articles/MysqlLockTheory.md",
            "articles/Redis.md",
            "articles/Kafka.md",
            "articles/zk.md",
            "articles/Es.md",
            "articles/Common.md"
          ]
        }
      ],
      "/q&a/tuji/": [
        {
          "title": "突击",
          "collapsable": false,
          "children": [
            "MySQL分库分表.md",
            "分布式事务解决方案.md",
            "突破Java面试(02) - Redis如何通过读写分离来承载读请求QPS超过10万.md",
            "突破Java面试(06)-如何保证消息队列的高可用性.md",
            "突破Java面试(8)-MQ的数据去哪了.md",
            "突破Java面试(9)-如何保证消息队列的顺序性.md",
            "突破Java面试(11)-你怎么设计一个消息队列.md",
            "突破Java面试(19) - 分布式缓存的第一个问题.md",
            "突破Java面试(23-9) - 深入解析Redis哨兵底层原理.md",
            "突破Java面试(25) - Redis cluster集群模式的原理.md",
            "突破Java面试(29) - 生产环境的redis集群的部署架构是怎么样的.md",
            "突破Java面试(32)-为什么要把系统拆分成分布式的？为啥要用dubbo.md",
            "突破Java面试(33)-Dubbo的工作原理.md",
            "突破Java面试(35)-Dubbo负载均衡及动态代理的策略.md",
            "突破Java面试(37)-基于Dubbo的服务治理、服务降级以及重试.md",
            "突破Java面试(38)-分布式服务接口的幂等性.md",
            "突破Java面试(40)-如何设计一个类似Dubbo的RPC框架.md",
            "突破Java面试(41)-ZooKeeper的适用场景.md",
            "突破Java面试(42) - Redis & ZooKeeper两种分布式锁实现的优劣.md",
            "突破Java面试(43)-分布式Session方案的实现.md",
            "突破Java面试(45)-设计一个高并发系统.md",
            "突破Java面试(47)-分库分表的实践.md"
          ]
        }
      ],
      "/self/": [
        {
          "title": "总结学习",
          "collapsable": false,
          "children": [
            "redis自己实现延迟队列以及时间轮和rabbitmq实现原理.md",
            "项目总结以及知识点.md",
            "系统平台化建设思路一.md",
            "系统平台化建设思路二.md",
            "系统设计方法.md"
          ]
        }
      ]
    },
    "sidebarDepth": 3,
    "lastUpdated": "上次更新",
    "repo": "https://github.com/txxs/mark",
    "repoLabel": "GitHub",
    "docsBranch": "master",
    "editLinks": true,
    "editLinkText": "帮助我们改善此页面！",
    "logo": "/mlogo.svg",
    "serviceWorker": {
      "updatePopup": true
    },
    "nav": [
      {
        "text": "博客github",
        "link": "https://txxs.github.io/record/"
      },
      {
        "text": "工程算法",
        "items": [
          {
            "text": "个人总结",
            "link": "/algo/"
          }
        ]
      },
      {
        "text": "业务",
        "items": [
          {
            "text": "buss",
            "link": "/buss/"
          }
        ]
      },
      {
        "text": "数据库",
        "items": [
          {
            "text": "ES",
            "link": "/db/es/"
          },
          {
            "text": "Mysql",
            "link": "/db/mysql/"
          },
          {
            "text": "redis",
            "link": "/db/redis/"
          }
        ]
      },
      {
        "text": "分布式",
        "items": [
          {
            "text": "理论",
            "link": "/distri/the/"
          },
          {
            "text": "rpc",
            "link": "/distri/rpc/"
          },
          {
            "text": "zk",
            "link": "/distri/zk/"
          }
        ]
      },
      {
        "text": "网络",
        "items": [
          {
            "text": "网络",
            "link": "/internet/"
          }
        ]
      },
      {
        "text": "问答",
        "items": [
          {
            "text": "问答",
            "link": "/interview/"
          }
        ]
      },
      {
        "text": "java",
        "items": [
          {
            "text": "collection",
            "link": "/java/collection/"
          },
          {
            "text": "thread",
            "link": "/java/thread/"
          },
          {
            "text": "io",
            "link": "/java/io/"
          },
          {
            "text": "spring",
            "link": "/java/spring/"
          }
        ]
      },
      {
        "text": "kafka",
        "items": [
          {
            "text": "kafka",
            "link": "/kafka/"
          }
        ]
      },
      {
        "text": "q&a",
        "items": [
          {
            "text": "问答",
            "link": "/q&a/interview/"
          },
          {
            "text": "自己",
            "link": "/q&a/self/"
          },
          {
            "text": "突击",
            "link": "/q&a/tuji/"
          }
        ]
      },
      {
        "text": "总结",
        "items": [
          {
            "text": "问答",
            "link": "/self/"
          }
        ]
      }
    ]
  }
}
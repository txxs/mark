{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{426:function(n,s,o){\"use strict\";o.r(s);var t=o(13),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,o=n._self._c||s;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[o(\"h3\",{attrs:{id:\"一、异步复制-asynchronous-replication\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、异步复制-asynchronous-replication\"}},[n._v(\"#\")]),n._v(\" 一、异步复制（Asynchronous replication）\")]),n._v(\" \"),o(\"p\",[n._v(\"1、逻辑上\")]),n._v(\" \"),o(\"p\",[n._v(\"MySQL默认的复制即是异步的，主库在执行完客户端提交的事务后会立即将结果返给给客户端，并不关心从库是否已经接收并处理，这样就会有一个问题，主如果crash掉了，此时主上已经提交的事务可能并没有传到从库上，如果此时，强行将从提升为主，可能导致新主上的数据不完整。\")]),n._v(\" \"),o(\"p\",[n._v(\"2、技术上\")]),n._v(\" \"),o(\"p\",[n._v(\"主库将事务 Binlog 事件写入到 Binlog 文件中，此时主库只会通知一下 Dump 线程发送这些新的 Binlog，然后主库就会继续处理提交操作，而此时不会保证这些 Binlog 传到任何一个从库节点上。\")]),n._v(\" \"),o(\"h3\",{attrs:{id:\"二、全同步复制-fully-synchronous-replication\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、全同步复制-fully-synchronous-replication\"}},[n._v(\"#\")]),n._v(\" 二、全同步复制（Fully synchronous replication）\")]),n._v(\" \"),o(\"p\",[n._v(\"1、逻辑上\")]),n._v(\" \"),o(\"p\",[n._v(\"指当主库执行完一个事务，所有的从库都执行了该事务才返回给客户端。因为需要等待所有从库执行完该事务才能返回，所以全同步复制的性能必然会收到严重的影响。\")]),n._v(\" \"),o(\"p\",[n._v(\"2、技术上\")]),n._v(\" \"),o(\"p\",[n._v(\"当主库提交事务之后，所有的从库节点必须收到、APPLY并且提交这些事务，然后主库线程才能继续做后续操作。但缺点是，主库完成一个事务的时间会被拉长，性能降低。\")]),n._v(\" \"),o(\"h3\",{attrs:{id:\"三、半同步复制-semisynchronous-replication\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、半同步复制-semisynchronous-replication\"}},[n._v(\"#\")]),n._v(\" 三、半同步复制（Semisynchronous replication）\")]),n._v(\" \"),o(\"p\",[n._v(\"1、逻辑上\")]),n._v(\" \"),o(\"p\",[n._v(\"是介于全同步复制与全异步复制之间的一种，主库只需要等待至少一个从库节点收到并且 Flush Binlog 到 Relay Log 文件即可，主库不需要等待所有从库给主库反馈。同时，这里只是一个收到的反馈，而不是已经完全完成并且提交的反馈，如此，节省了很多时间。\")]),n._v(\" \"),o(\"p\",[n._v(\"2、技术上\")]),n._v(\" \"),o(\"p\",[n._v(\"介于异步复制和全同步复制之间，主库在执行完客户端提交的事务后不是立刻返回给客户端，而是等待至少一个从库接收到并写到relay log中才返回给客户端。相对于异步复制，半同步复制提高了数据的安全性，同时它也造成了一定程度的延迟，这个延迟最少是一个TCP/IP往返的时间。所以，半同步复制最好在低延时的网络中使用。\")])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}
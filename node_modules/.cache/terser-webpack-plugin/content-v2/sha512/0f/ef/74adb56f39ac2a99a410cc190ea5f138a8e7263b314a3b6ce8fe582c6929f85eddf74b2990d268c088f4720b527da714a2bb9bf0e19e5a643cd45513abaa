{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{467:function(s,e,n){\"use strict\";n.r(e);var a=n(13),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h3\",{attrs:{id:\"使用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用\"}},[s._v(\"#\")]),s._v(\" 使用\")]),s._v(\" \"),n(\"p\",[s._v(\"https://blog.csdn.net/maoyeqiu/article/details/78522416\")]),s._v(\" \"),n(\"p\",[s._v(\"hystrix提供5部分的服务，分别是降级、隔离、熔断器、异常和缓存\")]),s._v(\" \"),n(\"p\",[s._v(\"1、 降级\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('@HystrixCommand(fallbackMethod = \"fallback\")\\n\\n\\n@HystrixCommand(\\n                commandProperties = {\\n                        @HystrixProperty(name = \"execution.isolation.thread.timeoutInMilliseconds\", value =\"40000\"),\\n                }\\n        )\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\")])]),n(\"p\",[s._v(\"2、隔离\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('        @HystrixCommand(\\n                //表示所属的group，一个group共用线程池,默认使用类名作为一个组,\\n\\t\\t\\t\\t//同一个分组，使用相同的线程池，线程池的个数按照最小的定义限定，所以线程池定义一次就可以了，再次使用的时候直接定义分组\\n                //同一个分组，不同的线程池，按照不同的线程池来限定\\n                groupKey = \"GroupOne\",\\n                //线程池的名称\\n                threadPoolKey = \"groupOnePoolE\",\\n                fallbackMethod = \"fallbackTest\",\\n                commandProperties = {\\n                        @HystrixProperty(name = \"execution.isolation.thread.timeoutInMilliseconds\", value =\"20000\"),\\n                },\\n                //以下这些值，在分组的情况下有效\\n                threadPoolProperties = {\\n                        //核心线程数\\n                        @HystrixProperty(name = \"coreSize\", value = \"3\"),\\n                        //超过队列的个数会直接失败\\n                        @HystrixProperty(name = \"maxQueueSize\", value = \"10\"),\\n                        //队列小于最大值，拒绝请求\\n                        @HystrixProperty(name = \"queueSizeRejectionThreshold\", value = \"3\")\\n                        //总结：请求数目大于核心线程数+队列的拒绝数的时候就会失败，配置降级方法的时候，不会失败直接调用降级方法\\n                        //默认的情况下，以service的名称作为线程池的名称，使用HystrixCommand默认情况下coreSize为10，maxQueueSize使用LinkedBlockingQueue动态拓展，queueSizeRejectionThreshold默认大小值5\\n                }\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\")])]),n(\"p\",[s._v(\"3、熔断器\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(' @HystrixCommand(\\n                commandProperties = {\\n                        @HystrixProperty(name = \"execution.isolation.thread.timeoutInMilliseconds\", value =\"11000\"),\\n                        //是否开启熔断器\\n                        @HystrixProperty(name = \"circuitBreaker.enabled\", value =\"true\"),\\n                        //请求的失败数目超过这个之后，就会打开熔断器\\n                        @HystrixProperty(name = \"circuitBreaker.requestVolumeThreshold\", value =\"5\"),\\n                        //熔断器工作时间，默认5秒，超过这个时间便会放流量进去\\n                        @HystrixProperty(name = \"circuitBreaker.sleepWindowInMilliseconds\", value =\"50000\"),\\n                        //出错率超过75%，启动熔断器，默认50%\\n                        @HystrixProperty(name = \"circuitBreaker.errorThresholdPercentage\", value =\"75\"),\\n                }\\n        )\\n\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])]),n(\"p\",[s._v(\"4、异常\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('        /**\\n         * 以下方式抛出RuntimeException异常的时候不会降级，而是直接按照异常进行处理，将异常抛给调用端\\n         * 如果没有在ignoreExceptions中添加RuntimeException，则会将异常按照降级方法进行处理\\n         * @return\\n         */\\n        @HystrixCommand(ignoreExceptions = {RuntimeException.class},fallbackMethod = \"fallback\")\\n\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"原理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原理\"}},[s._v(\"#\")]),s._v(\" 原理\")]),s._v(\" \"),n(\"p\",[s._v(\"https://blog.csdn.net/maoyeqiu/article/details/78393330\")]),s._v(\" \"),n(\"p\",[s._v(\"针对造成服务雪崩的不同原因, 可以使用不同的应对策略:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"流量控制\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"改进缓存模式\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"服务自动扩容\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"服务调用者降级服务\")])])]),s._v(\" \"),n(\"p\",[s._v(\"流量控制 的具体措施包括:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"网关限流\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"用户交互限流\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"关闭重试\")])])]),s._v(\" \"),n(\"p\",[s._v(\"1、用户交互限流的具体措施有:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"采用加载动画,提高用户的忍耐等待时间.\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"提交按钮添加强制等待时间机制.\")])])]),s._v(\" \"),n(\"p\",[s._v(\"2、改进缓存模式 的措施包括:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"缓存预加载\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"同步改为异步刷新\")])])]),s._v(\" \"),n(\"p\",[s._v(\"3、服务自动扩容 的措施主要有:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"AWS的auto scaling\")])]),s._v(\" \"),n(\"p\",[s._v(\"4、服务调用者降级服务 的措施包括:\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"资源隔离\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"对依赖服务进行分类\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"不可用服务的调用快速失败\")])])]),s._v(\" \"),n(\"h3\",{attrs:{id:\"自己如何实现降级的\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自己如何实现降级的\"}},[s._v(\"#\")]),s._v(\" 自己如何实现降级的\")]),s._v(\" \"),n(\"p\",[s._v(\"1、比如一个红包是拆成一个1000份的，当进入奖池的人数，超多1000的时候，后边的人数只有一半的尾号的尾号放进来，超过10000的时候再放一半的尾号\")]),s._v(\" \"),n(\"p\",[s._v(\"2、在一开始的时候就开始按照一种规则降级，QPS超过5的时候，后边的请求直接放掉\")]),s._v(\" \"),n(\"p\",[s._v(\"3、所以最终的方案是：1000份的红包，先流入5000个进入奖池不限流，后边的请求，按照5S的QPS进行限制\")])])}),[],!1,null,null,null);e.default=t.exports}}]);","extractedComments":[]}
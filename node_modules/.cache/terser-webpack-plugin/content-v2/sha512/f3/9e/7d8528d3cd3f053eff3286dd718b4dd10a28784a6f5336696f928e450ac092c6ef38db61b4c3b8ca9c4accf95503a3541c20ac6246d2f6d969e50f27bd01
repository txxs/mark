{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{517:function(v,_,t){\"use strict\";t.r(_);var a=t(13),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"为什么使用mq-mq的优点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么使用mq-mq的优点\"}},[v._v(\"#\")]),v._v(\" 为什么使用MQ？MQ的优点\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"异步处理 - 相比于传统的串行、并行方式，提高了系统吞吐量。\")]),v._v(\" \"),t(\"li\",[v._v(\"应用解耦 - 系统间通过消息通信，不用关心其他系统的处理。\")]),v._v(\" \"),t(\"li\",[v._v(\"流量削锋 - 可以通过消息队列长度控制请求量；可以缓解短时间内的高并发请求。\")]),v._v(\" \"),t(\"li\",[v._v(\"日志处理 - 解决大量日志传输。\")]),v._v(\" \"),t(\"li\",[v._v(\"消息通讯 - 消息队列一般都内置了高效的通信机制，因此也可以用在纯的消息通讯。比如实现点对点消息队列，或者聊天室等\")])]),v._v(\" \"),t(\"h3\",{attrs:{id:\"kafka、activemq、rabbitmq、rocketmq-有什么优缺点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kafka、activemq、rabbitmq、rocketmq-有什么优缺点\"}},[v._v(\"#\")]),v._v(\" Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？\")]),v._v(\" \"),t(\"table\",[t(\"thead\",[t(\"tr\",[t(\"th\"),v._v(\" \"),t(\"th\",[v._v(\"RabbitMQ\")]),v._v(\" \"),t(\"th\",[v._v(\"ActiveMQ\")]),v._v(\" \"),t(\"th\",[v._v(\"RocketMQ\")]),v._v(\" \"),t(\"th\",[v._v(\"Kafka\")])])]),v._v(\" \"),t(\"tbody\",[t(\"tr\",[t(\"td\",[v._v(\"所属社区/公司\")]),v._v(\" \"),t(\"td\",[v._v(\"Rabbit\")]),v._v(\" \"),t(\"td\",[v._v(\"Apache\")]),v._v(\" \"),t(\"td\",[v._v(\"Ali\")]),v._v(\" \"),t(\"td\",[v._v(\"Apache\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"开发语言\")]),v._v(\" \"),t(\"td\",[v._v(\"Erlang\")]),v._v(\" \"),t(\"td\",[v._v(\"Java\")]),v._v(\" \"),t(\"td\",[v._v(\"Java\")]),v._v(\" \"),t(\"td\",[v._v(\"Scala&Java\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"多语言支持\")]),v._v(\" \"),t(\"td\",[v._v(\"语言无关\")]),v._v(\" \"),t(\"td\",[v._v(\"支持，Java优先\")]),v._v(\" \"),t(\"td\",[v._v(\"Java\")]),v._v(\" \"),t(\"td\",[v._v(\"支持，Java优先\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"消息推拉模式\")]),v._v(\" \"),t(\"td\",[v._v(\"多协议，Pull/Push均支持\")]),v._v(\" \"),t(\"td\",[v._v(\"多协议，Pull/Push均支持\")]),v._v(\" \"),t(\"td\",[v._v(\"多协议，Pull/Push均支持\")]),v._v(\" \"),t(\"td\",[v._v(\"Pull\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"HA\")]),v._v(\" \"),t(\"td\",[v._v(\"master/slave模式，master提供服务，slave仅作备份\")]),v._v(\" \"),t(\"td\",[v._v(\"基于zookeeper+levelDB的master-slave实现方式\")]),v._v(\" \"),t(\"td\",[v._v(\"支持多master模式、多master多slave模式、异步复制模式、\")]),v._v(\" \"),t(\"td\",[v._v(\"支持replica机制。leader宕掉后，备份自动顶替，并重选leader\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"事务\")]),v._v(\" \"),t(\"td\",[v._v(\"不支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"不支持，可通过Low Level API保证仅消费一次\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"集群\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")])]),v._v(\" \"),t(\"tr\",[t(\"td\",[v._v(\"负载均衡\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")]),v._v(\" \"),t(\"td\",[v._v(\"支持\")])])])]),v._v(\" \"),t(\"h3\",{attrs:{id:\"mq-有哪些常见问题-如何解决这些问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mq-有哪些常见问题-如何解决这些问题\"}},[v._v(\"#\")]),v._v(\" MQ 有哪些常见问题？如何解决这些问题？\")]),v._v(\" \"),t(\"p\",[v._v(\"MQ 的常见问题有：\")]),v._v(\" \"),t(\"ol\",[t(\"li\",[v._v(\"消息的顺序问题\")]),v._v(\" \"),t(\"li\",[v._v(\"消息的重复问题\")])])])}),[],!1,null,null,null);_.default=e.exports}}]);","extractedComments":[]}
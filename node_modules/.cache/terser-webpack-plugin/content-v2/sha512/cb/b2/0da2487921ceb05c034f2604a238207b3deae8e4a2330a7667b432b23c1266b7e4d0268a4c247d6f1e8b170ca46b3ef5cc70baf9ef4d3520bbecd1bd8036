{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{477:function(t,r,e){\"use strict\";e.r(r);var a=e(13),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"p\",[t._v(\"前段时间觉得自己一直用别人的框架，站在巨人的肩膀上，也该自己造造轮子了\\n一时兴起 就着手写起了RPC框架 这里写了系列博客拿给大家分享下\\n这篇是开篇的思路篇 项目最终的代码放在了我的github上\\nhttps://github.com/wephone/Me...\\n欢迎star,提issues\")]),t._v(\" \"),e(\"p\",[t._v(\"首先说下关于RPC的几个常见问题\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"什么是rpc\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是rpc\"}},[t._v(\"#\")]),t._v(\" 什么是RPC\")]),t._v(\" \"),e(\"p\",[t._v(\"PRC：Remote Procedure Call 远程过程调用，在分布式系统中，每个节点之间的通信都是靠RPC来完成 RPC是分布式应用的基本组件\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"常见的rpc框架\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常见的rpc框架\"}},[t._v(\"#\")]),t._v(\" 常见的RPC框架\")]),t._v(\" \"),e(\"p\",[t._v(\"Apache的Thrift\")]),t._v(\" \"),e(\"p\",[t._v(\"Google的gprc\")]),t._v(\" \"),e(\"p\",[t._v(\"阿里巴巴的dubbo等\")]),t._v(\" \"),e(\"p\",[t._v(\"dubbo应该是3这中最简单易用的了，但dubbo只支持Java语言，thrift和gprc都是支持跨语言的，并且dubbo内部帮你实现了对分布式注册中心zookeeper的使用，另外两个仍需自己实现对注册中心的操作。\")]),t._v(\" \"),e(\"p\",[t._v(\"thrift grpc等之所以支持跨语言，是因为他们自己定义了一套结构化数据存储格式，如Google的protobuf，用于编解码对象，作为各个语言通信的中间协议。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"rpc和http请求有什么区别\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rpc和http请求有什么区别\"}},[t._v(\"#\")]),t._v(\" RPC和HTTP请求有什么区别\")]),t._v(\" \"),e(\"p\",[t._v(\"HTTP也可以实现RPC，比如eruka，RPC是一个概念，普通web开发的curl rest接口，也可以算作一种基于HTTP协议的RPC调用\\nRPC的使用比起curl一个重要的点就是忽略底层细节，像使用本地服务一样调用远程服务 我们将在RPC框架中使用动态代理来实现这个要求\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"实现思路\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现思路\"}},[t._v(\"#\")]),t._v(\" 实现思路\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"RPC有两个使用方 一个是本地调用端 一个是远程实现端\")]),t._v(\" \"),e(\"li\",[t._v(\"调用端使用动态代理 代理我们需要远程调度的接口 实现忽略底层细节 像使用本地服务一样使用调用远程服务\")]),t._v(\" \"),e(\"li\",[t._v(\"将我们本地调用的接口方法信息(形参，方法名，返回类型等)通过网络发送至远程实现端\")]),t._v(\" \"),e(\"li\",[t._v(\"远程实现端接收到相应信息，反射调用对象的实现类\")]),t._v(\" \"),e(\"li\",[t._v(\"执行完实现类后把返回值发回给调用端\")]),t._v(\" \"),e(\"li\",[t._v(\"调用端接收到返回值，代理返回结果 远程调用完毕\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"实现细节\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现细节\"}},[t._v(\"#\")]),t._v(\" 实现细节\")]),t._v(\" \"),e(\"p\",[t._v(\"使用Netty作为Java端网络传输框架\\n为尽量支持跨语言 传输数据编解码使用json格式（本来想用protobuf 但它只支持强类型Int这种 不支持编解码Object这样的弱类型 会降低使用的灵活性）\\n下一篇博客中 将带大家用11个Java类 实现一个基于spring的Java RPC框架\\n暂时不使用一些常见设计模式，暂时不做zookeeper的支持和异常处理等细节问题\")]),t._v(\" \"),e(\"p\",[t._v(\"后续版本再对这个demo进行优化，并支持zookeeper\")])])}),[],!1,null,null,null);r.default=v.exports}}]);","extractedComments":[]}